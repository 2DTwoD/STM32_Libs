Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    main.o(.text.__cxx_global_var_init) refers to main.o(.bss.led) for led
    main.o(.text.__cxx_global_var_init) refers to coil_with_timer.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) for CoilOffDelay::CoilOffDelay(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init) refers to main.o(.text.__cxx_global_var_init) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.1) refers to main.o(.bss.button) for button
    main.o(.text.__cxx_global_var_init.1) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.1) refers to main.o(.text.__cxx_global_var_init.1) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.2) refers to main.o(.bss.delay) for delay
    main.o(.text.__cxx_global_var_init.2) refers to on_delay.o(.text._ZN7OnDelayC2Ej) for OnDelay::OnDelay(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.2) refers to main.o(.text.__cxx_global_var_init.2) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.3) refers to main.o(.bss.adcMonitor) for adcMonitor
    main.o(.text.__cxx_global_var_init.3) refers to analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff) for AnalogMonitor::AnalogMonitor(unsigned char, float, float)
    main.o(.text.__cxx_global_var_init.3) refers to analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) for AnalogMonitor::~AnalogMonitor()
    main.o(.text.__cxx_global_var_init.3) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.3) refers to main.o(.text.__cxx_global_var_init.3) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.4) refers to main.o(.bss.analogOut) for analogOut
    main.o(.text.__cxx_global_var_init.4) refers to analog_out.o(.text._ZN9AnalogOutC2Etjffff) for AnalogOut::AnalogOut(unsigned short, unsigned int, float, float, float, float)
    main.o(.text.__cxx_global_var_init.4) refers to analog_out.o(.text._ZN9AnalogOutD2Ev) for AnalogOut::~AnalogOut()
    main.o(.text.__cxx_global_var_init.4) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.4) refers to main.o(.text.__cxx_global_var_init.4) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.5) refers to main.o(.bss.pid) for pid
    main.o(.text.__cxx_global_var_init.5) refers to pid.o(.text._ZN6PIDregC2Etfffffffb) for PIDreg::PIDreg(unsigned short, float, float, float, float, float, float, float, bool)
    main.o(.ARM.exidx.text.__cxx_global_var_init.5) refers to main.o(.text.__cxx_global_var_init.5) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.6) refers to main.o(.bss.scale) for scale
    main.o(.text.__cxx_global_var_init.6) refers to main.o(.text._ZN5ScaleIfsEC2Effss) for Scale<float, short>::Scale__sub_object(float, float, short, short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.6) refers to main.o(.text.__cxx_global_var_init.6) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.7) refers to main.o(.bss.ramp) for ramp
    main.o(.text.__cxx_global_var_init.7) refers to ramp.o(.text._ZN4RampC2Ej) for Ramp::Ramp(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.7) refers to main.o(.text.__cxx_global_var_init.7) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.8) refers to main.o(.bss.avg) for avg
    main.o(.text.__cxx_global_var_init.8) refers to moving_avg.o(.text._ZN6MovAvgC2Eh) for MovAvg::MovAvg(unsigned char)
    main.o(.text.__cxx_global_var_init.8) refers to moving_avg.o(.text._ZN6MovAvgD2Ev) for MovAvg::~MovAvg()
    main.o(.text.__cxx_global_var_init.8) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.8) refers to main.o(.text.__cxx_global_var_init.8) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.9) refers to main.o(.bss.twoPos) for twoPos
    main.o(.text.__cxx_global_var_init.9) refers to two_pos.o(.text._ZN9TwoPosTimC2Efttb) for TwoPosTim::TwoPosTim(float, unsigned short, unsigned short, bool)
    main.o(.text.__cxx_global_var_init.9) refers to two_pos.o(.text._ZN9TwoPosTimD2Ev) for TwoPosTim::~TwoPosTim()
    main.o(.text.__cxx_global_var_init.9) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.9) refers to main.o(.text.__cxx_global_var_init.9) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.10) refers to main.o(.bss.threePosReg) for threePosReg
    main.o(.text.__cxx_global_var_init.10) refers to three_pos.o(.text._ZN11ThreePosRegC2Efffttb) for ThreePosReg::ThreePosReg(float, float, float, unsigned short, unsigned short, bool)
    main.o(.text.__cxx_global_var_init.10) refers to three_pos.o(.text._ZN11ThreePosRegD2Ev) for ThreePosReg::~ThreePosReg()
    main.o(.text.__cxx_global_var_init.10) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.10) refers to main.o(.text.__cxx_global_var_init.10) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.11) refers to main.o(.bss.onDelay) for onDelay
    main.o(.text.__cxx_global_var_init.11) refers to on_delay.o(.text._ZN7OnDelayC2Ej) for OnDelay::OnDelay(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.11) refers to main.o(.text.__cxx_global_var_init.11) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.12) refers to main.o(.bss.offDelay) for offDelay
    main.o(.text.__cxx_global_var_init.12) refers to off_delay.o(.text._ZN8OffDelayC2Ej) for OffDelay::OffDelay(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.12) refers to main.o(.text.__cxx_global_var_init.12) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.13) refers to main.o(.bss.pulse) for pulse
    main.o(.text.__cxx_global_var_init.13) refers to pulse.o(.text._ZN14PulseInterraptC2Ej) for PulseInterrapt::PulseInterrapt(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.13) refers to main.o(.text.__cxx_global_var_init.13) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.14) refers to main.o(.bss.counter) for counter
    main.o(.text.__cxx_global_var_init.14) refers to counter.o(.text._ZN7CounterC2E7IMPULSEj) for Counter::Counter(IMPULSE, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.14) refers to main.o(.text.__cxx_global_var_init.14) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.15) refers to main.o(.bss.seq1) for seq1
    main.o(.text.__cxx_global_var_init.15) refers to main.o(.bss.step) for step
    main.o(.text.__cxx_global_var_init.15) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.15) refers to main.o(.text.__cxx_global_var_init.15) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.16) refers to main.o(.bss.seq2) for seq2
    main.o(.text.__cxx_global_var_init.16) refers to main.o(.bss.step) for step
    main.o(.text.__cxx_global_var_init.16) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.16) refers to main.o(.text.__cxx_global_var_init.16) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationIdleHook) refers to main.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationTickHook) refers to main.o(.text.vApplicationTickHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationMallocFailedHook) refers to main.o(.text.vApplicationMallocFailedHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to main.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    main.o(.text.TIM2_IRQHandler) refers to main.o(.data.updateObjectsSize) for updateObjectsSize
    main.o(.text.TIM2_IRQHandler) refers to main.o(.data.updateObjects) for updateObjects
    main.o(.ARM.exidx.text.TIM2_IRQHandler) refers to main.o(.text.TIM2_IRQHandler) for [Anonymous Symbol]
    main.o(.text.main) refers to init.o(.text._Z7rccInitv) for rccInit()
    main.o(.text.main) refers to init.o(.text._Z8tickInitv) for tickInit()
    main.o(.text.main) refers to init.o(.text._Z10commonInitv) for commonInit()
    main.o(.text.main) refers to init.o(.text._Z7adcInitv) for adcInit()
    main.o(.text.main) refers to init.o(.text._Z7pwmInitv) for pwmInit()
    main.o(.text.main) refers to led_task.o(.text._Z7ledTaskPv) for ledTask(void*)
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to pidtask.o(.text._Z7pidTaskPv) for pidTask(void*)
    main.o(.text.main) refers to test_task.o(.text._Z8testTaskPv) for testTask(void*)
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init) for __cxx_global_var_init
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.1) for __cxx_global_var_init.1
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.2) for __cxx_global_var_init.2
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.3) for __cxx_global_var_init.3
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.4) for __cxx_global_var_init.4
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.5) for __cxx_global_var_init.5
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.6) for __cxx_global_var_init.6
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.7) for __cxx_global_var_init.7
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.8) for __cxx_global_var_init.8
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.9) for __cxx_global_var_init.9
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.10) for __cxx_global_var_init.10
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.11) for __cxx_global_var_init.11
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.12) for __cxx_global_var_init.12
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.13) for __cxx_global_var_init.13
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.14) for __cxx_global_var_init.14
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.15) for __cxx_global_var_init.15
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.16) for __cxx_global_var_init.16
    main.o(.ARM.exidx.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text._GLOBAL__sub_I_main.cpp) for [Anonymous Symbol]
    main.o(.data.updateObjects) refers to main.o(.bss.delay) for delay
    main.o(.data.updateObjects) refers to main.o(.bss.adcMonitor) for adcMonitor
    main.o(.data.updateObjects) refers to main.o(.bss.analogOut) for analogOut
    main.o(.data.updateObjects) refers to main.o(.bss.ramp) for ramp
    main.o(.data.updateObjects) refers to main.o(.bss.twoPos) for twoPos
    main.o(.data.updateObjects) refers to main.o(.bss.threePosReg) for threePosReg
    main.o(.data.updateObjects) refers to main.o(.bss.button) for button
    main.o(.data.updateObjects) refers to main.o(.bss.onDelay) for onDelay
    main.o(.data.updateObjects) refers to main.o(.bss.offDelay) for offDelay
    main.o(.data.updateObjects) refers to main.o(.bss.pulse) for pulse
    main.o(.data.updateObjects) refers to main.o(.bss.seq2) for seq2
    main.o(.data.updateObjects) refers to main.o(.bss.led) for led
    main.o(.init_array) refers to main.o(.text._GLOBAL__sub_I_main.cpp) for _GLOBAL__sub_I_main.cpp
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to rt_memclr.o(.text) for __aeabi_memclr
    stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadBytesFromBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteBytesToBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to main.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to main.o(.text.vApplicationIdleHook) for vApplicationIdleHook
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to main.o(.text.vApplicationTickHook) for vApplicationTickHook
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    led_task.o(.text._Z7ledTaskPv) refers to main.o(.bss.button) for button
    led_task.o(.text._Z7ledTaskPv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    led_task.o(.text._Z7ledTaskPv) refers to main.o(.bss.led) for led
    led_task.o(.text._Z7ledTaskPv) refers to coil_with_timer.o(.text._ZN12CoilOffDelayaSEb) for CoilOffDelay::operator=(bool)
    led_task.o(.text._Z7ledTaskPv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    led_task.o(.ARM.exidx.text._Z7ledTaskPv) refers to led_task.o(.text._Z7ledTaskPv) for [Anonymous Symbol]
    test_task.o(.text.__cxx_global_var_init) refers to test_task.o(.bss.rise) for rise
    test_task.o(.text.__cxx_global_var_init) refers to rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE) for RFimpulse::RFimpulse(IMPULSE)
    test_task.o(.ARM.exidx.text.__cxx_global_var_init) refers to test_task.o(.text.__cxx_global_var_init) for [Anonymous Symbol]
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.adcValues) for adcValues
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.adcMonitor) for adcMonitor
    test_task.o(.text._Z8testTaskPv) refers to analog_monitor.o(.text._ZN13AnalogMonitoraSEt) for AnalogMonitor::operator=(unsigned short)
    test_task.o(.text._Z8testTaskPv) refers to monitor.o(.text._ZN7Monitor3getEv) for Monitor::get()
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.avg) for avg
    test_task.o(.text._Z8testTaskPv) refers to moving_avg.o(.text._ZN6MovAvgaSEf) for MovAvg::operator=(float)
    test_task.o(.text._Z8testTaskPv) refers to moving_avg.o(.text._ZN6MovAvg3getEv) for MovAvg::get()
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.scale) for scale
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.text._ZN5ScaleIfsEaSEf) for Scale<float, short>::operator=(float)
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.text._ZN5ScaleIfsE3getEv) for Scale<float, short>::get()
    test_task.o(.text._Z8testTaskPv) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.ramp) for ramp
    test_task.o(.text._Z8testTaskPv) refers to ramp.o(.text._ZN4RampaSEf) for Ramp::operator=(float)
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.analogOut) for analogOut
    test_task.o(.text._Z8testTaskPv) refers to analog_out.o(.text._ZN9AnalogOutaSEf) for AnalogOut::operator=(float)
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.strt) for strt
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.pulse) for pulse
    test_task.o(.text._Z8testTaskPv) refers to pulse.o(.text._ZN14PulseInterraptaSEb) for PulseInterrapt::operator=(bool)
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.rest) for rest
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.rise) for rise
    test_task.o(.text._Z8testTaskPv) refers to rf_impulse.o(.text._ZN9RFimpulseaSEb) for RFimpulse::operator=(bool)
    test_task.o(.text._Z8testTaskPv) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for RFimpulse::get()
    test_task.o(.text._Z8testTaskPv) refers to pulse.o(.text._ZN11PulseCommon5resetEv) for PulseCommon::reset()
    test_task.o(.text._Z8testTaskPv) refers to pulse.o(.text._ZN11PulseCommon3getEv) for PulseCommon::get()
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.reslt) for reslt
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.seq_start) for seq_start
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.seq1) for seq1
    test_task.o(.text._Z8testTaskPv) refers to sequence.o(.text._ZN8Sequence5startEb) for Sequence::start(bool)
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.seq_lock) for seq_lock
    test_task.o(.text._Z8testTaskPv) refers to sequence.o(.text._ZN8Sequence4lockEb) for Sequence::lock(bool)
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.seq_finish) for seq_finish
    test_task.o(.text._Z8testTaskPv) refers to sequence.o(.text._ZN8Sequence6finishEb) for Sequence::finish(bool)
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.seq2) for seq2
    test_task.o(.text._Z8testTaskPv) refers to sequence.o(.text._ZN8Sequence8finishedEv) for Sequence::finished()
    test_task.o(.text._Z8testTaskPv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    test_task.o(.ARM.exidx.text._Z8testTaskPv) refers to test_task.o(.text._Z8testTaskPv) for [Anonymous Symbol]
    test_task.o(.text._GLOBAL__sub_I_test_task.cpp) refers to test_task.o(.text.__cxx_global_var_init) for __cxx_global_var_init
    test_task.o(.ARM.exidx.text._GLOBAL__sub_I_test_task.cpp) refers to test_task.o(.text._GLOBAL__sub_I_test_task.cpp) for [Anonymous Symbol]
    test_task.o(.init_array) refers to test_task.o(.text._GLOBAL__sub_I_test_task.cpp) for _GLOBAL__sub_I_test_task.cpp
    pidtask.o(.text._Z7pidTaskPv) refers to main.o(.bss.pid) for pid
    pidtask.o(.text._Z7pidTaskPv) refers to pid.o(.text._ZN6PIDreg5setKpEf) for PIDreg::setKp(float)
    pidtask.o(.text._Z7pidTaskPv) refers to pid.o(.text._ZN6PIDreg5setTiEf) for PIDreg::setTi(float)
    pidtask.o(.text._Z7pidTaskPv) refers to pid.o(.text._ZN6PIDreg5setTdEf) for PIDreg::setTd(float)
    pidtask.o(.text._Z7pidTaskPv) refers to pid.o(.text._ZN6PIDreg7setAutoEb) for PIDreg::setAuto(bool)
    pidtask.o(.text._Z7pidTaskPv) refers to main.o(.bss.adcMonitor) for adcMonitor
    pidtask.o(.text._Z7pidTaskPv) refers to monitor.o(.text._ZN7Monitor3getEv) for Monitor::get()
    pidtask.o(.text._Z7pidTaskPv) refers to pid.o(.text._ZN6PIDregaSEf) for PIDreg::operator=(float)
    pidtask.o(.text._Z7pidTaskPv) refers to pid.o(.text._ZN6PIDreg4getTEv) for PIDreg::getT()
    pidtask.o(.text._Z7pidTaskPv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    pidtask.o(.ARM.exidx.text._Z7pidTaskPv) refers to pidtask.o(.text._Z7pidTaskPv) for [Anonymous Symbol]
    common.o(.ARM.exidx.text._Z10badTimeOutj) refers to common.o(.text._Z10badTimeOutj) for [Anonymous Symbol]
    common.o(.ARM.exidx.text._Z11getPositionj) refers to common.o(.text._Z11getPositionj) for [Anonymous Symbol]
    init.o(.text._Z10commonInitv) refers to init.o(.text._ZL26__NVIC_SetPriorityGroupingj) for __NVIC_SetPriorityGrouping(unsigned int)
    init.o(.text._Z10commonInitv) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    init.o(.ARM.exidx.text._Z10commonInitv) refers to init.o(.text._Z10commonInitv) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL26__NVIC_SetPriorityGroupingj) refers to init.o(.text._ZL26__NVIC_SetPriorityGroupingj) for [Anonymous Symbol]
    init.o(.text._Z7rccInitv) refers to init.o(.text._Z11setRegisterIVjEvPT_jj) for void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    init.o(.ARM.exidx.text._Z7rccInitv) refers to init.o(.text._Z7rccInitv) for [Anonymous Symbol]
    init.o(.text._Z8tickInitv) refers to init.o(.text._ZL16__NVIC_EnableIRQ4IRQn) for __NVIC_EnableIRQ(IRQn)
    init.o(.text._Z8tickInitv) refers to init.o(.text._ZL18__NVIC_SetPriority4IRQnj) for __NVIC_SetPriority(IRQn, unsigned int)
    init.o(.ARM.exidx.text._Z8tickInitv) refers to init.o(.text._Z8tickInitv) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL16__NVIC_EnableIRQ4IRQn) refers to init.o(.text._ZL16__NVIC_EnableIRQ4IRQn) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL18__NVIC_SetPriority4IRQnj) refers to init.o(.text._ZL18__NVIC_SetPriority4IRQnj) for [Anonymous Symbol]
    init.o(.text._Z7adcInitv) refers to init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    init.o(.text._Z7adcInitv) refers to main.o(.bss.delay) for delay
    init.o(.text._Z7adcInitv) refers to common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) for CommonTimer::prepareAndStart()
    init.o(.text._Z7adcInitv) refers to common_timer.o(.text._ZN11CommonTimer11notFinishedEv) for CommonTimer::notFinished()
    init.o(.text._Z7adcInitv) refers to main.o(.bss.adcValues) for adcValues
    init.o(.ARM.exidx.text._Z7adcInitv) refers to init.o(.text._Z7adcInitv) for [Anonymous Symbol]
    init.o(.text._Z7pwmInitv) refers to init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    init.o(.text._Z7pwmInitv) refers to init.o(.text._Z17setBitsInRegisterIVtEvPT_jj) for void setBitsInRegister<unsigned short volatile>(unsigned short volatile*, unsigned int, unsigned int)
    init.o(.ARM.exidx.text._Z7pwmInitv) refers to init.o(.text._Z7pwmInitv) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff) refers to monitor.o(.text._ZN7MonitorC2Eff) for Monitor::Monitor__sub_object(float, float)
    analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff) refers to analog_monitor.o(.rodata._ZTV13AnalogMonitor) for vtable for AnalogMonitor
    analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff) refers to analog_monitor.o(.text._ZN5ScaleItfEC2Ettff) for Scale<unsigned short, float>::Scale__sub_object(unsigned short, unsigned short, float, float)
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorC2Ehff) refers to analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) refers to analog_monitor.o(.rodata._ZTV13AnalogMonitor) for vtable for AnalogMonitor
    analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) refers to monitor.o(.text._ZN7MonitorD2Ev) for Monitor::~Monitor__sub_object()
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorD2Ev) refers to analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor3setEt) refers to analog_monitor.o(.text._ZN5ScaleItfEaSEt) for Scale<unsigned short, float>::operator=(unsigned short)
    analog_monitor.o(.text._ZN13AnalogMonitor3setEt) refers to analog_monitor.o(.text._ZN5ScaleItfE3getEv) for Scale<unsigned short, float>::get()
    analog_monitor.o(.text._ZN13AnalogMonitor3setEt) refers to monitor.o(.text._ZN7Monitor3setEf) for Monitor::set(float)
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor3setEt) refers to analog_monitor.o(.text._ZN13AnalogMonitor3setEt) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitoraSEt) refers to analog_monitor.o(.text._ZN13AnalogMonitor3setEt) for AnalogMonitor::set(unsigned short)
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitoraSEt) refers to analog_monitor.o(.text._ZN13AnalogMonitoraSEt) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor8getInRefEv) refers to analog_monitor.o(.text._ZN5ScaleItfE8getInRefEv) for Scale<unsigned short, float>::getInRef()
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor8getInRefEv) refers to analog_monitor.o(.text._ZN13AnalogMonitor8getInRefEv) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor9getOutRefEv) refers to analog_monitor.o(.text._ZN5ScaleItfE9getOutRefEv) for Scale<unsigned short, float>::getOutRef()
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor9getOutRefEv) refers to analog_monitor.o(.text._ZN13AnalogMonitor9getOutRefEv) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOutC2Etjffff) refers to ramp.o(.text._ZN4RampC2Ejffff) for Ramp::Ramp__sub_object(unsigned int, float, float, float, float)
    analog_out.o(.text._ZN9AnalogOutC2Etjffff) refers to analog_out.o(.rodata._ZTV9AnalogOut) for vtable for AnalogOut
    analog_out.o(.text._ZN9AnalogOutC2Etjffff) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    analog_out.o(.text._ZN9AnalogOutC2Etjffff) refers to analog_out.o(.text._ZN5ScaleIftEC2Efftt) for Scale<float, unsigned short>::Scale__sub_object(float, float, unsigned short, unsigned short)
    analog_out.o(.ARM.exidx.text._ZN9AnalogOutC2Etjffff) refers to analog_out.o(.text._ZN9AnalogOutC2Etjffff) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut9update1msEv) refers to ramp.o(.text._ZN4Ramp9update1msEv) for Ramp::update1ms()
    analog_out.o(.text._ZN9AnalogOut9update1msEv) refers to ramp.o(.text._ZN4Ramp3getEv) for Ramp::get()
    analog_out.o(.text._ZN9AnalogOut9update1msEv) refers to analog_out.o(.text._ZN5ScaleIftE3setEf) for Scale<float, unsigned short>::set(float)
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut9update1msEv) refers to analog_out.o(.text._ZN9AnalogOut9update1msEv) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOutD2Ev) refers to analog_out.o(.rodata._ZTV9AnalogOut) for vtable for AnalogOut
    analog_out.o(.text._ZN9AnalogOutD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    analog_out.o(.ARM.exidx.text._ZN9AnalogOutD2Ev) refers to analog_out.o(.text._ZN9AnalogOutD2Ev) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut3setEf) refers to ramp.o(.text._ZN4Ramp3setEf) for Ramp::set(float)
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut3setEf) refers to analog_out.o(.text._ZN9AnalogOut3setEf) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut3getEv) refers to ramp.o(.text._ZN4Ramp3getEv) for Ramp::get()
    analog_out.o(.text._ZN9AnalogOut3getEv) refers to ffix.o(x$fpl$ffix) for __aeabi_f2iz
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut3getEv) refers to analog_out.o(.text._ZN9AnalogOut3getEv) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOutaSEf) refers to ramp.o(.text._ZN4Ramp3setEf) for Ramp::set(float)
    analog_out.o(.ARM.exidx.text._ZN9AnalogOutaSEf) refers to analog_out.o(.text._ZN9AnalogOutaSEf) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut8getInRefEv) refers to ramp.o(.text._ZN4Ramp8getSpRefEv) for Ramp::getSpRef()
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut8getInRefEv) refers to analog_out.o(.text._ZN9AnalogOut8getInRefEv) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut9getOutRefEv) refers to analog_out.o(.text._ZN5ScaleIftE9getOutRefEv) for Scale<float, unsigned short>::getOutRef()
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut9getOutRefEv) refers to analog_out.o(.text._ZN9AnalogOut9getOutRefEv) for [Anonymous Symbol]
    analog_out.o(.rodata._ZTV9AnalogOut) refers to analog_out.o(.text._ZN9AnalogOut9update1msEv) for AnalogOut::update1ms()
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil8isActiveEv) refers to coil.o(.text._ZN12ProgrammCoil8isActiveEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil8setValueEb) refers to coil.o(.text._ZN12ProgrammCoil8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil3setEv) refers to coil.o(.text._ZN12ProgrammCoil3setEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil5resetEv) refers to coil.o(.text._ZN12ProgrammCoil5resetEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil6toggleEv) refers to coil.o(.text._ZN12ProgrammCoil6toggleEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoilaSEb) refers to coil.o(.text._ZN12ProgrammCoilaSEb) for [Anonymous Symbol]
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char)
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.text._ZN12ProgrammCoilC2Ev) for ProgrammCoil::ProgrammCoil__sub_object()
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.rodata._ZTV4Coil) for vtable for Coil
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    coil.o(.ARM.exidx.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4Coil8isActiveEv) refers to coil.o(.text._ZN4Coil8isActiveEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4Coil8setValueEb) refers to coil.o(.text._ZN4Coil8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4CoilaSEb) refers to coil.o(.text._ZN4CoilaSEb) for [Anonymous Symbol]
    coil.o(.rodata._ZTV4Coil) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil.o(.rodata._ZTV4Coil) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil.o(.rodata._ZTV12ProgrammCoil) refers to coil.o(.text._ZN12ProgrammCoil8isActiveEv) for ProgrammCoil::isActive()
    coil.o(.rodata._ZTV12ProgrammCoil) refers to coil.o(.text._ZN12ProgrammCoil8setValueEb) for ProgrammCoil::setValue(bool)
    coil_with_timer.o(.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht) refers to on_delay.o(.text._ZN13OnDelayCommonC2Ej) for OnDelayCommon::OnDelayCommon__sub_object(unsigned int)
    coil_with_timer.o(.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char)
    coil_with_timer.o(.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    coil_with_timer.o(.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht) refers to coil_with_timer.o(.rodata._ZTV11CoilOnDelay) for vtable for CoilOnDelay
    coil_with_timer.o(.ARM.exidx.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht) refers to coil_with_timer.o(.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZN11CoilOnDelay9update1msEv) refers to on_delay.o(.text._ZN13OnDelayCommon6updateEv) for OnDelayCommon::update()
    coil_with_timer.o(.text._ZN11CoilOnDelay9update1msEv) refers to on_delay.o(.text._ZN13OnDelayCommon3getEv) for OnDelayCommon::get()
    coil_with_timer.o(.text._ZN11CoilOnDelay9update1msEv) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil_with_timer.o(.ARM.exidx.text._ZN11CoilOnDelay9update1msEv) refers to coil_with_timer.o(.text._ZN11CoilOnDelay9update1msEv) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZThn32_N11CoilOnDelay9update1msEv) refers to coil_with_timer.o(.text._ZN11CoilOnDelay9update1msEv) for CoilOnDelay::update1ms()
    coil_with_timer.o(.ARM.exidx.text._ZThn32_N11CoilOnDelay9update1msEv) refers to coil_with_timer.o(.text._ZThn32_N11CoilOnDelay9update1msEv) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZN11CoilOnDelay8setValueEb) refers to on_delay.o(.text._ZN13OnDelayCommon3setEb) for OnDelayCommon::set(bool)
    coil_with_timer.o(.ARM.exidx.text._ZN11CoilOnDelay8setValueEb) refers to coil_with_timer.o(.text._ZN11CoilOnDelay8setValueEb) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZThn16_N11CoilOnDelay8setValueEb) refers to coil_with_timer.o(.text._ZN11CoilOnDelay8setValueEb) for CoilOnDelay::setValue(bool)
    coil_with_timer.o(.ARM.exidx.text._ZThn16_N11CoilOnDelay8setValueEb) refers to coil_with_timer.o(.text._ZThn16_N11CoilOnDelay8setValueEb) for [Anonymous Symbol]
    coil_with_timer.o(.ARM.exidx.text._ZN11CoilOnDelayaSEb) refers to coil_with_timer.o(.text._ZN11CoilOnDelayaSEb) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) refers to off_delay.o(.text._ZN14OffDelayCommonC2Ej) for OffDelayCommon::OffDelayCommon__sub_object(unsigned int)
    coil_with_timer.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char)
    coil_with_timer.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    coil_with_timer.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) refers to coil_with_timer.o(.rodata._ZTV12CoilOffDelay) for vtable for CoilOffDelay
    coil_with_timer.o(.ARM.exidx.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) refers to coil_with_timer.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZN12CoilOffDelay9update1msEv) refers to off_delay.o(.text._ZN14OffDelayCommon6updateEv) for OffDelayCommon::update()
    coil_with_timer.o(.text._ZN12CoilOffDelay9update1msEv) refers to off_delay.o(.text._ZN14OffDelayCommon3getEv) for OffDelayCommon::get()
    coil_with_timer.o(.text._ZN12CoilOffDelay9update1msEv) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil_with_timer.o(.ARM.exidx.text._ZN12CoilOffDelay9update1msEv) refers to coil_with_timer.o(.text._ZN12CoilOffDelay9update1msEv) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZThn32_N12CoilOffDelay9update1msEv) refers to coil_with_timer.o(.text._ZN12CoilOffDelay9update1msEv) for CoilOffDelay::update1ms()
    coil_with_timer.o(.ARM.exidx.text._ZThn32_N12CoilOffDelay9update1msEv) refers to coil_with_timer.o(.text._ZThn32_N12CoilOffDelay9update1msEv) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZN12CoilOffDelay8setValueEb) refers to off_delay.o(.text._ZN14OffDelayCommon3setEb) for OffDelayCommon::set(bool)
    coil_with_timer.o(.ARM.exidx.text._ZN12CoilOffDelay8setValueEb) refers to coil_with_timer.o(.text._ZN12CoilOffDelay8setValueEb) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZThn16_N12CoilOffDelay8setValueEb) refers to coil_with_timer.o(.text._ZN12CoilOffDelay8setValueEb) for CoilOffDelay::setValue(bool)
    coil_with_timer.o(.ARM.exidx.text._ZThn16_N12CoilOffDelay8setValueEb) refers to coil_with_timer.o(.text._ZThn16_N12CoilOffDelay8setValueEb) for [Anonymous Symbol]
    coil_with_timer.o(.ARM.exidx.text._ZN12CoilOffDelayaSEb) refers to coil_with_timer.o(.text._ZN12CoilOffDelayaSEb) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to pulse.o(.text._ZN11PulseCommonC2Ej) for PulseCommon::PulseCommon__sub_object(unsigned int)
    coil_with_timer.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char)
    coil_with_timer.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    coil_with_timer.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil_with_timer.o(.rodata._ZTV9CoilPulse) for vtable for CoilPulse
    coil_with_timer.o(.ARM.exidx.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil_with_timer.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZN9CoilPulse9update1msEv) refers to pulse.o(.text._ZN11PulseCommon6updateEv) for PulseCommon::update()
    coil_with_timer.o(.text._ZN9CoilPulse9update1msEv) refers to pulse.o(.text._ZN11PulseCommon3getEv) for PulseCommon::get()
    coil_with_timer.o(.text._ZN9CoilPulse9update1msEv) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil_with_timer.o(.ARM.exidx.text._ZN9CoilPulse9update1msEv) refers to coil_with_timer.o(.text._ZN9CoilPulse9update1msEv) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZThn32_N9CoilPulse9update1msEv) refers to coil_with_timer.o(.text._ZN9CoilPulse9update1msEv) for CoilPulse::update1ms()
    coil_with_timer.o(.ARM.exidx.text._ZThn32_N9CoilPulse9update1msEv) refers to coil_with_timer.o(.text._ZThn32_N9CoilPulse9update1msEv) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZN9CoilPulse8setValueEb) refers to pulse.o(.text._ZN11PulseCommon3setEb) for PulseCommon::set(bool)
    coil_with_timer.o(.ARM.exidx.text._ZN9CoilPulse8setValueEb) refers to coil_with_timer.o(.text._ZN9CoilPulse8setValueEb) for [Anonymous Symbol]
    coil_with_timer.o(.text._ZThn16_N9CoilPulse8setValueEb) refers to coil_with_timer.o(.text._ZN9CoilPulse8setValueEb) for CoilPulse::setValue(bool)
    coil_with_timer.o(.ARM.exidx.text._ZThn16_N9CoilPulse8setValueEb) refers to coil_with_timer.o(.text._ZThn16_N9CoilPulse8setValueEb) for [Anonymous Symbol]
    coil_with_timer.o(.ARM.exidx.text._ZN9CoilPulseaSEb) refers to coil_with_timer.o(.text._ZN9CoilPulseaSEb) for [Anonymous Symbol]
    coil_with_timer.o(.rodata._ZTV11CoilOnDelay) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    coil_with_timer.o(.rodata._ZTV11CoilOnDelay) refers to coil_with_timer.o(.text._ZN11CoilOnDelay9update1msEv) for CoilOnDelay::update1ms()
    coil_with_timer.o(.rodata._ZTV11CoilOnDelay) refers to coil_with_timer.o(.text._ZN11CoilOnDelay8setValueEb) for CoilOnDelay::setValue(bool)
    coil_with_timer.o(.rodata._ZTV11CoilOnDelay) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil_with_timer.o(.rodata._ZTV11CoilOnDelay) refers to coil_with_timer.o(.text._ZThn16_N11CoilOnDelay8setValueEb) for non-virtual thunk to CoilOnDelay::setValue(bool)
    coil_with_timer.o(.rodata._ZTV11CoilOnDelay) refers to coil_with_timer.o(.text._ZThn32_N11CoilOnDelay9update1msEv) for non-virtual thunk to CoilOnDelay::update1ms()
    coil_with_timer.o(.rodata._ZTV12CoilOffDelay) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    coil_with_timer.o(.rodata._ZTV12CoilOffDelay) refers to coil_with_timer.o(.text._ZN12CoilOffDelay9update1msEv) for CoilOffDelay::update1ms()
    coil_with_timer.o(.rodata._ZTV12CoilOffDelay) refers to coil_with_timer.o(.text._ZN12CoilOffDelay8setValueEb) for CoilOffDelay::setValue(bool)
    coil_with_timer.o(.rodata._ZTV12CoilOffDelay) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil_with_timer.o(.rodata._ZTV12CoilOffDelay) refers to coil_with_timer.o(.text._ZThn16_N12CoilOffDelay8setValueEb) for non-virtual thunk to CoilOffDelay::setValue(bool)
    coil_with_timer.o(.rodata._ZTV12CoilOffDelay) refers to coil_with_timer.o(.text._ZThn32_N12CoilOffDelay9update1msEv) for non-virtual thunk to CoilOffDelay::update1ms()
    coil_with_timer.o(.rodata._ZTV9CoilPulse) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    coil_with_timer.o(.rodata._ZTV9CoilPulse) refers to coil_with_timer.o(.text._ZN9CoilPulse9update1msEv) for CoilPulse::update1ms()
    coil_with_timer.o(.rodata._ZTV9CoilPulse) refers to coil_with_timer.o(.text._ZN9CoilPulse8setValueEb) for CoilPulse::setValue(bool)
    coil_with_timer.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil_with_timer.o(.rodata._ZTV9CoilPulse) refers to coil_with_timer.o(.text._ZThn16_N9CoilPulse8setValueEb) for non-virtual thunk to CoilPulse::setValue(bool)
    coil_with_timer.o(.rodata._ZTV9CoilPulse) refers to coil_with_timer.o(.text._ZThn32_N9CoilPulse9update1msEv) for non-virtual thunk to CoilPulse::update1ms()
    gpio_common.o(.ARM.exidx.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char)
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to coil.o(.text._ZN7ISwitchC2Ev) for ISwitch::ISwitch__sub_object()
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to simple_input.o(.rodata._ZTV11SimpleInput) for vtable for SimpleInput
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to init.o(.text._Z11setRegisterIVjEvPT_jj) for void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    simple_input.o(.ARM.exidx.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    simple_input.o(.ARM.exidx.text._ZN11SimpleInput8isActiveEv) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for [Anonymous Symbol]
    simple_input.o(.ARM.exidx.text._ZN11SimpleInput11isNotActiveEv) refers to simple_input.o(.text._ZN11SimpleInput11isNotActiveEv) for [Anonymous Symbol]
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) for SimpleInput::SimpleInput__sub_object(GPIO_TypeDef*, unsigned char)
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to simple_input.o(.rodata._ZTV18SimpleInputDelayed) for vtable for SimpleInputDelayed
    simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for SimpleInput::isActive()
    simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) for [Anonymous Symbol]
    simple_input.o(.text._ZThn32_N18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) for SimpleInputDelayed::update1ms()
    simple_input.o(.ARM.exidx.text._ZThn32_N18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZThn32_N18SimpleInputDelayed9update1msEv) for [Anonymous Symbol]
    simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed8isActiveEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for [Anonymous Symbol]
    simple_input.o(.text._ZThn16_N18SimpleInputDelayed8isActiveEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    simple_input.o(.ARM.exidx.text._ZThn16_N18SimpleInputDelayed8isActiveEv) refers to simple_input.o(.text._ZThn16_N18SimpleInputDelayed8isActiveEv) for [Anonymous Symbol]
    simple_input.o(.rodata._ZTV11SimpleInput) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for SimpleInput::isActive()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) for SimpleInputDelayed::update1ms()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZThn16_N18SimpleInputDelayed8isActiveEv) for non-virtual thunk to SimpleInputDelayed::isActive()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZThn32_N18SimpleInputDelayed9update1msEv) for non-virtual thunk to SimpleInputDelayed::update1ms()
    switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) refers to switch_delay.o(.rodata._ZTV11SwitchDelay) for vtable for SwitchDelay
    switch_delay.o(.ARM.exidx.text._ZN11SwitchDelayC2EP7ISwitcht) refers to switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) for [Anonymous Symbol]
    switch_delay.o(.text._ZN11SwitchDelay9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay9update1msEv) refers to switch_delay.o(.text._ZN11SwitchDelay9update1msEv) for [Anonymous Symbol]
    switch_delay.o(.text._ZThn16_N11SwitchDelay9update1msEv) refers to switch_delay.o(.text._ZN11SwitchDelay9update1msEv) for SwitchDelay::update1ms()
    switch_delay.o(.ARM.exidx.text._ZThn16_N11SwitchDelay9update1msEv) refers to switch_delay.o(.text._ZThn16_N11SwitchDelay9update1msEv) for [Anonymous Symbol]
    switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay7startedEv) refers to switch_delay.o(.text._ZN11SwitchDelay7startedEv) for [Anonymous Symbol]
    switch_delay.o(.rodata._ZTV11SwitchDelay) refers to switch_delay.o(.text._ZN11SwitchDelay7startedEv) for SwitchDelay::started()
    switch_delay.o(.rodata._ZTV11SwitchDelay) refers to switch_delay.o(.text._ZN11SwitchDelay9update1msEv) for SwitchDelay::update1ms()
    switch_delay.o(.rodata._ZTV11SwitchDelay) refers to switch_delay.o(.text._ZThn16_N11SwitchDelay9update1msEv) for non-virtual thunk to SwitchDelay::update1ms()
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseC2E7IMPULSE) refers to rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE) for [Anonymous Symbol]
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3setEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for [Anonymous Symbol]
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3getEv) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for [Anonymous Symbol]
    rf_impulse.o(.text._ZN9RFimpulseaSEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseaSEb) refers to rf_impulse.o(.text._ZN9RFimpulseaSEb) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimerC2Ej) refers to common_timer.o(.rodata._ZTV11CommonTimer) for vtable for CommonTimer
    common_timer.o(.ARM.exidx.text._ZN11CommonTimerC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6updateEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6updateEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer8finishedEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer9getPeriodEv) refers to common_timer.o(.text._ZN11CommonTimer9getPeriodEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer9setPeriodEj) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer14getCurrentTimeEv) refers to common_timer.o(.text._ZN11CommonTimer14getCurrentTimeEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer14setCurrentTimeEj) refers to common_timer.o(.text._ZN11CommonTimer14setCurrentTimeEj) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer5startEv) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer5pauseEv) refers to common_timer.o(.text._ZN11CommonTimer5pauseEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer4stopEv) refers to common_timer.o(.text._ZN11CommonTimer5pauseEv) for CommonTimer::pause()
    common_timer.o(.text._ZN11CommonTimer4stopEv) refers to common_timer.o(.text._ZN11CommonTimer5resetEv) for CommonTimer::reset()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer4stopEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer5resetEv) refers to common_timer.o(.text._ZN11CommonTimer5resetEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer15prepareAndStartEv) refers to common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6finishEv) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6finishEv) refers to common_timer.o(.text._ZN11CommonTimer6finishEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer8setStartEb) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    common_timer.o(.text._ZN11CommonTimer8setStartEb) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer8setStartEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimeraSEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    common_timer.o(.ARM.exidx.text._ZN11CommonTimeraSEb) refers to common_timer.o(.text._ZN11CommonTimeraSEb) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer7startedEv) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer10notStartedEv) refers to common_timer.o(.text._ZN11CommonTimer10notStartedEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer11notFinishedEv) refers to common_timer.o(.text._ZN11CommonTimer11notFinishedEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer15finishedImpulseEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer15finishedImpulseEv) refers to common_timer.o(.text._ZN11CommonTimer15finishedImpulseEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6inWorkEv) refers to common_timer.o(.text._ZN11CommonTimer11notFinishedEv) for CommonTimer::notFinished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6inWorkEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6isFreeEv) refers to common_timer.o(.text._ZN11CommonTimer10notStartedEv) for CommonTimer::notStarted()
    common_timer.o(.text._ZN11CommonTimer6isFreeEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6isFreeEv) refers to common_timer.o(.text._ZN11CommonTimer6isFreeEv) for [Anonymous Symbol]
    common_timer.o(.rodata._ZTV11CommonTimer) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    on_delay.o(.text._ZN13OnDelayCommonC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    on_delay.o(.text._ZN13OnDelayCommonC2Ej) refers to on_delay.o(.rodata._ZTV13OnDelayCommon) for vtable for OnDelayCommon
    on_delay.o(.ARM.exidx.text._ZN13OnDelayCommonC2Ej) refers to on_delay.o(.text._ZN13OnDelayCommonC2Ej) for [Anonymous Symbol]
    on_delay.o(.text._ZN13OnDelayCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon6updateEv) refers to on_delay.o(.text._ZN13OnDelayCommon6updateEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN13OnDelayCommon3setEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon3setEb) refers to on_delay.o(.text._ZN13OnDelayCommon3setEb) for [Anonymous Symbol]
    on_delay.o(.text._ZN13OnDelayCommon3getEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon3getEv) refers to on_delay.o(.text._ZN13OnDelayCommon3getEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN13OnDelayCommon5resetEv) refers to common_timer.o(.text._ZN11CommonTimer5resetEv) for CommonTimer::reset()
    on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon5resetEv) refers to on_delay.o(.text._ZN13OnDelayCommon5resetEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelayC2Ej) refers to on_delay.o(.text._ZN13OnDelayCommonC2Ej) for OnDelayCommon::OnDelayCommon__sub_object(unsigned int)
    on_delay.o(.text._ZN7OnDelayC2Ej) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    on_delay.o(.text._ZN7OnDelayC2Ej) refers to on_delay.o(.rodata._ZTV7OnDelay) for vtable for OnDelay
    on_delay.o(.ARM.exidx.text._ZN7OnDelayC2Ej) refers to on_delay.o(.text._ZN7OnDelayC2Ej) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelay9update1msEv) refers to on_delay.o(.text._ZN13OnDelayCommon6updateEv) for OnDelayCommon::update()
    on_delay.o(.ARM.exidx.text._ZN7OnDelay9update1msEv) refers to on_delay.o(.text._ZN7OnDelay9update1msEv) for [Anonymous Symbol]
    on_delay.o(.text._ZThn16_N7OnDelay9update1msEv) refers to on_delay.o(.text._ZN7OnDelay9update1msEv) for OnDelay::update1ms()
    on_delay.o(.ARM.exidx.text._ZThn16_N7OnDelay9update1msEv) refers to on_delay.o(.text._ZThn16_N7OnDelay9update1msEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelayaSEb) refers to on_delay.o(.text._ZN13OnDelayCommon3setEb) for OnDelayCommon::set(bool)
    on_delay.o(.ARM.exidx.text._ZN7OnDelayaSEb) refers to on_delay.o(.text._ZN7OnDelayaSEb) for [Anonymous Symbol]
    on_delay.o(.rodata._ZTV7OnDelay) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    on_delay.o(.rodata._ZTV7OnDelay) refers to on_delay.o(.text._ZN7OnDelay9update1msEv) for OnDelay::update1ms()
    on_delay.o(.rodata._ZTV7OnDelay) refers to on_delay.o(.text._ZThn16_N7OnDelay9update1msEv) for non-virtual thunk to OnDelay::update1ms()
    off_delay.o(.text._ZN14OffDelayCommonC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    off_delay.o(.text._ZN14OffDelayCommonC2Ej) refers to off_delay.o(.rodata._ZTV14OffDelayCommon) for vtable for OffDelayCommon
    off_delay.o(.ARM.exidx.text._ZN14OffDelayCommonC2Ej) refers to off_delay.o(.text._ZN14OffDelayCommonC2Ej) for [Anonymous Symbol]
    off_delay.o(.text._ZN14OffDelayCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    off_delay.o(.text._ZN14OffDelayCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    off_delay.o(.text._ZN14OffDelayCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon6updateEv) refers to off_delay.o(.text._ZN14OffDelayCommon6updateEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN14OffDelayCommon3setEb) refers to common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) for CommonTimer::prepareAndStart()
    off_delay.o(.text._ZN14OffDelayCommon3setEb) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon3setEb) refers to off_delay.o(.text._ZN14OffDelayCommon3setEb) for [Anonymous Symbol]
    off_delay.o(.text._ZN14OffDelayCommon3getEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for CommonTimer::inWork()
    off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon3getEv) refers to off_delay.o(.text._ZN14OffDelayCommon3getEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN14OffDelayCommon5resetEv) refers to common_timer.o(.text._ZN11CommonTimer6finishEv) for CommonTimer::finish()
    off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon5resetEv) refers to off_delay.o(.text._ZN14OffDelayCommon5resetEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelayC2Ej) refers to off_delay.o(.text._ZN14OffDelayCommonC2Ej) for OffDelayCommon::OffDelayCommon__sub_object(unsigned int)
    off_delay.o(.text._ZN8OffDelayC2Ej) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    off_delay.o(.text._ZN8OffDelayC2Ej) refers to off_delay.o(.rodata._ZTV8OffDelay) for vtable for OffDelay
    off_delay.o(.ARM.exidx.text._ZN8OffDelayC2Ej) refers to off_delay.o(.text._ZN8OffDelayC2Ej) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelay9update1msEv) refers to off_delay.o(.text._ZN14OffDelayCommon6updateEv) for OffDelayCommon::update()
    off_delay.o(.ARM.exidx.text._ZN8OffDelay9update1msEv) refers to off_delay.o(.text._ZN8OffDelay9update1msEv) for [Anonymous Symbol]
    off_delay.o(.text._ZThn16_N8OffDelay9update1msEv) refers to off_delay.o(.text._ZN8OffDelay9update1msEv) for OffDelay::update1ms()
    off_delay.o(.ARM.exidx.text._ZThn16_N8OffDelay9update1msEv) refers to off_delay.o(.text._ZThn16_N8OffDelay9update1msEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelayaSEb) refers to off_delay.o(.text._ZN14OffDelayCommon3setEb) for OffDelayCommon::set(bool)
    off_delay.o(.ARM.exidx.text._ZN8OffDelayaSEb) refers to off_delay.o(.text._ZN8OffDelayaSEb) for [Anonymous Symbol]
    off_delay.o(.rodata._ZTV8OffDelay) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    off_delay.o(.rodata._ZTV8OffDelay) refers to off_delay.o(.text._ZN8OffDelay9update1msEv) for OffDelay::update1ms()
    off_delay.o(.rodata._ZTV8OffDelay) refers to off_delay.o(.text._ZThn16_N8OffDelay9update1msEv) for non-virtual thunk to OffDelay::update1ms()
    pulse.o(.text._ZN11PulseCommonC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    pulse.o(.text._ZN11PulseCommonC2Ej) refers to pulse.o(.rodata._ZTV11PulseCommon) for vtable for PulseCommon
    pulse.o(.ARM.exidx.text._ZN11PulseCommonC2Ej) refers to pulse.o(.text._ZN11PulseCommonC2Ej) for [Anonymous Symbol]
    pulse.o(.text._ZN11PulseCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    pulse.o(.text._ZN11PulseCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    pulse.o(.text._ZN11PulseCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    pulse.o(.ARM.exidx.text._ZN11PulseCommon6updateEv) refers to pulse.o(.text._ZN11PulseCommon6updateEv) for [Anonymous Symbol]
    pulse.o(.text._ZN11PulseCommon3setEb) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    pulse.o(.text._ZN11PulseCommon3setEb) refers to common_timer.o(.text._ZN11CommonTimer6isFreeEv) for CommonTimer::isFree()
    pulse.o(.ARM.exidx.text._ZN11PulseCommon3setEb) refers to pulse.o(.text._ZN11PulseCommon3setEb) for [Anonymous Symbol]
    pulse.o(.text._ZN11PulseCommon3getEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for CommonTimer::inWork()
    pulse.o(.ARM.exidx.text._ZN11PulseCommon3getEv) refers to pulse.o(.text._ZN11PulseCommon3getEv) for [Anonymous Symbol]
    pulse.o(.text._ZN11PulseCommon5resetEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    pulse.o(.ARM.exidx.text._ZN11PulseCommon5resetEv) refers to pulse.o(.text._ZN11PulseCommon5resetEv) for [Anonymous Symbol]
    pulse.o(.text._ZN5PulseC2Ej) refers to pulse.o(.text._ZN11PulseCommonC2Ej) for PulseCommon::PulseCommon__sub_object(unsigned int)
    pulse.o(.text._ZN5PulseC2Ej) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    pulse.o(.text._ZN5PulseC2Ej) refers to pulse.o(.rodata._ZTV5Pulse) for vtable for Pulse
    pulse.o(.ARM.exidx.text._ZN5PulseC2Ej) refers to pulse.o(.text._ZN5PulseC2Ej) for [Anonymous Symbol]
    pulse.o(.text._ZN5Pulse9update1msEv) refers to pulse.o(.text._ZN11PulseCommon6updateEv) for PulseCommon::update()
    pulse.o(.ARM.exidx.text._ZN5Pulse9update1msEv) refers to pulse.o(.text._ZN5Pulse9update1msEv) for [Anonymous Symbol]
    pulse.o(.text._ZThn16_N5Pulse9update1msEv) refers to pulse.o(.text._ZN5Pulse9update1msEv) for Pulse::update1ms()
    pulse.o(.ARM.exidx.text._ZThn16_N5Pulse9update1msEv) refers to pulse.o(.text._ZThn16_N5Pulse9update1msEv) for [Anonymous Symbol]
    pulse.o(.text._ZN5PulseaSEb) refers to pulse.o(.text._ZN11PulseCommon3setEb) for PulseCommon::set(bool)
    pulse.o(.ARM.exidx.text._ZN5PulseaSEb) refers to pulse.o(.text._ZN5PulseaSEb) for [Anonymous Symbol]
    pulse.o(.text._ZN14PulseInterraptC2Ej) refers to pulse.o(.text._ZN11PulseCommonC2Ej) for PulseCommon::PulseCommon__sub_object(unsigned int)
    pulse.o(.text._ZN14PulseInterraptC2Ej) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    pulse.o(.text._ZN14PulseInterraptC2Ej) refers to pulse.o(.rodata._ZTV14PulseInterrapt) for vtable for PulseInterrapt
    pulse.o(.ARM.exidx.text._ZN14PulseInterraptC2Ej) refers to pulse.o(.text._ZN14PulseInterraptC2Ej) for [Anonymous Symbol]
    pulse.o(.text._ZN14PulseInterrapt9update1msEv) refers to pulse.o(.text._ZN11PulseCommon6updateEv) for PulseCommon::update()
    pulse.o(.ARM.exidx.text._ZN14PulseInterrapt9update1msEv) refers to pulse.o(.text._ZN14PulseInterrapt9update1msEv) for [Anonymous Symbol]
    pulse.o(.text._ZThn16_N14PulseInterrapt9update1msEv) refers to pulse.o(.text._ZN14PulseInterrapt9update1msEv) for PulseInterrapt::update1ms()
    pulse.o(.ARM.exidx.text._ZThn16_N14PulseInterrapt9update1msEv) refers to pulse.o(.text._ZThn16_N14PulseInterrapt9update1msEv) for [Anonymous Symbol]
    pulse.o(.text._ZN14PulseInterrapt3setEb) refers to pulse.o(.text._ZN11PulseCommon3setEb) for PulseCommon::set(bool)
    pulse.o(.text._ZN14PulseInterrapt3setEb) refers to pulse.o(.text._ZN11PulseCommon5resetEv) for PulseCommon::reset()
    pulse.o(.ARM.exidx.text._ZN14PulseInterrapt3setEb) refers to pulse.o(.text._ZN14PulseInterrapt3setEb) for [Anonymous Symbol]
    pulse.o(.text._ZN14PulseInterraptaSEb) refers to pulse.o(.text._ZN14PulseInterrapt3setEb) for PulseInterrapt::set(bool)
    pulse.o(.ARM.exidx.text._ZN14PulseInterraptaSEb) refers to pulse.o(.text._ZN14PulseInterraptaSEb) for [Anonymous Symbol]
    pulse.o(.rodata._ZTV5Pulse) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    pulse.o(.rodata._ZTV5Pulse) refers to pulse.o(.text._ZN5Pulse9update1msEv) for Pulse::update1ms()
    pulse.o(.rodata._ZTV5Pulse) refers to pulse.o(.text._ZThn16_N5Pulse9update1msEv) for non-virtual thunk to Pulse::update1ms()
    pulse.o(.rodata._ZTV14PulseInterrapt) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    pulse.o(.rodata._ZTV14PulseInterrapt) refers to pulse.o(.text._ZN14PulseInterrapt9update1msEv) for PulseInterrapt::update1ms()
    pulse.o(.rodata._ZTV14PulseInterrapt) refers to pulse.o(.text._ZThn16_N14PulseInterrapt9update1msEv) for non-virtual thunk to PulseInterrapt::update1ms()
    pid.o(.text._ZN6PIDregC2Etfffffffb) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for IUpdatedSomewhere::IUpdatedSomewhere__sub_object()
    pid.o(.text._ZN6PIDregC2Etfffffffb) refers to pid.o(.rodata._ZTV6PIDreg) for vtable for PIDreg
    pid.o(.text._ZN6PIDregC2Etfffffffb) refers to fflt_clz.o(x$fpl$ffltu) for __aeabi_ui2f
    pid.o(.text._ZN6PIDregC2Etfffffffb) refers to pid.o(.text._ZN6PIDreg10updateKoefEv) for PIDreg::updateKoef()
    pid.o(.text._ZN6PIDregC2Etfffffffb) refers to pid.o(.text._ZN6PIDreg5resetEv) for PIDreg::reset()
    pid.o(.ARM.exidx.text._ZN6PIDregC2Etfffffffb) refers to pid.o(.text._ZN6PIDregC2Etfffffffb) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg10updateKoefEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpeq
    pid.o(.text._ZN6PIDreg10updateKoefEv) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    pid.o(.text._ZN6PIDreg10updateKoefEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    pid.o(.text._ZN6PIDreg10updateKoefEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    pid.o(.text._ZN6PIDreg10updateKoefEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    pid.o(.ARM.exidx.text._ZN6PIDreg10updateKoefEv) refers to pid.o(.text._ZN6PIDreg10updateKoefEv) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5resetEv) refers to pid.o(.text._ZN6PIDreg5resetEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg4getTEv) refers to ffix.o(x$fpl$ffix) for __aeabi_f2iz
    pid.o(.ARM.exidx.text._ZN6PIDreg4getTEv) refers to pid.o(.text._ZN6PIDreg4getTEv) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5setPvEf) refers to pid.o(.text._ZN6PIDreg5setPvEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5getPvEv) refers to pid.o(.text._ZN6PIDreg5getPvEv) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5setSpEf) refers to pid.o(.text._ZN6PIDreg5setSpEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5getSpEv) refers to pid.o(.text._ZN6PIDreg5getSpEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg5setKpEf) refers to pid.o(.text._ZN6PIDreg10updateKoefEv) for PIDreg::updateKoef()
    pid.o(.ARM.exidx.text._ZN6PIDreg5setKpEf) refers to pid.o(.text._ZN6PIDreg5setKpEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5getKpEv) refers to pid.o(.text._ZN6PIDreg5getKpEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg5setTiEf) refers to pid.o(.text._ZN6PIDreg10updateKoefEv) for PIDreg::updateKoef()
    pid.o(.ARM.exidx.text._ZN6PIDreg5setTiEf) refers to pid.o(.text._ZN6PIDreg5setTiEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5getTiEv) refers to pid.o(.text._ZN6PIDreg5getTiEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg5setTdEf) refers to pid.o(.text._ZN6PIDreg10updateKoefEv) for PIDreg::updateKoef()
    pid.o(.ARM.exidx.text._ZN6PIDreg5setTdEf) refers to pid.o(.text._ZN6PIDreg5setTdEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5getTdEv) refers to pid.o(.text._ZN6PIDreg5getTdEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg5setDbEf) refers to pid.o(.text._Z3absIfET_S0_) for float abs<float>(float)
    pid.o(.ARM.exidx.text._ZN6PIDreg5setDbEf) refers to pid.o(.text._ZN6PIDreg5setDbEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5getDbEv) refers to pid.o(.text._ZN6PIDreg5getDbEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg11setUpOutLimEf) refers to pid.o(.text._Z3maxIfET_S0_S0_) for float max<float>(float, float)
    pid.o(.ARM.exidx.text._ZN6PIDreg11setUpOutLimEf) refers to pid.o(.text._ZN6PIDreg11setUpOutLimEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg11getUpOutLimEv) refers to pid.o(.text._ZN6PIDreg11getUpOutLimEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg13setDownOutLimEf) refers to pid.o(.text._Z3minIfET_S0_S0_) for float min<float>(float, float)
    pid.o(.ARM.exidx.text._ZN6PIDreg13setDownOutLimEf) refers to pid.o(.text._ZN6PIDreg13setDownOutLimEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg13getDownOutLimEv) refers to pid.o(.text._ZN6PIDreg13getDownOutLimEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg6setOutEf) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    pid.o(.ARM.exidx.text._ZN6PIDreg6setOutEf) refers to pid.o(.text._ZN6PIDreg6setOutEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg6getOutEv) refers to pid.o(.text._ZN6PIDreg6getOutEv) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg7setAutoEb) refers to pid.o(.text._ZN6PIDreg7setAutoEb) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg6isAUTOEv) refers to pid.o(.text._ZN6PIDreg6isAUTOEv) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg10setInverseEb) refers to pid.o(.text._ZN6PIDreg10setInverseEb) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg9isInverseEv) refers to pid.o(.text._ZN6PIDreg9isInverseEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    pid.o(.text._ZN6PIDreg15updateSomewhereEv) refers to pid.o(.text._Z3absIfET_S0_) for float abs<float>(float)
    pid.o(.text._ZN6PIDreg15updateSomewhereEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpge
    pid.o(.text._ZN6PIDreg15updateSomewhereEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    pid.o(.text._ZN6PIDreg15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    pid.o(.text._ZN6PIDreg15updateSomewhereEv) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    pid.o(.ARM.exidx.text._ZN6PIDreg15updateSomewhereEv) refers to pid.o(.text._ZN6PIDreg15updateSomewhereEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDregaSEf) refers to pid.o(.text._ZN6PIDreg5setPvEf) for PIDreg::setPv(float)
    pid.o(.ARM.exidx.text._ZN6PIDregaSEf) refers to pid.o(.text._ZN6PIDregaSEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg8getPvRefEv) refers to pid.o(.text._ZN6PIDreg8getPvRefEv) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg9getOutRefEv) refers to pid.o(.text._ZN6PIDreg9getOutRefEv) for [Anonymous Symbol]
    pid.o(.rodata._ZTV6PIDreg) refers to pid.o(.text._ZN6PIDreg15updateSomewhereEv) for PIDreg::updateSomewhere()
    ramp.o(.text._ZN4RampC2Ejffff) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    ramp.o(.text._ZN4RampC2Ejffff) refers to ramp.o(.rodata._ZTV4Ramp) for vtable for Ramp
    ramp.o(.text._ZN4RampC2Ejffff) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmple
    ramp.o(.text._ZN4RampC2Ejffff) refers to test_task.o(.text._Z6toggleIfEvPT_S1_) for void toggle<float>(float*, float*)
    ramp.o(.text._ZN4RampC2Ejffff) refers to ramp.o(.text._ZN4Ramp9setLimMaxEf) for Ramp::setLimMax(float)
    ramp.o(.text._ZN4RampC2Ejffff) refers to ramp.o(.text._ZN4Ramp16setFullRangeTimeEj) for Ramp::setFullRangeTime(unsigned int)
    ramp.o(.ARM.exidx.text._ZN4RampC2Ejffff) refers to ramp.o(.text._ZN4RampC2Ejffff) for [Anonymous Symbol]
    ramp.o(.text._ZN4Ramp9setLimMaxEf) refers to pid.o(.text._Z3maxIfET_S0_S0_) for float max<float>(float, float)
    ramp.o(.ARM.exidx.text._ZN4Ramp9setLimMaxEf) refers to ramp.o(.text._ZN4Ramp9setLimMaxEf) for [Anonymous Symbol]
    ramp.o(.text._ZN4Ramp16setFullRangeTimeEj) refers to ramp.o(.text._ZN4Ramp11getOutRangeEv) for Ramp::getOutRange()
    ramp.o(.text._ZN4Ramp16setFullRangeTimeEj) refers to fflt_clz.o(x$fpl$ffltu) for __aeabi_ui2f
    ramp.o(.text._ZN4Ramp16setFullRangeTimeEj) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    ramp.o(.ARM.exidx.text._ZN4Ramp16setFullRangeTimeEj) refers to ramp.o(.text._ZN4Ramp16setFullRangeTimeEj) for [Anonymous Symbol]
    ramp.o(.text._ZN4RampC2Ejff) refers to ramp.o(.text._ZN4RampC2Ejffff) for Ramp::Ramp__sub_object(unsigned int, float, float, float, float)
    ramp.o(.ARM.exidx.text._ZN4RampC2Ejff) refers to ramp.o(.text._ZN4RampC2Ejff) for [Anonymous Symbol]
    ramp.o(.text._ZN4RampC2Ej) refers to ramp.o(.text._ZN4RampC2Ejffff) for Ramp::Ramp__sub_object(unsigned int, float, float, float, float)
    ramp.o(.ARM.exidx.text._ZN4RampC2Ej) refers to ramp.o(.text._ZN4RampC2Ej) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text._ZN4Ramp9getOutMinEv) refers to ramp.o(.text._ZN4Ramp9getOutMinEv) for [Anonymous Symbol]
    ramp.o(.text._ZN4Ramp11getOutRangeEv) refers to ramp.o(.text._Z8getRangeIfET_PKS0_) for float getRange<float>(float const*)
    ramp.o(.ARM.exidx.text._ZN4Ramp11getOutRangeEv) refers to ramp.o(.text._ZN4Ramp11getOutRangeEv) for [Anonymous Symbol]
    ramp.o(.text._ZN4Ramp9update1msEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpeq
    ramp.o(.text._ZN4Ramp9update1msEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    ramp.o(.text._ZN4Ramp9update1msEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    ramp.o(.text._ZN4Ramp9update1msEv) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    ramp.o(.ARM.exidx.text._ZN4Ramp9update1msEv) refers to ramp.o(.text._ZN4Ramp9update1msEv) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text._ZN4Ramp3getEv) refers to ramp.o(.text._ZN4Ramp3getEv) for [Anonymous Symbol]
    ramp.o(.text._ZN4Ramp3setEf) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    ramp.o(.ARM.exidx.text._ZN4Ramp3setEf) refers to ramp.o(.text._ZN4Ramp3setEf) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text._ZN4Ramp16getFullRangeTimeEv) refers to ramp.o(.text._ZN4Ramp16getFullRangeTimeEv) for [Anonymous Symbol]
    ramp.o(.text._ZN4Ramp9setLimMinEf) refers to pid.o(.text._Z3minIfET_S0_S0_) for float min<float>(float, float)
    ramp.o(.ARM.exidx.text._ZN4Ramp9setLimMinEf) refers to ramp.o(.text._ZN4Ramp9setLimMinEf) for [Anonymous Symbol]
    ramp.o(.text._ZN4RampaSEf) refers to ramp.o(.text._ZN4Ramp3setEf) for Ramp::set(float)
    ramp.o(.ARM.exidx.text._ZN4RampaSEf) refers to ramp.o(.text._ZN4RampaSEf) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text._ZN4Ramp8getSpRefEv) refers to ramp.o(.text._ZN4Ramp8getSpRefEv) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text._ZN4Ramp9getOutRefEv) refers to ramp.o(.text._ZN4Ramp9getOutRefEv) for [Anonymous Symbol]
    ramp.o(.rodata._ZTV4Ramp) refers to ramp.o(.text._ZN4Ramp9update1msEv) for Ramp::update1ms()
    three_pos.o(.text._ZN11ThreePosRegC2Efffttb) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    three_pos.o(.text._ZN11ThreePosRegC2Efffttb) refers to three_pos.o(.rodata._ZTV11ThreePosReg) for vtable for ThreePosReg
    three_pos.o(.text._ZN11ThreePosRegC2Efffttb) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    three_pos.o(.text._ZN11ThreePosRegC2Efffttb) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer(unsigned int)
    three_pos.o(.text._ZN11ThreePosRegC2Efffttb) refers to three_pos.o(.text._ZN11ThreePosReg12setPulseGistEf) for ThreePosReg::setPulseGist(float)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosRegC2Efffttb) refers to three_pos.o(.text._ZN11ThreePosRegC2Efffttb) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg12setPulseGistEf) refers to pid.o(.text._Z3absIfET_S0_) for float abs<float>(float)
    three_pos.o(.text._ZN11ThreePosReg12setPulseGistEf) refers to pid.o(.text._Z3maxIfET_S0_S0_) for float max<float>(float, float)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12setPulseGistEf) refers to three_pos.o(.text._ZN11ThreePosReg12setPulseGistEf) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosRegD2Ev) refers to three_pos.o(.rodata._ZTV11ThreePosReg) for vtable for ThreePosReg
    three_pos.o(.text._ZN11ThreePosRegD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosRegD2Ev) refers to three_pos.o(.text._ZN11ThreePosRegD2Ev) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg3setEf) refers to three_pos.o(.text._ZN11ThreePosReg3setEf) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosRegaSEf) refers to three_pos.o(.text._ZN11ThreePosReg3setEf) for ThreePosReg::set(float)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosRegaSEf) refers to three_pos.o(.text._ZN11ThreePosRegaSEf) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg5setSpEf) refers to three_pos.o(.text._ZN11ThreePosReg5setSpEf) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg5getSpEv) refers to three_pos.o(.text._ZN11ThreePosReg5getSpEv) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg11setZeroGistEf) refers to pid.o(.text._Z3absIfET_S0_) for float abs<float>(float)
    three_pos.o(.text._ZN11ThreePosReg11setZeroGistEf) refers to pid.o(.text._Z3minIfET_S0_S0_) for float min<float>(float, float)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg11setZeroGistEf) refers to three_pos.o(.text._ZN11ThreePosReg11setZeroGistEf) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg11getZeroGistEv) refers to three_pos.o(.text._ZN11ThreePosReg11getZeroGistEv) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12getPulseGistEv) refers to three_pos.o(.text._ZN11ThreePosReg12getPulseGistEv) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg12setPauseTimeEt) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for CommonTimer::setPeriod(unsigned int)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12setPauseTimeEt) refers to three_pos.o(.text._ZN11ThreePosReg12setPauseTimeEt) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg12getPauseTimeEv) refers to common_timer.o(.text._ZN11CommonTimer9getPeriodEv) for CommonTimer::getPeriod()
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12getPauseTimeEv) refers to three_pos.o(.text._ZN11ThreePosReg12getPauseTimeEv) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg12setPulseTimeEt) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for CommonTimer::setPeriod(unsigned int)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12setPulseTimeEt) refers to three_pos.o(.text._ZN11ThreePosReg12setPulseTimeEt) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg12getPulseTimeEv) refers to common_timer.o(.text._ZN11CommonTimer9getPeriodEv) for CommonTimer::getPeriod()
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12getPulseTimeEv) refers to three_pos.o(.text._ZN11ThreePosReg12getPulseTimeEv) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10setReverseEb) refers to three_pos.o(.text._ZN11ThreePosReg10setReverseEb) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10getReverseEv) refers to three_pos.o(.text._ZN11ThreePosReg10getReverseEv) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg7getOut1Ev) refers to three_pos.o(.text._ZN11ThreePosReg7getOut1Ev) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg7getOut2Ev) refers to three_pos.o(.text._ZN11ThreePosReg7getOut2Ev) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg17impulseCycleEndedEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg17impulseCycleEndedEv) refers to three_pos.o(.text._ZN11ThreePosReg17impulseCycleEndedEv) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg21halfImpulseCycleEndedEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    three_pos.o(.text._ZN11ThreePosReg21halfImpulseCycleEndedEv) refers to common_timer.o(.text._ZN11CommonTimer10notStartedEv) for CommonTimer::notStarted()
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg21halfImpulseCycleEndedEv) refers to three_pos.o(.text._ZN11ThreePosReg21halfImpulseCycleEndedEv) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer11notFinishedEv) for CommonTimer::notFinished()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimeraSEb) for CommonTimer::operator=(bool)
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to three_pos.o(.text._ZN11ThreePosReg17impulseCycleEndedEv) for ThreePosReg::impulseCycleEnded()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to three_pos.o(.text._ZN11ThreePosReg21halfImpulseCycleEndedEv) for ThreePosReg::halfImpulseCycleEnded()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmplt
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to pid.o(.text._Z3absIfET_S0_) for float abs<float>(float)
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for CommonTimer::inWork()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6finishEv) for CommonTimer::finish()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6isFreeEv) for CommonTimer::isFree()
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg9update1msEv) refers to three_pos.o(.text._ZN11ThreePosReg9update1msEv) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg8getInRefEv) refers to three_pos.o(.text._ZN11ThreePosReg8getInRefEv) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10getOut1RefEv) refers to three_pos.o(.text._ZN11ThreePosReg10getOut1RefEv) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10getOut2RefEv) refers to three_pos.o(.text._ZN11ThreePosReg10getOut2RefEv) for [Anonymous Symbol]
    three_pos.o(.rodata._ZTV11ThreePosReg) refers to three_pos.o(.text._ZN11ThreePosReg9update1msEv) for ThreePosReg::update1ms()
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommonC2Efb) refers to two_pos.o(.text._ZN12TwoPosCommonC2Efb) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon3setEf) refers to two_pos.o(.text._ZN12TwoPosCommon3setEf) for [Anonymous Symbol]
    two_pos.o(.text._ZN12TwoPosCommon3getEv) refers to fflt_clz.o(x$fpl$ffltu) for __aeabi_ui2f
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon3getEv) refers to two_pos.o(.text._ZN12TwoPosCommon3getEv) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon5setSpEf) refers to two_pos.o(.text._ZN12TwoPosCommon5setSpEf) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon5getSpEv) refers to two_pos.o(.text._ZN12TwoPosCommon5getSpEv) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon10setReverseEb) refers to two_pos.o(.text._ZN12TwoPosCommon10setReverseEb) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon10getReverseEv) refers to two_pos.o(.text._ZN12TwoPosCommon10getReverseEv) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon8getInRefEv) refers to two_pos.o(.text._ZN12TwoPosCommon8getInRefEv) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon9getOutRefEv) refers to two_pos.o(.text._ZN12TwoPosCommon9getOutRefEv) for [Anonymous Symbol]
    two_pos.o(.text._ZN10TwoPosGistC2Efffb) refers to two_pos.o(.text._ZN12TwoPosCommonC2Efb) for TwoPosCommon::TwoPosCommon__sub_object(float, bool)
    two_pos.o(.text._ZN10TwoPosGistC2Efffb) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for IUpdatedSomewhere::IUpdatedSomewhere__sub_object()
    two_pos.o(.text._ZN10TwoPosGistC2Efffb) refers to two_pos.o(.rodata._ZTV10TwoPosGist) for vtable for TwoPosGist
    two_pos.o(.text._ZN10TwoPosGistC2Efffb) refers to two_pos.o(.text._ZN10TwoPosGist10setLowGistEf) for TwoPosGist::setLowGist(float)
    two_pos.o(.text._ZN10TwoPosGistC2Efffb) refers to two_pos.o(.text._ZN10TwoPosGist11setHighGistEf) for TwoPosGist::setHighGist(float)
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGistC2Efffb) refers to two_pos.o(.text._ZN10TwoPosGistC2Efffb) for [Anonymous Symbol]
    two_pos.o(.text._ZN10TwoPosGist10setLowGistEf) refers to pid.o(.text._Z3maxIfET_S0_S0_) for float max<float>(float, float)
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGist10setLowGistEf) refers to two_pos.o(.text._ZN10TwoPosGist10setLowGistEf) for [Anonymous Symbol]
    two_pos.o(.text._ZN10TwoPosGist11setHighGistEf) refers to pid.o(.text._Z3maxIfET_S0_S0_) for float max<float>(float, float)
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGist11setHighGistEf) refers to two_pos.o(.text._ZN10TwoPosGist11setHighGistEf) for [Anonymous Symbol]
    two_pos.o(.text._ZN10TwoPosGist3setEf) refers to two_pos.o(.text._ZN12TwoPosCommon3setEf) for TwoPosCommon::set(float)
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGist3setEf) refers to two_pos.o(.text._ZN10TwoPosGist3setEf) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGist10getLowGistEv) refers to two_pos.o(.text._ZN10TwoPosGist10getLowGistEv) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGist11getHighGistEv) refers to two_pos.o(.text._ZN10TwoPosGist11getHighGistEv) for [Anonymous Symbol]
    two_pos.o(.text._ZN10TwoPosGist15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    two_pos.o(.text._ZN10TwoPosGist15updateSomewhereEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpge
    two_pos.o(.text._ZN10TwoPosGist15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGist15updateSomewhereEv) refers to two_pos.o(.text._ZN10TwoPosGist15updateSomewhereEv) for [Anonymous Symbol]
    two_pos.o(.text._ZN10TwoPosGistaSEf) refers to two_pos.o(.text._ZN10TwoPosGist3setEf) for TwoPosGist::set(float)
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGistaSEf) refers to two_pos.o(.text._ZN10TwoPosGistaSEf) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTimC2Efttb) refers to two_pos.o(.text._ZN12TwoPosCommonC2Efb) for TwoPosCommon::TwoPosCommon__sub_object(float, bool)
    two_pos.o(.text._ZN9TwoPosTimC2Efttb) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    two_pos.o(.text._ZN9TwoPosTimC2Efttb) refers to two_pos.o(.rodata._ZTV9TwoPosTim) for vtable for TwoPosTim
    two_pos.o(.text._ZN9TwoPosTimC2Efttb) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    two_pos.o(.text._ZN9TwoPosTimC2Efttb) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer(unsigned int)
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTimC2Efttb) refers to two_pos.o(.text._ZN9TwoPosTimC2Efttb) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTimD2Ev) refers to two_pos.o(.rodata._ZTV9TwoPosTim) for vtable for TwoPosTim
    two_pos.o(.text._ZN9TwoPosTimD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTimD2Ev) refers to two_pos.o(.text._ZN9TwoPosTimD2Ev) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTim10setLowTimeEt) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for CommonTimer::setPeriod(unsigned int)
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTim10setLowTimeEt) refers to two_pos.o(.text._ZN9TwoPosTim10setLowTimeEt) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTim10getLowTimeEv) refers to common_timer.o(.text._ZN11CommonTimer9getPeriodEv) for CommonTimer::getPeriod()
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTim10getLowTimeEv) refers to two_pos.o(.text._ZN9TwoPosTim10getLowTimeEv) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTim11setHighTimeEt) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for CommonTimer::setPeriod(unsigned int)
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTim11setHighTimeEt) refers to two_pos.o(.text._ZN9TwoPosTim11setHighTimeEt) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTim11getHighTimeEv) refers to common_timer.o(.text._ZN11CommonTimer9getPeriodEv) for CommonTimer::getPeriod()
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTim11getHighTimeEv) refers to two_pos.o(.text._ZN9TwoPosTim11getHighTimeEv) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTim9update1msEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmplt
    two_pos.o(.text._ZN9TwoPosTim9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    two_pos.o(.text._ZN9TwoPosTim9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    two_pos.o(.text._ZN9TwoPosTim9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTim9update1msEv) refers to two_pos.o(.text._ZN9TwoPosTim9update1msEv) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTimaSEf) refers to two_pos.o(.text._ZN12TwoPosCommon3setEf) for TwoPosCommon::set(float)
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTimaSEf) refers to two_pos.o(.text._ZN9TwoPosTimaSEf) for [Anonymous Symbol]
    two_pos.o(.rodata._ZTV10TwoPosGist) refers to two_pos.o(.text._ZN10TwoPosGist15updateSomewhereEv) for TwoPosGist::updateSomewhere()
    two_pos.o(.rodata._ZTV9TwoPosTim) refers to two_pos.o(.text._ZN9TwoPosTim9update1msEv) for TwoPosTim::update1ms()
    sequence.o(.text._ZN8SequenceC2EPhh) refers to rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE) for RFimpulse::RFimpulse__sub_object(IMPULSE)
    sequence.o(.ARM.exidx.text._ZN8SequenceC2EPhh) refers to sequence.o(.text._ZN8SequenceC2EPhh) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence8isMyStepEv) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence5resetEv) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    sequence.o(.ARM.exidx.text._ZN8Sequence5resetEv) refers to sequence.o(.text._ZN8Sequence5resetEv) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence5startEb) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for Sequence::isMyStep()
    sequence.o(.ARM.exidx.text._ZN8Sequence5startEb) refers to sequence.o(.text._ZN8Sequence5startEb) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence4lockEb) refers to sequence.o(.text._ZN8Sequence4lockEb) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence6finishEb) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for Sequence::isMyStep()
    sequence.o(.text._ZN8Sequence6finishEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    sequence.o(.ARM.exidx.text._ZN8Sequence6finishEb) refers to sequence.o(.text._ZN8Sequence6finishEb) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for Sequence::isMyStep()
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence5startEb) for Sequence::start(bool)
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence4lockEb) for Sequence::lock(bool)
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence6finishEb) for Sequence::finish(bool)
    sequence.o(.ARM.exidx.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence6slfSetEbbb) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence7startedEv) refers to sequence.o(.text._ZN8Sequence7startedEv) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence6lockedEv) refers to sequence.o(.text._ZN8Sequence6lockedEv) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence8finishedEv) refers to sequence.o(.text._ZN8Sequence8finishedEv) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence15finishedImpulseEv) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for RFimpulse::get()
    sequence.o(.ARM.exidx.text._ZN8Sequence15finishedImpulseEv) refers to sequence.o(.text._ZN8Sequence15finishedImpulseEv) for [Anonymous Symbol]
    sequence.o(.text._ZN15SequenceDelayedC2EPhhj) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    sequence.o(.text._ZN15SequenceDelayedC2EPhhj) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence__sub_object(unsigned char*, unsigned char)
    sequence.o(.text._ZN15SequenceDelayedC2EPhhj) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    sequence.o(.text._ZN15SequenceDelayedC2EPhhj) refers to sequence.o(.rodata._ZTV15SequenceDelayed) for vtable for SequenceDelayed
    sequence.o(.ARM.exidx.text._ZN15SequenceDelayedC2EPhhj) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for [Anonymous Symbol]
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN8Sequence6lockedEv) for Sequence::locked()
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN8Sequence7startedEv) for Sequence::started()
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN8Sequence6finishEb) for Sequence::finish(bool)
    sequence.o(.ARM.exidx.text._ZN15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN15SequenceDelayed9update1msEv) for [Anonymous Symbol]
    sequence.o(.text._ZThn28_N15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN15SequenceDelayed9update1msEv) for SequenceDelayed::update1ms()
    sequence.o(.ARM.exidx.text._ZThn28_N15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZThn28_N15SequenceDelayed9update1msEv) for [Anonymous Symbol]
    sequence.o(.rodata._ZTV15SequenceDelayed) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    sequence.o(.rodata._ZTV15SequenceDelayed) refers to sequence.o(.text._ZN15SequenceDelayed9update1msEv) for SequenceDelayed::update1ms()
    sequence.o(.rodata._ZTV15SequenceDelayed) refers to sequence.o(.text._ZThn28_N15SequenceDelayed9update1msEv) for non-virtual thunk to SequenceDelayed::update1ms()
    monitor.o(.text._ZN7MonitorC2Eff) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    monitor.o(.text._ZN7MonitorC2Eff) refers to monitor.o(.rodata._ZTV7Monitor) for vtable for Monitor
    monitor.o(.text._ZN7MonitorC2Eff) refers to monitor.o(.text._ZN7Monitor11setValueMaxEf) for Monitor::setValueMax(float)
    monitor.o(.text._ZN7MonitorC2Eff) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    monitor.o(.text._ZN7MonitorC2Eff) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer(unsigned int)
    monitor.o(.ARM.exidx.text._ZN7MonitorC2Eff) refers to monitor.o(.text._ZN7MonitorC2Eff) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor11setValueMaxEf) refers to pid.o(.text._Z3maxIfET_S0_S0_) for float max<float>(float, float)
    monitor.o(.ARM.exidx.text._ZN7Monitor11setValueMaxEf) refers to monitor.o(.text._ZN7Monitor11setValueMaxEf) for [Anonymous Symbol]
    monitor.o(.text._ZN7MonitorD2Ev) refers to monitor.o(.rodata._ZTV7Monitor) for vtable for Monitor
    monitor.o(.text._ZN7MonitorD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    monitor.o(.ARM.exidx.text._ZN7MonitorD2Ev) refers to monitor.o(.text._ZN7MonitorD2Ev) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor11setValueMinEf) refers to pid.o(.text._Z3minIfET_S0_S0_) for float min<float>(float, float)
    monitor.o(.ARM.exidx.text._ZN7Monitor11setValueMinEf) refers to monitor.o(.text._ZN7Monitor11setValueMinEf) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor9update1msEv) refers to ramp.o(.text._Z8getRangeIfET_PKS0_) for float getRange<float>(float const*)
    monitor.o(.text._ZN7Monitor9update1msEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    monitor.o(.text._ZN7Monitor9update1msEv) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    monitor.o(.text._ZN7Monitor9update1msEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmple
    monitor.o(.text._ZN7Monitor9update1msEv) refers to common_timer.o(.text._ZN11CommonTimeraSEb) for CommonTimer::operator=(bool)
    monitor.o(.text._ZN7Monitor9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    monitor.o(.ARM.exidx.text._ZN7Monitor9update1msEv) refers to monitor.o(.text._ZN7Monitor9update1msEv) for [Anonymous Symbol]
    monitor.o(.ARM.exidx.text._ZN7Monitor3getEv) refers to monitor.o(.text._ZN7Monitor3getEv) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor3setEf) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    monitor.o(.ARM.exidx.text._ZN7Monitor3setEf) refers to monitor.o(.text._ZN7Monitor3setEf) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor11setTresholdE9TRES_TYPEt) refers to fflt_clz.o(x$fpl$ffltu) for __aeabi_ui2f
    monitor.o(.ARM.exidx.text._ZN7Monitor11setTresholdE9TRES_TYPEt) refers to monitor.o(.text._ZN7Monitor11setTresholdE9TRES_TYPEt) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor12setTresDelayE9TRES_TYPEt) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for CommonTimer::setPeriod(unsigned int)
    monitor.o(.ARM.exidx.text._ZN7Monitor12setTresDelayE9TRES_TYPEt) refers to monitor.o(.text._ZN7Monitor12setTresDelayE9TRES_TYPEt) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor11isHighAlarmEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    monitor.o(.ARM.exidx.text._ZN7Monitor11isHighAlarmEv) refers to monitor.o(.text._ZN7Monitor11isHighAlarmEv) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor10isHighWarnEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    monitor.o(.ARM.exidx.text._ZN7Monitor10isHighWarnEv) refers to monitor.o(.text._ZN7Monitor10isHighWarnEv) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor9isLowWarnEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    monitor.o(.ARM.exidx.text._ZN7Monitor9isLowWarnEv) refers to monitor.o(.text._ZN7Monitor9isLowWarnEv) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor10isLowAlarmEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    monitor.o(.ARM.exidx.text._ZN7Monitor10isLowAlarmEv) refers to monitor.o(.text._ZN7Monitor10isLowAlarmEv) for [Anonymous Symbol]
    monitor.o(.text._ZN7MonitoraSEf) refers to monitor.o(.text._ZN7Monitor3setEf) for Monitor::set(float)
    monitor.o(.ARM.exidx.text._ZN7MonitoraSEf) refers to monitor.o(.text._ZN7MonitoraSEf) for [Anonymous Symbol]
    monitor.o(.ARM.exidx.text._ZN7Monitor8getInRefEv) refers to monitor.o(.text._ZN7Monitor8getInRefEv) for [Anonymous Symbol]
    monitor.o(.rodata._ZTV7Monitor) refers to monitor.o(.text._ZN7Monitor9update1msEv) for Monitor::update1ms()
    moving_avg.o(.text._ZN6MovAvgC2Eh) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for IUpdatedSomewhere::IUpdatedSomewhere__sub_object()
    moving_avg.o(.text._ZN6MovAvgC2Eh) refers to moving_avg.o(.rodata._ZTV6MovAvg) for vtable for MovAvg
    moving_avg.o(.text._ZN6MovAvgC2Eh) refers to moving_avg.o(.text._Z3maxIhET_S0_S0_) for unsigned char max<unsigned char>(unsigned char, unsigned char)
    moving_avg.o(.text._ZN6MovAvgC2Eh) refers to cxa_aux_runtime.cpp.o(.text.__cxa_throw_bad_array_new_length) for __cxa_throw_bad_array_new_length
    moving_avg.o(.text._ZN6MovAvgC2Eh) refers to new.cpp.o(.text._Znaj) for operator new[](unsigned int)
    moving_avg.o(.text._ZN6MovAvgC2Eh) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    moving_avg.o(.ARM.exidx.text._ZN6MovAvgC2Eh) refers to moving_avg.o(.text._ZN6MovAvgC2Eh) for [Anonymous Symbol]
    moving_avg.o(.text._ZN6MovAvgD2Ev) refers to moving_avg.o(.rodata._ZTV6MovAvg) for vtable for MovAvg
    moving_avg.o(.text._ZN6MovAvgD2Ev) refers to new.cpp.o(.text._ZdaPv) for operator delete[](void*)
    moving_avg.o(.ARM.exidx.text._ZN6MovAvgD2Ev) refers to moving_avg.o(.text._ZN6MovAvgD2Ev) for [Anonymous Symbol]
    moving_avg.o(.ARM.exidx.text._ZN6MovAvg3setEf) refers to moving_avg.o(.text._ZN6MovAvg3setEf) for [Anonymous Symbol]
    moving_avg.o(.ARM.exidx.text._ZN6MovAvg3getEv) refers to moving_avg.o(.text._ZN6MovAvg3getEv) for [Anonymous Symbol]
    moving_avg.o(.text._ZN6MovAvg15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    moving_avg.o(.text._ZN6MovAvg15updateSomewhereEv) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    moving_avg.o(.text._ZN6MovAvg15updateSomewhereEv) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    moving_avg.o(.ARM.exidx.text._ZN6MovAvg15updateSomewhereEv) refers to moving_avg.o(.text._ZN6MovAvg15updateSomewhereEv) for [Anonymous Symbol]
    moving_avg.o(.text._ZN6MovAvgaSEf) refers to moving_avg.o(.text._ZN6MovAvg3setEf) for MovAvg::set(float)
    moving_avg.o(.ARM.exidx.text._ZN6MovAvgaSEf) refers to moving_avg.o(.text._ZN6MovAvgaSEf) for [Anonymous Symbol]
    moving_avg.o(.ARM.exidx.text._ZN6MovAvg8getInRefEv) refers to moving_avg.o(.text._ZN6MovAvg8getInRefEv) for [Anonymous Symbol]
    moving_avg.o(.ARM.exidx.text._ZN6MovAvg9getOutRefEv) refers to moving_avg.o(.text._ZN6MovAvg9getOutRefEv) for [Anonymous Symbol]
    moving_avg.o(.rodata._ZTV6MovAvg) refers to moving_avg.o(.text._ZN6MovAvg15updateSomewhereEv) for MovAvg::updateSomewhere()
    counter.o(.text._ZN7CounterC2E7IMPULSEj) refers to rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE) for RFimpulse::RFimpulse__sub_object(IMPULSE)
    counter.o(.ARM.exidx.text._ZN7CounterC2E7IMPULSEj) refers to counter.o(.text._ZN7CounterC2E7IMPULSEj) for [Anonymous Symbol]
    counter.o(.text._ZN7Counter3addEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    counter.o(.text._ZN7Counter3addEb) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for RFimpulse::get()
    counter.o(.ARM.exidx.text._ZN7Counter3addEb) refers to counter.o(.text._ZN7Counter3addEb) for [Anonymous Symbol]
    counter.o(.text._ZN7Counter3subEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    counter.o(.text._ZN7Counter3subEb) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for RFimpulse::get()
    counter.o(.ARM.exidx.text._ZN7Counter3subEb) refers to counter.o(.text._ZN7Counter3subEb) for [Anonymous Symbol]
    counter.o(.ARM.exidx.text._ZN7Counter3getEv) refers to counter.o(.text._ZN7Counter3getEv) for [Anonymous Symbol]
    counter.o(.text._ZN7CounterpLEb) refers to counter.o(.text._ZN7Counter3addEb) for Counter::add(bool)
    counter.o(.ARM.exidx.text._ZN7CounterpLEb) refers to counter.o(.text._ZN7CounterpLEb) for [Anonymous Symbol]
    counter.o(.text._ZN7CountermIEb) refers to counter.o(.text._ZN7Counter3subEb) for Counter::sub(bool)
    counter.o(.ARM.exidx.text._ZN7CountermIEb) refers to counter.o(.text._ZN7CountermIEb) for [Anonymous Symbol]
    counter.o(.ARM.exidx.text._ZN7Counter9getOutRefEv) refers to counter.o(.text._ZN7Counter9getOutRefEv) for [Anonymous Symbol]
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_md.o(RESET) refers to main.o(.text.TIM2_IRQHandler) for TIM2_IRQHandler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    system_stm32f10x.o(.text.SystemInit) refers to system_stm32f10x.o(.text.SetSysClock) for SetSysClock
    system_stm32f10x.o(.ARM.exidx.text.SystemInit) refers to system_stm32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(.ARM.exidx.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClock) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72) refers to system_stm32f10x.o(.text.SetSysClockTo72) for [Anonymous Symbol]
    atexit_cxa.o(.text) refers to cxa_atexit.o(.text) for __cxa_atexit
    atexit_cxa.o(.ARM.exidx) refers to atexit_cxa.o(.text) for .text
    cxa_atexit.o(.text) refers to aeabi_atexit.o(.text) for __aeabi_atexit
    cxa_atexit.o(.ARM.exidx) refers to cxa_atexit.o(.text) for .text
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    init_aeabi.o(.emb_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.init_array) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.dummy_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers to init_aeabi.o(.text) for .text
    faddsub_clz.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$fadd) refers to faddsub_clz.o(x$fpl$fsub) for _fsub1
    faddsub_clz.o(x$fpl$fadd) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    faddsub_clz.o(x$fpl$fadd) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    faddsub_clz.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$frsb) refers to faddsub_clz.o(x$fpl$fadd) for _fadd1
    faddsub_clz.o(x$fpl$frsb) refers to faddsub_clz.o(x$fpl$fsub) for _fsub1
    faddsub_clz.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$fsub) refers to faddsub_clz.o(x$fpl$fadd) for _fadd1
    faddsub_clz.o(x$fpl$fsub) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fcmp.o(x$fpl$fcmp) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(x$fpl$fcmp) refers to feqf.o(x$fpl$feqf) for _fcmpeq
    fcmp.o(x$fpl$fcmp) refers to fgeqf.o(x$fpl$fgeqf) for _fcmpge
    fcmp.o(x$fpl$fcmp) refers to fleqf.o(x$fpl$fleqf) for _fcmple
    fdiv.o(x$fpl$frdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(x$fpl$frdiv) refers to fdiv.o(x$fpl$fdiv) for _fdiv1
    fdiv.o(x$fpl$fdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(x$fpl$fdiv) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fdiv.o(x$fpl$fdiv) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    ffix.o(x$fpl$ffix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffix) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    ffix.o(x$fpl$ffixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffixr) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fflt_clz.o(x$fpl$ffltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$fflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$ffltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fmul.o(x$fpl$fmul) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    new.cpp.o(.text._ZSt17__throw_bad_allocv) refers to abort.o(.text) for abort
    new.cpp.o(.ARM.exidx.text._ZSt17__throw_bad_allocv) refers to new.cpp.o(.text._ZSt17__throw_bad_allocv) for [Anonymous Symbol]
    new.cpp.o(.text._Znwj) refers to h1_alloc.o(.text) for malloc
    new.cpp.o(.text._Znwj) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for std::get_new_handler()
    new.cpp.o(.ARM.exidx.text._Znwj) refers to new.cpp.o(.text._Znwj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjRKSt9nothrow_t) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    new.cpp.o(.ARM.exidx.text._ZnwjRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._Znaj) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    new.cpp.o(.ARM.exidx.text._Znaj) refers to new.cpp.o(.text._Znaj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajRKSt9nothrow_t) refers to new.cpp.o(.text._Znaj) for operator new[](unsigned int)
    new.cpp.o(.ARM.exidx.text._ZnajRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPv) refers to h1_free.o(.text) for free
    new.cpp.o(.ARM.exidx.text._ZdlPv) refers to new.cpp.o(.text._ZdlPv) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdlPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvj) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdlPvj) refers to new.cpp.o(.text._ZdlPvj) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPv) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdaPv) refers to new.cpp.o(.text._ZdaPv) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPv) for operator delete[](void*)
    new.cpp.o(.ARM.exidx.text._ZdaPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvj) refers to new.cpp.o(.text._ZdaPv) for operator delete[](void*)
    new.cpp.o(.ARM.exidx.text._ZdaPvj) refers to new.cpp.o(.text._ZdaPvj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjSt11align_val_t) refers to h1_memalign.o(.text) for posix_memalign
    new.cpp.o(.text._ZnwjSt11align_val_t) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for std::get_new_handler()
    new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for operator new(unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajSt11align_val_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for operator new(unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_t) refers to new.cpp.o(.text._ZnajSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajSt11align_val_t) for operator new[](unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvSt11align_val_t) refers to h1_free.o(.text) for free
    new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvjSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdlPvjSt11align_val_t) refers to new.cpp.o(.text._ZdlPvjSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for operator delete[](void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvjSt11align_val_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for operator delete[](void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvjSt11align_val_t) refers to new.cpp.o(.text._ZdaPvjSt11align_val_t) for [Anonymous Symbol]
    cxa_aux_runtime.cpp.o(.text.__cxa_bad_cast) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    cxa_aux_runtime.cpp.o(.ARM.exidx.text.__cxa_bad_cast) refers to cxa_aux_runtime.cpp.o(.text.__cxa_bad_cast) for [Anonymous Symbol]
    cxa_aux_runtime.cpp.o(.text.__cxa_bad_typeid) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    cxa_aux_runtime.cpp.o(.ARM.exidx.text.__cxa_bad_typeid) refers to cxa_aux_runtime.cpp.o(.text.__cxa_bad_typeid) for [Anonymous Symbol]
    cxa_aux_runtime.cpp.o(.text.__cxa_throw_bad_array_new_length) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    cxa_aux_runtime.cpp.o(.ARM.exidx.text.__cxa_throw_bad_array_new_length) refers to cxa_aux_runtime.cpp.o(.text.__cxa_throw_bad_array_new_length) for [Anonymous Symbol]
    cxa_virtual.cpp.o(.text.__cxa_pure_virtual) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_pure_virtual) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for [Anonymous Symbol]
    cxa_virtual.cpp.o(.text.__cxa_deleted_virtual) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_deleted_virtual) refers to cxa_virtual.cpp.o(.text.__cxa_deleted_virtual) for [Anonymous Symbol]
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_alloc.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_memalign.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_free_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign_threads.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_memalign_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.__Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.free$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.malloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.posix_memalign$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to h1_free.o(.text) for free
    heap2.o(i.realloc$realtime) refers to h1_alloc.o(.text) for malloc
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i._FDIterate) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.__Heap_Initialize$realtime$concurrent) refers to mutex_dummy.o(.text) for _mutex_initialize
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers to heap2_threads.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(i._FDIterate) for _FDIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.free$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.malloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_free.o(.text) for free
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_alloc.o(.text) for malloc
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    abort.o(.text) refers to defsig_abrt_outer.o(.text) for __rt_SIGABRT
    abort.o(.text) refers (Weak) to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    abort.o(.text) refers to sys_exit.o(.text) for _sys_exit
    atexit_aeabi.o(.text) refers to aeabi_atexit.o(.text) for __aeabi_atexit
    atexit_aeabi.o(.ARM.exidx) refers to atexit_aeabi.o(.text) for .text
    aeabi_atexit.o(.text) refers (Special) to cxa_finalize.o(.text) for __cxa_finalize
    aeabi_atexit.o(.text) refers to h1_alloc.o(.text) for malloc
    aeabi_atexit.o(.text) refers to rt_ddtor_pointer_addr_intlibspace.o(.text) for __rt_ddtor_pointer_addr
    aeabi_atexit.o(.ARM.exidx) refers (Special) to cxa_finalize.o(.text) for __cxa_finalize
    aeabi_atexit.o(.ARM.exidx) refers to aeabi_atexit.o(.text) for .text
    libinit2.o(.ARM.Collect$$libinit$$00000007) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000033) refers (Weak) to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    feqf.o(x$fpl$feqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    feqf.o(x$fpl$feqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    feqf.o(x$fpl$feqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    fgeqf.o(x$fpl$fgeqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fgeqf.o(x$fpl$fgeqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fgeqf.o(x$fpl$fgeqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    fleqf.o(x$fpl$fleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fleqf.o(x$fpl$fleqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fleqf.o(x$fpl$fleqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fretinf.o(x$fpl$fretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt14get_unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt12__unexpectedPFvvE) refers to cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt10unexpectedv) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_handlers.cpp.o(.text._ZSt10unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) for std::__unexpected(void (*)())
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt10unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt10unexpectedv) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt13get_terminatev) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt13get_terminatev) refers to cxa_handlers.cpp.o(.text._ZSt13get_terminatev) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt11__terminatePFvvE) refers to cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt9terminatev) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_handlers.cpp.o(.text._ZSt9terminatev) refers to cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) for std::__terminate(void (*)())
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt9terminatev) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) refers to cxa_default_handlers.cpp.o(.bss.__cxa_new_handler) for __cxa_new_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt15get_new_handlerv) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for [Anonymous Symbol]
    abort_message.cpp.o(.text.abort_message) refers to abort.o(.text) for abort
    abort_message.cpp.o(.ARM.exidx.text.abort_message) refers to abort_message.cpp.o(.text.abort_message) for [Anonymous Symbol]
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_ddtor_pointer_addr.o(.text) refers to rt_ddtor_pointer_addr.o(.bss) for __rt_ddtor_pointer_addr_data
    rt_ddtor_pointer_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000007) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc1.o(.text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init.o(.text) for __Heap_Initialize
    h1_init_threads.o(.text) refers to mutex_dummy.o(.text) for _mutex_initialize
    cxa_finalize.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000001) for __rt_lib_shutdown_cpp_2
    cxa_finalize.o(.text) refers to rt_ddtor_pointer_addr_intlibspace.o(.text) for __rt_ddtor_pointer_addr
    cxa_finalize.o(.text) refers to h1_free.o(.text) for free
    cxa_finalize.o(.ARM.exidx) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000001) for __rt_lib_shutdown_cpp_2
    cxa_finalize.o(.ARM.exidx) refers to cxa_finalize.o(.text) for .text
    defsig_abrt_outer.o(.text) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig_abrt_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_abrt_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    fcmpi.o(x$fpl$fcmpinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt14set_unexpectedPFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) refers to abort.o(.text) for abort
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt13set_terminatePFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE) refers to cxa_default_handlers.cpp.o(.bss.__cxa_new_handler) for __cxa_new_handler
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt15set_new_handlerPFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) refers to abort.o(.text) for abort
    cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    maybetermalloc2.o(.text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free.o(.text) for free
    h1_extend_threads.o(.text) refers to h1_free_threads.o(.text) for free_internal$concurrent
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libshutdown2.o(.ARM.Collect$$libshutdown$$00000001) refers (Weak) to cxa_finalize.o(.text) for __cxa_finalize
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final.o(.text) for __Heap_Finalize
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    defsig.o(CL$$defsig) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    main.o(.text._ZN5ScaleIfsEC2Effss) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for IUpdatedSomewhere::IUpdatedSomewhere__sub_object()
    main.o(.text._ZN5ScaleIfsEC2Effss) refers to main.o(.rodata._ZTV5ScaleIfsE) for vtable for Scale<float, short>
    main.o(.ARM.exidx.text._ZN5ScaleIfsEC2Effss) refers to main.o(.text._ZN5ScaleIfsEC2Effss) for [Anonymous Symbol]
    main.o(.text._ZN17IUpdatedSomewhereC2Ev) refers to main.o(.rodata._ZTV17IUpdatedSomewhere) for vtable for IUpdatedSomewhere
    main.o(.ARM.exidx.text._ZN17IUpdatedSomewhereC2Ev) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for [Anonymous Symbol]
    main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) refers to ffix.o(x$fpl$ffix) for __aeabi_f2iz
    main.o(.ARM.exidx.text._ZN5ScaleIfsE15updateSomewhereEv) refers to main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) for [Anonymous Symbol]
    main.o(.rodata._ZTV5ScaleIfsE) refers to main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) for Scale<float, short>::updateSomewhere()
    main.o(.rodata._ZTV17IUpdatedSomewhere) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    test_task.o(.text._ZN5ScaleIfsEaSEf) refers to test_task.o(.text._ZN5ScaleIfsE3setEf) for Scale<float, short>::set(float)
    test_task.o(.ARM.exidx.text._ZN5ScaleIfsEaSEf) refers to test_task.o(.text._ZN5ScaleIfsEaSEf) for [Anonymous Symbol]
    test_task.o(.ARM.exidx.text._ZN5ScaleIfsE3getEv) refers to test_task.o(.text._ZN5ScaleIfsE3getEv) for [Anonymous Symbol]
    test_task.o(.text._ZN5ScaleIfsE3setEf) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    test_task.o(.ARM.exidx.text._ZN5ScaleIfsE3setEf) refers to test_task.o(.text._ZN5ScaleIfsE3setEf) for [Anonymous Symbol]
    test_task.o(.text._Z5limitIfET_S0_S0_S0_) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmple
    test_task.o(.text._Z5limitIfET_S0_S0_S0_) refers to test_task.o(.text._Z6toggleIfEvPT_S1_) for void toggle<float>(float*, float*)
    test_task.o(.ARM.exidx.text._Z5limitIfET_S0_S0_S0_) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for [Anonymous Symbol]
    test_task.o(.ARM.exidx.text._Z6toggleIfEvPT_S1_) refers to test_task.o(.text._Z6toggleIfEvPT_S1_) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._Z11setRegisterIVjEvPT_jj) refers to init.o(.text._Z11setRegisterIVjEvPT_jj) for [Anonymous Symbol]
    init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) refers to common.o(.text._Z11getPositionj) for getPosition(unsigned int)
    init.o(.ARM.exidx.text._Z17setBitsInRegisterIVjEvPT_jj) refers to init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for [Anonymous Symbol]
    init.o(.text._Z17setBitsInRegisterIVtEvPT_jj) refers to common.o(.text._Z11getPositionj) for getPosition(unsigned int)
    init.o(.ARM.exidx.text._Z17setBitsInRegisterIVtEvPT_jj) refers to init.o(.text._Z17setBitsInRegisterIVtEvPT_jj) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN5ScaleItfEC2Ettff) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for IUpdatedSomewhere::IUpdatedSomewhere__sub_object()
    analog_monitor.o(.text._ZN5ScaleItfEC2Ettff) refers to analog_monitor.o(.rodata._ZTV5ScaleItfE) for vtable for Scale<unsigned short, float>
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfEC2Ettff) refers to analog_monitor.o(.text._ZN5ScaleItfEC2Ettff) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN5ScaleItfEaSEt) refers to analog_monitor.o(.text._ZN5ScaleItfE3setEt) for Scale<unsigned short, float>::set(unsigned short)
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfEaSEt) refers to analog_monitor.o(.text._ZN5ScaleItfEaSEt) for [Anonymous Symbol]
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE3getEv) refers to analog_monitor.o(.text._ZN5ScaleItfE3getEv) for [Anonymous Symbol]
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE8getInRefEv) refers to analog_monitor.o(.text._ZN5ScaleItfE8getInRefEv) for [Anonymous Symbol]
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE9getOutRefEv) refers to analog_monitor.o(.text._ZN5ScaleItfE9getOutRefEv) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE15updateSomewhereEv) refers to analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN5ScaleItfE3setEt) refers to analog_monitor.o(.text._Z5limitItET_S0_S0_S0_) for unsigned short limit<unsigned short>(unsigned short, unsigned short, unsigned short)
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE3setEt) refers to analog_monitor.o(.text._ZN5ScaleItfE3setEt) for [Anonymous Symbol]
    analog_monitor.o(.text._Z5limitItET_S0_S0_S0_) refers to analog_monitor.o(.text._Z6toggleItEvPT_S1_) for void toggle<unsigned short>(unsigned short*, unsigned short*)
    analog_monitor.o(.ARM.exidx.text._Z5limitItET_S0_S0_S0_) refers to analog_monitor.o(.text._Z5limitItET_S0_S0_S0_) for [Anonymous Symbol]
    analog_monitor.o(.ARM.exidx.text._Z6toggleItEvPT_S1_) refers to analog_monitor.o(.text._Z6toggleItEvPT_S1_) for [Anonymous Symbol]
    analog_monitor.o(.rodata._ZTV13AnalogMonitor) refers to monitor.o(.text._ZN7Monitor9update1msEv) for Monitor::update1ms()
    analog_monitor.o(.rodata._ZTV5ScaleItfE) refers to analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) for Scale<unsigned short, float>::updateSomewhere()
    analog_out.o(.text._ZN5ScaleIftEC2Efftt) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for IUpdatedSomewhere::IUpdatedSomewhere__sub_object()
    analog_out.o(.text._ZN5ScaleIftEC2Efftt) refers to analog_out.o(.rodata._ZTV5ScaleIftE) for vtable for Scale<float, unsigned short>
    analog_out.o(.ARM.exidx.text._ZN5ScaleIftEC2Efftt) refers to analog_out.o(.text._ZN5ScaleIftEC2Efftt) for [Anonymous Symbol]
    analog_out.o(.text._ZN5ScaleIftE3setEf) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    analog_out.o(.ARM.exidx.text._ZN5ScaleIftE3setEf) refers to analog_out.o(.text._ZN5ScaleIftE3setEf) for [Anonymous Symbol]
    analog_out.o(.ARM.exidx.text._ZN5ScaleIftE9getOutRefEv) refers to analog_out.o(.text._ZN5ScaleIftE9getOutRefEv) for [Anonymous Symbol]
    analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) refers to ffix.o(x$fpl$ffix) for __aeabi_f2iz
    analog_out.o(.ARM.exidx.text._ZN5ScaleIftE15updateSomewhereEv) refers to analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) for [Anonymous Symbol]
    analog_out.o(.rodata._ZTV5ScaleIftE) refers to analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) for Scale<float, unsigned short>::updateSomewhere()
    coil.o(.text._ZN12ProgrammCoilC2Ev) refers to coil.o(.text._ZN7ISwitchC2Ev) for ISwitch::ISwitch__sub_object()
    coil.o(.text._ZN12ProgrammCoilC2Ev) refers to coil.o(.rodata._ZTV12ProgrammCoil) for vtable for ProgrammCoil
    coil.o(.ARM.exidx.text._ZN12ProgrammCoilC2Ev) refers to coil.o(.text._ZN12ProgrammCoilC2Ev) for [Anonymous Symbol]
    coil.o(.text._ZN7ISwitchC2Ev) refers to coil.o(.rodata._ZTV7ISwitch) for vtable for ISwitch
    coil.o(.ARM.exidx.text._ZN7ISwitchC2Ev) refers to coil.o(.text._ZN7ISwitchC2Ev) for [Anonymous Symbol]
    coil.o(.rodata._ZTV7ISwitch) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) refers to coil_with_timer.o(.rodata._ZTV11IUpdated1ms) for vtable for IUpdated1ms
    coil_with_timer.o(.ARM.exidx.text._ZN11IUpdated1msC2Ev) refers to coil_with_timer.o(.text._ZN11IUpdated1msC2Ev) for [Anonymous Symbol]
    coil_with_timer.o(.rodata._ZTV11IUpdated1ms) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    on_delay.o(.rodata._ZTV13OnDelayCommon) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    off_delay.o(.rodata._ZTV14OffDelayCommon) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    pulse.o(.rodata._ZTV11PulseCommon) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    pid.o(.text._Z3absIfET_S0_) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpge
    pid.o(.ARM.exidx.text._Z3absIfET_S0_) refers to pid.o(.text._Z3absIfET_S0_) for [Anonymous Symbol]
    pid.o(.text._Z3maxIfET_S0_S0_) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmple
    pid.o(.ARM.exidx.text._Z3maxIfET_S0_S0_) refers to pid.o(.text._Z3maxIfET_S0_S0_) for [Anonymous Symbol]
    pid.o(.text._Z3minIfET_S0_S0_) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpge
    pid.o(.ARM.exidx.text._Z3minIfET_S0_S0_) refers to pid.o(.text._Z3minIfET_S0_S0_) for [Anonymous Symbol]
    ramp.o(.text._Z8getRangeIfET_PKS0_) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    ramp.o(.ARM.exidx.text._Z8getRangeIfET_PKS0_) refers to ramp.o(.text._Z8getRangeIfET_PKS0_) for [Anonymous Symbol]
    moving_avg.o(.ARM.exidx.text._Z3maxIhET_S0_S0_) refers to moving_avg.o(.text._Z3maxIhET_S0_S0_) for [Anonymous Symbol]


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.1), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.2), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.3), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.4), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.5), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.6), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.7), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.8), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.9), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.10), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.11), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.12), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.13), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.14), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.15), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.16), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationTickHook), (8 bytes).
    Removing main.o(.text.vApplicationMallocFailedHook), (4 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationMallocFailedHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.TIM2_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text._GLOBAL__sub_I_main.cpp), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing croutine.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (246 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (224 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (300 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (66 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (16 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (92 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (80 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (362 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (82 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (414 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.text.prvCopyDataToQueue), (204 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (46 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (210 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (194 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (38 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (342 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (198 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (96 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (20 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (140 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.prvInitialiseNewStreamBuffer), (64 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (44 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (100 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (58 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (88 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (24 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.prvBytesInBuffer), (56 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (322 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (128 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (186 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (242 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (134 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (74 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.prvReadBytesFromBuffer), (136 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (172 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (44 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (64 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (106 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (106 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (12 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteBytesToBuffer), (138 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (186 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (244 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (454 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (342 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (236 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (78 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (292 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetSchedulerState), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (348 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityDisinherit), (240 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (312 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (430 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (540 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (406 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (82 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (148 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (16 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (62 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (50 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (20 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (16 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing led_task.o(.text), (0 bytes).
    Removing led_task.o(.ARM.exidx.text._Z7ledTaskPv), (8 bytes).
    Removing test_task.o(.text), (0 bytes).
    Removing test_task.o(.ARM.exidx.text.__cxx_global_var_init), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._Z8testTaskPv), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._GLOBAL__sub_I_test_task.cpp), (8 bytes).
    Removing pidtask.o(.text), (0 bytes).
    Removing pidtask.o(.ARM.exidx.text._Z7pidTaskPv), (8 bytes).
    Removing common.o(.text), (0 bytes).
    Removing common.o(.text._Z10badTimeOutj), (34 bytes).
    Removing common.o(.ARM.exidx.text._Z10badTimeOutj), (8 bytes).
    Removing common.o(.ARM.exidx.text._Z11getPositionj), (8 bytes).
    Removing init.o(.text), (0 bytes).
    Removing init.o(.ARM.exidx.text._Z10commonInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL26__NVIC_SetPriorityGroupingj), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z7rccInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z8tickInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL16__NVIC_EnableIRQ4IRQn), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL18__NVIC_SetPriority4IRQnj), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z7adcInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z7pwmInitv), (8 bytes).
    Removing analog_monitor.o(.text), (0 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorC2Ehff), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorD2Ev), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor3setEt), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitoraSEt), (8 bytes).
    Removing analog_monitor.o(.text._ZN13AnalogMonitor8getInRefEv), (18 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor8getInRefEv), (8 bytes).
    Removing analog_monitor.o(.text._ZN13AnalogMonitor9getOutRefEv), (18 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor9getOutRefEv), (8 bytes).
    Removing analog_out.o(.text), (0 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOutC2Etjffff), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut9update1msEv), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOutD2Ev), (8 bytes).
    Removing analog_out.o(.text._ZN9AnalogOut3setEf), (20 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut3setEf), (8 bytes).
    Removing analog_out.o(.text._ZN9AnalogOut3getEv), (20 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut3getEv), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOutaSEf), (8 bytes).
    Removing analog_out.o(.text._ZN9AnalogOut8getInRefEv), (16 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut8getInRefEv), (8 bytes).
    Removing analog_out.o(.text._ZN9AnalogOut9getOutRefEv), (18 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut9getOutRefEv), (8 bytes).
    Removing coil.o(.text), (0 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil8isActiveEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil8setValueEb), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil3setEv), (20 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil3setEv), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil5resetEv), (20 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil5resetEv), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil6toggleEv), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil6toggleEv), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoilaSEb), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoilaSEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4CoilC2EP12GPIO_TypeDefh), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4Coil8isActiveEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4Coil8setValueEb), (8 bytes).
    Removing coil.o(.text._ZN4CoilaSEb), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4CoilaSEb), (8 bytes).
    Removing coil_with_timer.o(.text), (0 bytes).
    Removing coil_with_timer.o(.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht), (80 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht), (8 bytes).
    Removing coil_with_timer.o(.text._ZN11CoilOnDelay9update1msEv), (38 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZN11CoilOnDelay9update1msEv), (8 bytes).
    Removing coil_with_timer.o(.text._ZThn32_N11CoilOnDelay9update1msEv), (14 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZThn32_N11CoilOnDelay9update1msEv), (8 bytes).
    Removing coil_with_timer.o(.text._ZN11CoilOnDelay8setValueEb), (28 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZN11CoilOnDelay8setValueEb), (8 bytes).
    Removing coil_with_timer.o(.text._ZThn16_N11CoilOnDelay8setValueEb), (26 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZThn16_N11CoilOnDelay8setValueEb), (8 bytes).
    Removing coil_with_timer.o(.text._ZN11CoilOnDelayaSEb), (34 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZN11CoilOnDelayaSEb), (8 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht), (8 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZN12CoilOffDelay9update1msEv), (8 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZThn32_N12CoilOffDelay9update1msEv), (8 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZN12CoilOffDelay8setValueEb), (8 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZThn16_N12CoilOffDelay8setValueEb), (8 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZN12CoilOffDelayaSEb), (8 bytes).
    Removing coil_with_timer.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht), (80 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZN9CoilPulseC2EP12GPIO_TypeDefht), (8 bytes).
    Removing coil_with_timer.o(.text._ZN9CoilPulse9update1msEv), (38 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZN9CoilPulse9update1msEv), (8 bytes).
    Removing coil_with_timer.o(.text._ZThn32_N9CoilPulse9update1msEv), (14 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZThn32_N9CoilPulse9update1msEv), (8 bytes).
    Removing coil_with_timer.o(.text._ZN9CoilPulse8setValueEb), (28 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZN9CoilPulse8setValueEb), (8 bytes).
    Removing coil_with_timer.o(.text._ZThn16_N9CoilPulse8setValueEb), (26 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZThn16_N9CoilPulse8setValueEb), (8 bytes).
    Removing coil_with_timer.o(.text._ZN9CoilPulseaSEb), (34 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZN9CoilPulseaSEb), (8 bytes).
    Removing coil_with_timer.o(.rodata._ZTV11CoilOnDelay), (48 bytes).
    Removing coil_with_timer.o(.rodata._ZTV9CoilPulse), (48 bytes).
    Removing gpio_common.o(.text), (0 bytes).
    Removing gpio_common.o(.ARM.exidx.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh), (8 bytes).
    Removing simple_input.o(.text), (0 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInputC2EP12GPIO_TypeDefh), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInput8isActiveEv), (8 bytes).
    Removing simple_input.o(.text._ZN11SimpleInput11isNotActiveEv), (22 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInput11isNotActiveEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed9update1msEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZThn32_N18SimpleInputDelayed9update1msEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed8isActiveEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZThn16_N18SimpleInputDelayed8isActiveEv), (8 bytes).
    Removing switch_delay.o(.text), (0 bytes).
    Removing switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht), (60 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZN11SwitchDelayC2EP7ISwitcht), (8 bytes).
    Removing switch_delay.o(.text._ZN11SwitchDelay9update1msEv), (16 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay9update1msEv), (8 bytes).
    Removing switch_delay.o(.text._ZThn16_N11SwitchDelay9update1msEv), (14 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZThn16_N11SwitchDelay9update1msEv), (8 bytes).
    Removing switch_delay.o(.text._ZN11SwitchDelay7startedEv), (20 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay7startedEv), (8 bytes).
    Removing switch_delay.o(.rodata._ZTV11SwitchDelay), (28 bytes).
    Removing rf_impulse.o(.text), (0 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseC2E7IMPULSE), (8 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3setEb), (8 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3getEv), (8 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseaSEb), (8 bytes).
    Removing common_timer.o(.text), (0 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimerC2Ej), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6updateEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer8finishedEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer9getPeriodEv), (12 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer9getPeriodEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer9setPeriodEj), (16 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer9setPeriodEj), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer14getCurrentTimeEv), (12 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer14getCurrentTimeEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer14setCurrentTimeEj), (16 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer14setCurrentTimeEj), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer5startEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer5pauseEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer4stopEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer5resetEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer15prepareAndStartEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6finishEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer8setStartEb), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimeraSEb), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer7startedEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer10notStartedEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer11notFinishedEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer15finishedImpulseEv), (76 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer15finishedImpulseEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6inWorkEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6isFreeEv), (8 bytes).
    Removing on_delay.o(.text), (0 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN13OnDelayCommonC2Ej), (8 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon6updateEv), (8 bytes).
    Removing on_delay.o(.text._ZN13OnDelayCommon3setEb), (28 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon3setEb), (8 bytes).
    Removing on_delay.o(.text._ZN13OnDelayCommon3getEv), (16 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon3getEv), (8 bytes).
    Removing on_delay.o(.text._ZN13OnDelayCommon5resetEv), (16 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon5resetEv), (8 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelayC2Ej), (8 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelay9update1msEv), (8 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZThn16_N7OnDelay9update1msEv), (8 bytes).
    Removing on_delay.o(.text._ZN7OnDelayaSEb), (32 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelayaSEb), (8 bytes).
    Removing off_delay.o(.text), (0 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN14OffDelayCommonC2Ej), (8 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon6updateEv), (8 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon3setEb), (8 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon3getEv), (8 bytes).
    Removing off_delay.o(.text._ZN14OffDelayCommon5resetEv), (16 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon5resetEv), (8 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelayC2Ej), (8 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelay9update1msEv), (8 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZThn16_N8OffDelay9update1msEv), (8 bytes).
    Removing off_delay.o(.text._ZN8OffDelayaSEb), (32 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelayaSEb), (8 bytes).
    Removing pulse.o(.text), (0 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN11PulseCommonC2Ej), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN11PulseCommon6updateEv), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN11PulseCommon3setEb), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN11PulseCommon3getEv), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN11PulseCommon5resetEv), (8 bytes).
    Removing pulse.o(.text._ZN5PulseC2Ej), (50 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5PulseC2Ej), (8 bytes).
    Removing pulse.o(.text._ZN5Pulse9update1msEv), (16 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5Pulse9update1msEv), (8 bytes).
    Removing pulse.o(.text._ZThn16_N5Pulse9update1msEv), (14 bytes).
    Removing pulse.o(.ARM.exidx.text._ZThn16_N5Pulse9update1msEv), (8 bytes).
    Removing pulse.o(.text._ZN5PulseaSEb), (32 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5PulseaSEb), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN14PulseInterraptC2Ej), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN14PulseInterrapt9update1msEv), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZThn16_N14PulseInterrapt9update1msEv), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN14PulseInterrapt3setEb), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN14PulseInterraptaSEb), (8 bytes).
    Removing pulse.o(.rodata._ZTV5Pulse), (28 bytes).
    Removing pid.o(.text), (0 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDregC2Etfffffffb), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg10updateKoefEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5resetEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg4getTEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5setPvEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5getPvEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5getPvEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5setSpEf), (16 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5setSpEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5getSpEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5getSpEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5setKpEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5getKpEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5getKpEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5setTiEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5getTiEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5getTiEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5setTdEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5getTdEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5getTdEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5setDbEf), (26 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5setDbEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5getDbEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5getDbEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg11setUpOutLimEf), (28 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg11setUpOutLimEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg11getUpOutLimEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg11getUpOutLimEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg13setDownOutLimEf), (28 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg13setDownOutLimEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg13getDownOutLimEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg13getDownOutLimEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg6setOutEf), (46 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg6setOutEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg6getOutEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg6getOutEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg7setAutoEb), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg6isAUTOEv), (18 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg6isAUTOEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg10setInverseEb), (26 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg10setInverseEb), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg9isInverseEv), (18 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg9isInverseEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg15updateSomewhereEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDregaSEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg8getPvRefEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg8getPvRefEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg9getOutRefEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg9getOutRefEv), (8 bytes).
    Removing ramp.o(.text), (0 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4RampC2Ejffff), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp9setLimMaxEf), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp16setFullRangeTimeEj), (8 bytes).
    Removing ramp.o(.text._ZN4RampC2Ejff), (42 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4RampC2Ejff), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4RampC2Ej), (8 bytes).
    Removing ramp.o(.text._ZN4Ramp9getOutMinEv), (12 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp9getOutMinEv), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp11getOutRangeEv), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp9update1msEv), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp3getEv), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp3setEf), (8 bytes).
    Removing ramp.o(.text._ZN4Ramp16getFullRangeTimeEv), (12 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp16getFullRangeTimeEv), (8 bytes).
    Removing ramp.o(.text._ZN4Ramp9setLimMinEf), (28 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp9setLimMinEf), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4RampaSEf), (8 bytes).
    Removing ramp.o(.text._ZN4Ramp8getSpRefEv), (12 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp8getSpRefEv), (8 bytes).
    Removing ramp.o(.text._ZN4Ramp9getOutRefEv), (12 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp9getOutRefEv), (8 bytes).
    Removing three_pos.o(.text), (0 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosRegC2Efffttb), (8 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12setPulseGistEf), (8 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosRegD2Ev), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg3setEf), (16 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg3setEf), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosRegaSEf), (24 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosRegaSEf), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg5setSpEf), (16 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg5setSpEf), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg5getSpEv), (12 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg5getSpEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg11setZeroGistEf), (34 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg11setZeroGistEf), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg11getZeroGistEv), (12 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg11getZeroGistEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg12getPulseGistEv), (12 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12getPulseGistEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg12setPauseTimeEt), (26 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12setPauseTimeEt), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg12getPauseTimeEv), (20 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12getPauseTimeEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg12setPulseTimeEt), (26 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12setPulseTimeEt), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg12getPulseTimeEv), (20 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12getPulseTimeEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg10setReverseEb), (24 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10setReverseEb), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg10getReverseEv), (16 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10getReverseEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg7getOut1Ev), (54 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg7getOut1Ev), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg7getOut2Ev), (54 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg7getOut2Ev), (8 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg17impulseCycleEndedEv), (8 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg21halfImpulseCycleEndedEv), (8 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg9update1msEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg8getInRefEv), (12 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg8getInRefEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg10getOut1RefEv), (38 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10getOut1RefEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg10getOut2RefEv), (38 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10getOut2RefEv), (8 bytes).
    Removing two_pos.o(.text), (0 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommonC2Efb), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon3setEf), (16 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon3setEf), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon3getEv), (22 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon3getEv), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon5setSpEf), (16 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon5setSpEf), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon5getSpEv), (12 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon5getSpEv), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon10setReverseEb), (24 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon10setReverseEb), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon10getReverseEv), (16 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon10getReverseEv), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon8getInRefEv), (10 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon8getInRefEv), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon9getOutRefEv), (12 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon9getOutRefEv), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGistC2Efffb), (82 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGistC2Efffb), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGist10setLowGistEf), (28 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGist10setLowGistEf), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGist11setHighGistEf), (28 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGist11setHighGistEf), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGist3setEf), (32 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGist3setEf), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGist10getLowGistEv), (12 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGist10getLowGistEv), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGist11getHighGistEv), (12 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGist11getHighGistEv), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGist15updateSomewhereEv), (90 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGist15updateSomewhereEv), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGistaSEf), (24 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGistaSEf), (8 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTimC2Efttb), (8 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTimD2Ev), (8 bytes).
    Removing two_pos.o(.text._ZN9TwoPosTim10setLowTimeEt), (26 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTim10setLowTimeEt), (8 bytes).
    Removing two_pos.o(.text._ZN9TwoPosTim10getLowTimeEv), (20 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTim10getLowTimeEv), (8 bytes).
    Removing two_pos.o(.text._ZN9TwoPosTim11setHighTimeEt), (26 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTim11setHighTimeEt), (8 bytes).
    Removing two_pos.o(.text._ZN9TwoPosTim11getHighTimeEv), (20 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTim11getHighTimeEv), (8 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTim9update1msEv), (8 bytes).
    Removing two_pos.o(.text._ZN9TwoPosTimaSEf), (26 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTimaSEf), (8 bytes).
    Removing two_pos.o(.rodata._ZTV10TwoPosGist), (12 bytes).
    Removing sequence.o(.text), (0 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8SequenceC2EPhh), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence8isMyStepEv), (8 bytes).
    Removing sequence.o(.text._ZN8Sequence5resetEv), (24 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence5resetEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence5startEb), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence4lockEb), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence6finishEb), (8 bytes).
    Removing sequence.o(.text._ZN8Sequence6slfSetEbbb), (80 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence6slfSetEbbb), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence7startedEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence6lockedEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence8finishedEv), (8 bytes).
    Removing sequence.o(.text._ZN8Sequence15finishedImpulseEv), (16 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence15finishedImpulseEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN15SequenceDelayedC2EPhhj), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN15SequenceDelayed9update1msEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZThn28_N15SequenceDelayed9update1msEv), (8 bytes).
    Removing monitor.o(.text), (0 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7MonitorC2Eff), (8 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor11setValueMaxEf), (8 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7MonitorD2Ev), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor11setValueMinEf), (28 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor11setValueMinEf), (8 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor9update1msEv), (8 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor3getEv), (8 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor3setEf), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor11setTresholdE9TRES_TYPEt), (42 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor11setTresholdE9TRES_TYPEt), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor12setTresDelayE9TRES_TYPEt), (38 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor12setTresDelayE9TRES_TYPEt), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor11isHighAlarmEv), (18 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor11isHighAlarmEv), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor10isHighWarnEv), (18 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor10isHighWarnEv), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor9isLowWarnEv), (18 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor9isLowWarnEv), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor10isLowAlarmEv), (18 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor10isLowAlarmEv), (8 bytes).
    Removing monitor.o(.text._ZN7MonitoraSEf), (24 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7MonitoraSEf), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor8getInRefEv), (12 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor8getInRefEv), (8 bytes).
    Removing moving_avg.o(.text), (0 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvgC2Eh), (8 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvgD2Ev), (8 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvg3setEf), (8 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvg3getEv), (8 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvg15updateSomewhereEv), (8 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvgaSEf), (8 bytes).
    Removing moving_avg.o(.text._ZN6MovAvg8getInRefEv), (12 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvg8getInRefEv), (8 bytes).
    Removing moving_avg.o(.text._ZN6MovAvg9getOutRefEv), (12 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvg9getOutRefEv), (8 bytes).
    Removing counter.o(.text), (0 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7CounterC2E7IMPULSEj), (8 bytes).
    Removing counter.o(.text._ZN7Counter3addEb), (50 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7Counter3addEb), (8 bytes).
    Removing counter.o(.text._ZN7Counter3subEb), (50 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7Counter3subEb), (8 bytes).
    Removing counter.o(.text._ZN7Counter3getEv), (12 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7Counter3getEv), (8 bytes).
    Removing counter.o(.text._ZN7CounterpLEb), (32 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7CounterpLEb), (8 bytes).
    Removing counter.o(.text._ZN7CountermIEb), (32 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7CountermIEb), (8 bytes).
    Removing counter.o(.text._ZN7Counter9getOutRefEv), (12 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7Counter9getOutRefEv), (8 bytes).
    Removing system_stm32f10x.o(.text), (0 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72), (8 bytes).
    Removing new.cpp.o(.text), (0 bytes).
    Removing new.cpp.o(.text._ZSt17__throw_bad_allocv), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZSt17__throw_bad_allocv), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._Znwj), (8 bytes).
    Removing new.cpp.o(.text._ZnwjRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._Znaj), (8 bytes).
    Removing new.cpp.o(.text._ZnajRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPv), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvj), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPv), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvj), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvj), (8 bytes).
    Removing new.cpp.o(.text._ZnwjSt11align_val_t), (74 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZnajSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvjSt11align_val_t), (6 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvjSt11align_val_t), (6 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.rodata._ZSt7nothrow), (1 bytes).
    Removing cxa_aux_runtime.cpp.o(.text), (0 bytes).
    Removing cxa_aux_runtime.cpp.o(.text.__cxa_bad_cast), (4 bytes).
    Removing cxa_aux_runtime.cpp.o(.ARM.exidx.text.__cxa_bad_cast), (8 bytes).
    Removing cxa_aux_runtime.cpp.o(.text.__cxa_bad_typeid), (4 bytes).
    Removing cxa_aux_runtime.cpp.o(.ARM.exidx.text.__cxa_bad_typeid), (8 bytes).
    Removing cxa_aux_runtime.cpp.o(.ARM.exidx.text.__cxa_throw_bad_array_new_length), (8 bytes).
    Removing cxa_virtual.cpp.o(.text), (0 bytes).
    Removing cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_pure_virtual), (8 bytes).
    Removing cxa_virtual.cpp.o(.text.__cxa_deleted_virtual), (44 bytes).
    Removing cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_deleted_virtual), (8 bytes).
    Removing cxa_handlers.cpp.o(.text), (0 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv), (12 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt14get_unexpectedv), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE), (52 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt12__unexpectedPFvvE), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt10unexpectedv), (14 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt10unexpectedv), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt13get_terminatev), (12 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt13get_terminatev), (8 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt11__terminatePFvvE), (8 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt9terminatev), (8 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt15get_new_handlerv), (8 bytes).
    Removing abort_message.cpp.o(.text), (0 bytes).
    Removing abort_message.cpp.o(.ARM.exidx.text.abort_message), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text), (0 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE), (30 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt14set_unexpectedPFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE), (30 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt13set_terminatePFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE), (18 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt15set_new_handlerPFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler), (4 bytes).
    Removing main.o(.ARM.exidx.text._ZN5ScaleIfsEC2Effss), (8 bytes).
    Removing main.o(.ARM.exidx.text._ZN17IUpdatedSomewhereC2Ev), (8 bytes).
    Removing main.o(.ARM.exidx.text._ZN5ScaleIfsE15updateSomewhereEv), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._ZN5ScaleIfsEaSEf), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._ZN5ScaleIfsE3getEv), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._ZN5ScaleIfsE3setEf), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._Z5limitIfET_S0_S0_S0_), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._Z6toggleIfEvPT_S1_), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z11setRegisterIVjEvPT_jj), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z17setBitsInRegisterIVjEvPT_jj), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z17setBitsInRegisterIVtEvPT_jj), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfEC2Ettff), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfEaSEt), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE3getEv), (8 bytes).
    Removing analog_monitor.o(.text._ZN5ScaleItfE8getInRefEv), (12 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE8getInRefEv), (8 bytes).
    Removing analog_monitor.o(.text._ZN5ScaleItfE9getOutRefEv), (12 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE9getOutRefEv), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE15updateSomewhereEv), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE3setEt), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._Z5limitItET_S0_S0_S0_), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._Z6toggleItEvPT_S1_), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN5ScaleIftEC2Efftt), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN5ScaleIftE3setEf), (8 bytes).
    Removing analog_out.o(.text._ZN5ScaleIftE9getOutRefEv), (12 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN5ScaleIftE9getOutRefEv), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN5ScaleIftE15updateSomewhereEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoilC2Ev), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN7ISwitchC2Ev), (8 bytes).
    Removing coil_with_timer.o(.ARM.exidx.text._ZN11IUpdated1msC2Ev), (8 bytes).
    Removing pid.o(.ARM.exidx.text._Z3absIfET_S0_), (8 bytes).
    Removing pid.o(.ARM.exidx.text._Z3maxIfET_S0_S0_), (8 bytes).
    Removing pid.o(.text._Z3minIfET_S0_S0_), (38 bytes).
    Removing pid.o(.ARM.exidx.text._Z3minIfET_S0_S0_), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._Z8getRangeIfET_PKS0_), (8 bytes).
    Removing moving_avg.o(.ARM.exidx.text._Z3maxIhET_S0_S0_), (8 bytes).

870 unused section(s) (total 22131 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ddtor_pointer_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ddtor_pointer_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  mutex_dummy.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/arm_runtime.c                    0x00000000   Number         0  init_aeabi.o ABSOLUTE
    ../clib/arm_runtime.c                    0x00000000   Number         0  init_aeabi.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_memalign.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_memalign_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/r_arm_target.c                   0x00000000   Number         0  __ARM_resolve_target1.o ABSOLUTE
    ../clib/r_arm_target.c                   0x00000000   Number         0  __ARM_resolve_target1_abs32.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  atexit_cxa.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  cxa_atexit.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  abort.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  atexit_aeabi.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  aeabi_atexit.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  cxa_finalize.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/faddsub.s                       0x00000000   Number         0  faddsub_clz.o ABSOLUTE
    ../fplib/fcmp.s                          0x00000000   Number         0  fcmp.o ABSOLUTE
    ../fplib/fcmpi.s                         0x00000000   Number         0  fcmpi.o ABSOLUTE
    ../fplib/fdiv.s                          0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/feqf.s                          0x00000000   Number         0  feqf.o ABSOLUTE
    ../fplib/ffix.s                          0x00000000   Number         0  ffix.o ABSOLUTE
    ../fplib/fflt.s                          0x00000000   Number         0  fflt_clz.o ABSOLUTE
    ../fplib/fgeqf.s                         0x00000000   Number         0  fgeqf.o ABSOLUTE
    ../fplib/fleqf.s                         0x00000000   Number         0  fleqf.o ABSOLUTE
    ../fplib/fmul.s                          0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/fnaninf.s                       0x00000000   Number         0  fnaninf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    ../fplib/fretinf.s                       0x00000000   Number         0  fretinf.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    RTE/Device/STM32F103C8/startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    abort_message.cpp                        0x00000000   Number         0  abort_message.cpp.o ABSOLUTE
    analog_monitor.cpp                       0x00000000   Number         0  analog_monitor.o ABSOLUTE
    analog_out.cpp                           0x00000000   Number         0  analog_out.o ABSOLUTE
    coil.cpp                                 0x00000000   Number         0  coil.o ABSOLUTE
    coil_with_timer.cpp                      0x00000000   Number         0  coil_with_timer.o ABSOLUTE
    common.cpp                               0x00000000   Number         0  common.o ABSOLUTE
    common_timer.cpp                         0x00000000   Number         0  common_timer.o ABSOLUTE
    counter.cpp                              0x00000000   Number         0  counter.o ABSOLUTE
    croutine.c                               0x00000000   Number         0  croutine.o ABSOLUTE
    cxa_aux_runtime.cpp                      0x00000000   Number         0  cxa_aux_runtime.cpp.o ABSOLUTE
    cxa_default_handlers.cpp                 0x00000000   Number         0  cxa_default_handlers.cpp.o ABSOLUTE
    cxa_handlers.cpp                         0x00000000   Number         0  cxa_handlers.cpp.o ABSOLUTE
    cxa_virtual.cpp                          0x00000000   Number         0  cxa_virtual.cpp.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    gpio_common.cpp                          0x00000000   Number         0  gpio_common.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.cpp                                 0x00000000   Number         0  init.o ABSOLUTE
    led_task.cpp                             0x00000000   Number         0  led_task.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.cpp                                 0x00000000   Number         0  main.o ABSOLUTE
    monitor.cpp                              0x00000000   Number         0  monitor.o ABSOLUTE
    moving_avg.cpp                           0x00000000   Number         0  moving_avg.o ABSOLUTE
    new.cpp                                  0x00000000   Number         0  new.cpp.o ABSOLUTE
    off_delay.cpp                            0x00000000   Number         0  off_delay.o ABSOLUTE
    on_delay.cpp                             0x00000000   Number         0  on_delay.o ABSOLUTE
    pid.cpp                                  0x00000000   Number         0  pid.o ABSOLUTE
    pidTask.cpp                              0x00000000   Number         0  pidtask.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    pulse.cpp                                0x00000000   Number         0  pulse.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    ramp.cpp                                 0x00000000   Number         0  ramp.o ABSOLUTE
    rf_impulse.cpp                           0x00000000   Number         0  rf_impulse.o ABSOLUTE
    sequence.cpp                             0x00000000   Number         0  sequence.o ABSOLUTE
    simple_input.cpp                         0x00000000   Number         0  simple_input.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    switch_delay.cpp                         0x00000000   Number         0  switch_delay.o ABSOLUTE
    system_stm32f10x.c                       0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    test_task.cpp                            0x00000000   Number         0  test_task.o ABSOLUTE
    three_pos.cpp                            0x00000000   Number         0  three_pos.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    two_pos.cpp                              0x00000000   Number         0  two_pos.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    !!!main                                  0x080000ec   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000f4   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000128   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000144   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000160   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$00000007          0x08000162   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000007)
    .ARM.Collect$$libinit$$0000000C          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0800016a   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libinit$$00000034          0x0800016e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800016e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000170   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000001      0x08000172   Section        6  libshutdown2.o(.ARM.Collect$$libshutdown$$00000001)
    .ARM.Collect$$libshutdown$$00000002      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000178   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0800017a   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800017a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800017a   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x08000180   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x08000180   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000184   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000184   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800018c   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800018e   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800018e   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000192   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x08000198   Section       64  startup_stm32f10x_md.o(.text)
    .text                                    0x080001d8   Section        0  cxa_atexit.o(.text)
    .text                                    0x080001e2   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0800026c   Section       16  aeabi_memset4.o(.text)
    .text                                    0x0800027c   Section       68  rt_memclr.o(.text)
    .text                                    0x080002c0   Section       78  rt_memclr_w.o(.text)
    .text                                    0x0800030e   Section        0  heapauxi.o(.text)
    .text                                    0x08000314   Section        0  init_aeabi.o(.text)
    .text                                    0x08000338   Section        0  h1_alloc.o(.text)
    .text                                    0x08000396   Section        0  h1_free.o(.text)
    .text                                    0x080003e4   Section        0  abort.o(.text)
    .text                                    0x080003fa   Section        0  aeabi_atexit.o(.text)
    .text                                    0x08000428   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x0800048c   Section        0  sys_exit.o(.text)
    .text                                    0x08000498   Section        8  rt_heap_descriptor_intlibspace.o(.text)
    .text                                    0x080004a0   Section        8  rt_ddtor_pointer_addr_intlibspace.o(.text)
    .text                                    0x080004a8   Section        0  hguard.o(.text)
    .text                                    0x080004ac   Section        0  init_alloc.o(.text)
    .text                                    0x08000536   Section        0  h1_init.o(.text)
    .text                                    0x08000544   Section        0  cxa_finalize.o(.text)
    .text                                    0x08000586   Section        0  defsig_abrt_outer.o(.text)
    .text                                    0x08000594   Section        8  libspace.o(.text)
    .text                                    0x0800059c   Section        2  use_no_semi.o(.text)
    .text                                    0x0800059e   Section        0  indicate_semi.o(.text)
    .text                                    0x0800059e   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080005e8   Section        0  maybetermalloc1.o(.text)
    .text                                    0x080005e8   Section        0  h1_extend.o(.text)
    .text                                    0x0800061c   Section        0  exit.o(.text)
    .text                                    0x0800062e   Section        0  defsig_exit.o(.text)
    .text                                    0x08000638   Section        0  defsig_abrt_inner.o(.text)
    .text                                    0x08000668   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x08000676   Section        0  defsig_general.o(.text)
    .text                                    0x080006a8   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x080006f8   Section        0  sys_wrch.o(.text)
    [Anonymous Symbol]                       0x08000710   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x08000750   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08000760   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x08000780   Number         0  port.o(.text.SVC_Handler)
    SetSysClock                              0x08000785   Thumb Code     8  system_stm32f10x.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x08000784   Section        0  system_stm32f10x.o(.text.SetSysClock)
    SetSysClockTo72                          0x0800078d   Thumb Code   290  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x0800078c   Section        0  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x080008b0   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080008ec   Section        0  system_stm32f10x.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x08000a10   Section        0  system_stm32f10x.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000a78   Section        0  main.o(.text.TIM2_IRQHandler)
    _GLOBAL__sub_I_main.cpp                  0x08000ac5   Thumb Code    72  main.o(.text._GLOBAL__sub_I_main.cpp)
    [Anonymous Symbol]                       0x08000ac4   Section        0  main.o(.text._GLOBAL__sub_I_main.cpp)
    _GLOBAL__sub_I_test_task.cpp             0x08000b0d   Thumb Code     8  test_task.o(.text._GLOBAL__sub_I_test_task.cpp)
    [Anonymous Symbol]                       0x08000b0c   Section        0  test_task.o(.text._GLOBAL__sub_I_test_task.cpp)
    [Anonymous Symbol]                       0x08000b14   Section        0  init.o(.text._Z10commonInitv)
    [Anonymous Symbol]                       0x08000b24   Section        0  common.o(.text._Z11getPositionj)
    [Anonymous Symbol]                       0x08000b64   Section        0  init.o(.text._Z11setRegisterIVjEvPT_jj)
    [Anonymous Symbol]                       0x08000b84   Section        0  init.o(.text._Z17setBitsInRegisterIVjEvPT_jj)
    [Anonymous Symbol]                       0x08000bc8   Section        0  init.o(.text._Z17setBitsInRegisterIVtEvPT_jj)
    [Anonymous Symbol]                       0x08000c0c   Section        0  pid.o(.text._Z3absIfET_S0_)
    [Anonymous Symbol]                       0x08000c30   Section        0  pid.o(.text._Z3maxIfET_S0_S0_)
    [Anonymous Symbol]                       0x08000c58   Section        0  moving_avg.o(.text._Z3maxIhET_S0_S0_)
    [Anonymous Symbol]                       0x08000c8c   Section        0  test_task.o(.text._Z5limitIfET_S0_S0_S0_)
    [Anonymous Symbol]                       0x08000cd8   Section        0  analog_monitor.o(.text._Z5limitItET_S0_S0_S0_)
    [Anonymous Symbol]                       0x08000d3c   Section        0  test_task.o(.text._Z6toggleIfEvPT_S1_)
    [Anonymous Symbol]                       0x08000d5c   Section        0  analog_monitor.o(.text._Z6toggleItEvPT_S1_)
    [Anonymous Symbol]                       0x08000d80   Section        0  init.o(.text._Z7adcInitv)
    [Anonymous Symbol]                       0x08000ed8   Section        0  led_task.o(.text._Z7ledTaskPv)
    [Anonymous Symbol]                       0x08000f04   Section        0  pidtask.o(.text._Z7pidTaskPv)
    [Anonymous Symbol]                       0x08000f68   Section        0  init.o(.text._Z7pwmInitv)
    [Anonymous Symbol]                       0x08001014   Section        0  init.o(.text._Z7rccInitv)
    [Anonymous Symbol]                       0x080010e4   Section        0  ramp.o(.text._Z8getRangeIfET_PKS0_)
    [Anonymous Symbol]                       0x080010f8   Section        0  test_task.o(.text._Z8testTaskPv)
    [Anonymous Symbol]                       0x0800125c   Section        0  init.o(.text._Z8tickInitv)
    __NVIC_EnableIRQ(IRQn)                   0x080012b5   Thumb Code    48  init.o(.text._ZL16__NVIC_EnableIRQ4IRQn)
    [Anonymous Symbol]                       0x080012b4   Section        0  init.o(.text._ZL16__NVIC_EnableIRQ4IRQn)
    __NVIC_SetPriority(IRQn, unsigned int)   0x080012e5   Thumb Code    66  init.o(.text._ZL18__NVIC_SetPriority4IRQnj)
    [Anonymous Symbol]                       0x080012e4   Section        0  init.o(.text._ZL18__NVIC_SetPriority4IRQnj)
    __NVIC_SetPriorityGrouping(unsigned int) 0x08001329   Thumb Code    60  init.o(.text._ZL26__NVIC_SetPriorityGroupingj)
    [Anonymous Symbol]                       0x08001328   Section        0  init.o(.text._ZL26__NVIC_SetPriorityGroupingj)
    [Anonymous Symbol]                       0x08001364   Section        0  gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh)
    [Anonymous Symbol]                       0x08001448   Section        0  common_timer.o(.text._ZN11CommonTimer10notStartedEv)
    [Anonymous Symbol]                       0x08001458   Section        0  common_timer.o(.text._ZN11CommonTimer11notFinishedEv)
    [Anonymous Symbol]                       0x08001470   Section        0  common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv)
    [Anonymous Symbol]                       0x08001488   Section        0  common_timer.o(.text._ZN11CommonTimer4stopEv)
    [Anonymous Symbol]                       0x080014a0   Section        0  common_timer.o(.text._ZN11CommonTimer5pauseEv)
    [Anonymous Symbol]                       0x080014b0   Section        0  common_timer.o(.text._ZN11CommonTimer5resetEv)
    [Anonymous Symbol]                       0x080014c0   Section        0  common_timer.o(.text._ZN11CommonTimer5startEv)
    [Anonymous Symbol]                       0x080014d0   Section        0  common_timer.o(.text._ZN11CommonTimer6finishEv)
    [Anonymous Symbol]                       0x080014e8   Section        0  common_timer.o(.text._ZN11CommonTimer6inWorkEv)
    [Anonymous Symbol]                       0x08001518   Section        0  common_timer.o(.text._ZN11CommonTimer6isFreeEv)
    [Anonymous Symbol]                       0x08001544   Section        0  common_timer.o(.text._ZN11CommonTimer6updateEv)
    [Anonymous Symbol]                       0x0800157c   Section        0  common_timer.o(.text._ZN11CommonTimer7startedEv)
    [Anonymous Symbol]                       0x0800158c   Section        0  common_timer.o(.text._ZN11CommonTimer8finishedEv)
    [Anonymous Symbol]                       0x080015a4   Section        0  common_timer.o(.text._ZN11CommonTimer8setStartEb)
    [Anonymous Symbol]                       0x080015d0   Section        0  common_timer.o(.text._ZN11CommonTimerC2Ej)
    [Anonymous Symbol]                       0x080015ec   Section        0  common_timer.o(.text._ZN11CommonTimeraSEb)
    [Anonymous Symbol]                       0x0800160c   Section        0  coil_with_timer.o(.text._ZN11IUpdated1msC2Ev)
    [Anonymous Symbol]                       0x08001624   Section        0  pulse.o(.text._ZN11PulseCommon3getEv)
    [Anonymous Symbol]                       0x08001634   Section        0  pulse.o(.text._ZN11PulseCommon3setEb)
    [Anonymous Symbol]                       0x0800167c   Section        0  pulse.o(.text._ZN11PulseCommon5resetEv)
    [Anonymous Symbol]                       0x08001690   Section        0  pulse.o(.text._ZN11PulseCommon6updateEv)
    [Anonymous Symbol]                       0x080016b4   Section        0  pulse.o(.text._ZN11PulseCommonC2Ej)
    [Anonymous Symbol]                       0x080016d8   Section        0  simple_input.o(.text._ZN11SimpleInput8isActiveEv)
    [Anonymous Symbol]                       0x08001718   Section        0  simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh)
    [Anonymous Symbol]                       0x080017b0   Section        0  three_pos.o(.text._ZN11ThreePosReg12setPulseGistEf)
    [Anonymous Symbol]                       0x080017d4   Section        0  three_pos.o(.text._ZN11ThreePosReg17impulseCycleEndedEv)
    [Anonymous Symbol]                       0x080017e8   Section        0  three_pos.o(.text._ZN11ThreePosReg21halfImpulseCycleEndedEv)
    [Anonymous Symbol]                       0x08001818   Section        0  three_pos.o(.text._ZN11ThreePosReg9update1msEv)
    [Anonymous Symbol]                       0x08001998   Section        0  three_pos.o(.text._ZN11ThreePosRegC2Efffttb)
    [Anonymous Symbol]                       0x08001a28   Section        0  three_pos.o(.text._ZN11ThreePosRegD2Ev)
    [Anonymous Symbol]                       0x08001a6c   Section        0  coil_with_timer.o(.text._ZN12CoilOffDelay8setValueEb)
    [Anonymous Symbol]                       0x08001a88   Section        0  coil_with_timer.o(.text._ZN12CoilOffDelay9update1msEv)
    [Anonymous Symbol]                       0x08001ab0   Section        0  coil_with_timer.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht)
    [Anonymous Symbol]                       0x08001b00   Section        0  coil_with_timer.o(.text._ZN12CoilOffDelayaSEb)
    [Anonymous Symbol]                       0x08001b24   Section        0  coil.o(.text._ZN12ProgrammCoil8isActiveEv)
    [Anonymous Symbol]                       0x08001b34   Section        0  coil.o(.text._ZN12ProgrammCoil8setValueEb)
    [Anonymous Symbol]                       0x08001b4c   Section        0  coil.o(.text._ZN12ProgrammCoilC2Ev)
    [Anonymous Symbol]                       0x08001b6c   Section        0  two_pos.o(.text._ZN12TwoPosCommonC2Efb)
    [Anonymous Symbol]                       0x08001b8c   Section        0  analog_monitor.o(.text._ZN13AnalogMonitor3setEt)
    [Anonymous Symbol]                       0x08001bb8   Section        0  analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff)
    [Anonymous Symbol]                       0x08001c40   Section        0  analog_monitor.o(.text._ZN13AnalogMonitorD2Ev)
    [Anonymous Symbol]                       0x08001c78   Section        0  analog_monitor.o(.text._ZN13AnalogMonitoraSEt)
    [Anonymous Symbol]                       0x08001c94   Section        0  on_delay.o(.text._ZN13OnDelayCommon6updateEv)
    [Anonymous Symbol]                       0x08001ca4   Section        0  on_delay.o(.text._ZN13OnDelayCommonC2Ej)
    [Anonymous Symbol]                       0x08001cc8   Section        0  off_delay.o(.text._ZN14OffDelayCommon3getEv)
    [Anonymous Symbol]                       0x08001cf4   Section        0  off_delay.o(.text._ZN14OffDelayCommon3setEb)
    [Anonymous Symbol]                       0x08001d38   Section        0  off_delay.o(.text._ZN14OffDelayCommon6updateEv)
    [Anonymous Symbol]                       0x08001d5c   Section        0  off_delay.o(.text._ZN14OffDelayCommonC2Ej)
    [Anonymous Symbol]                       0x08001d80   Section        0  pulse.o(.text._ZN14PulseInterrapt3setEb)
    [Anonymous Symbol]                       0x08001db0   Section        0  pulse.o(.text._ZN14PulseInterrapt9update1msEv)
    [Anonymous Symbol]                       0x08001dc0   Section        0  pulse.o(.text._ZN14PulseInterraptC2Ej)
    [Anonymous Symbol]                       0x08001df4   Section        0  pulse.o(.text._ZN14PulseInterraptaSEb)
    [Anonymous Symbol]                       0x08001e14   Section        0  sequence.o(.text._ZN15SequenceDelayed9update1msEv)
    [Anonymous Symbol]                       0x08001e58   Section        0  sequence.o(.text._ZN15SequenceDelayedC2EPhhj)
    [Anonymous Symbol]                       0x08001ea0   Section        0  main.o(.text._ZN17IUpdatedSomewhereC2Ev)
    [Anonymous Symbol]                       0x08001eb8   Section        0  simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv)
    [Anonymous Symbol]                       0x08001ec8   Section        0  simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv)
    [Anonymous Symbol]                       0x08001eec   Section        0  simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht)
    [Anonymous Symbol]                       0x08001f3c   Section        0  coil.o(.text._ZN4Coil8isActiveEv)
    [Anonymous Symbol]                       0x08001f54   Section        0  coil.o(.text._ZN4Coil8setValueEb)
    [Anonymous Symbol]                       0x08001f98   Section        0  coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh)
    [Anonymous Symbol]                       0x08002010   Section        0  ramp.o(.text._ZN4Ramp11getOutRangeEv)
    [Anonymous Symbol]                       0x08002024   Section        0  ramp.o(.text._ZN4Ramp16setFullRangeTimeEj)
    [Anonymous Symbol]                       0x08002064   Section        0  ramp.o(.text._ZN4Ramp3getEv)
    [Anonymous Symbol]                       0x08002070   Section        0  ramp.o(.text._ZN4Ramp3setEf)
    [Anonymous Symbol]                       0x08002090   Section        0  ramp.o(.text._ZN4Ramp9setLimMaxEf)
    [Anonymous Symbol]                       0x080020ac   Section        0  ramp.o(.text._ZN4Ramp9update1msEv)
    [Anonymous Symbol]                       0x08002148   Section        0  ramp.o(.text._ZN4RampC2Ej)
    [Anonymous Symbol]                       0x08002174   Section        0  ramp.o(.text._ZN4RampC2Ejffff)
    [Anonymous Symbol]                       0x080021f0   Section        0  ramp.o(.text._ZN4RampaSEf)
    [Anonymous Symbol]                       0x08002208   Section        0  main.o(.text._ZN5ScaleIfsE15updateSomewhereEv)
    [Anonymous Symbol]                       0x08002270   Section        0  test_task.o(.text._ZN5ScaleIfsE3getEv)
    [Anonymous Symbol]                       0x08002280   Section        0  test_task.o(.text._ZN5ScaleIfsE3setEf)
    [Anonymous Symbol]                       0x080022a8   Section        0  main.o(.text._ZN5ScaleIfsEC2Effss)
    [Anonymous Symbol]                       0x080022f0   Section        0  test_task.o(.text._ZN5ScaleIfsEaSEf)
    [Anonymous Symbol]                       0x08002308   Section        0  analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv)
    [Anonymous Symbol]                       0x0800236c   Section        0  analog_out.o(.text._ZN5ScaleIftE3setEf)
    [Anonymous Symbol]                       0x08002394   Section        0  analog_out.o(.text._ZN5ScaleIftEC2Efftt)
    [Anonymous Symbol]                       0x080023dc   Section        0  analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv)
    [Anonymous Symbol]                       0x08002430   Section        0  analog_monitor.o(.text._ZN5ScaleItfE3getEv)
    [Anonymous Symbol]                       0x0800243c   Section        0  analog_monitor.o(.text._ZN5ScaleItfE3setEt)
    [Anonymous Symbol]                       0x08002468   Section        0  analog_monitor.o(.text._ZN5ScaleItfEC2Ettff)
    [Anonymous Symbol]                       0x080024ac   Section        0  analog_monitor.o(.text._ZN5ScaleItfEaSEt)
    [Anonymous Symbol]                       0x080024c8   Section        0  moving_avg.o(.text._ZN6MovAvg15updateSomewhereEv)
    [Anonymous Symbol]                       0x08002548   Section        0  moving_avg.o(.text._ZN6MovAvg3getEv)
    [Anonymous Symbol]                       0x08002554   Section        0  moving_avg.o(.text._ZN6MovAvg3setEf)
    [Anonymous Symbol]                       0x0800256c   Section        0  moving_avg.o(.text._ZN6MovAvgC2Eh)
    [Anonymous Symbol]                       0x080025d8   Section        0  moving_avg.o(.text._ZN6MovAvgD2Ev)
    [Anonymous Symbol]                       0x08002604   Section        0  moving_avg.o(.text._ZN6MovAvgaSEf)
    [Anonymous Symbol]                       0x0800261c   Section        0  pid.o(.text._ZN6PIDreg10updateKoefEv)
    [Anonymous Symbol]                       0x080026f0   Section        0  pid.o(.text._ZN6PIDreg15updateSomewhereEv)
    [Anonymous Symbol]                       0x080027b4   Section        0  pid.o(.text._ZN6PIDreg4getTEv)
    [Anonymous Symbol]                       0x080027c8   Section        0  pid.o(.text._ZN6PIDreg5resetEv)
    [Anonymous Symbol]                       0x080027dc   Section        0  pid.o(.text._ZN6PIDreg5setKpEf)
    [Anonymous Symbol]                       0x080027f4   Section        0  pid.o(.text._ZN6PIDreg5setPvEf)
    [Anonymous Symbol]                       0x0800280c   Section        0  pid.o(.text._ZN6PIDreg5setTdEf)
    [Anonymous Symbol]                       0x08002824   Section        0  pid.o(.text._ZN6PIDreg5setTiEf)
    [Anonymous Symbol]                       0x0800283c   Section        0  pid.o(.text._ZN6PIDreg7setAutoEb)
    [Anonymous Symbol]                       0x08002858   Section        0  pid.o(.text._ZN6PIDregC2Etfffffffb)
    [Anonymous Symbol]                       0x0800290c   Section        0  pid.o(.text._ZN6PIDregaSEf)
    [Anonymous Symbol]                       0x08002924   Section        0  counter.o(.text._ZN7CounterC2E7IMPULSEj)
    [Anonymous Symbol]                       0x08002948   Section        0  coil.o(.text._ZN7ISwitchC2Ev)
    [Anonymous Symbol]                       0x08002960   Section        0  monitor.o(.text._ZN7Monitor11setValueMaxEf)
    [Anonymous Symbol]                       0x0800297c   Section        0  monitor.o(.text._ZN7Monitor3getEv)
    [Anonymous Symbol]                       0x08002988   Section        0  monitor.o(.text._ZN7Monitor3setEf)
    [Anonymous Symbol]                       0x080029a8   Section        0  monitor.o(.text._ZN7Monitor9update1msEv)
    [Anonymous Symbol]                       0x08002a9c   Section        0  monitor.o(.text._ZN7MonitorC2Eff)
    [Anonymous Symbol]                       0x08002b4c   Section        0  monitor.o(.text._ZN7MonitorD2Ev)
    [Anonymous Symbol]                       0x08002b9c   Section        0  on_delay.o(.text._ZN7OnDelay9update1msEv)
    [Anonymous Symbol]                       0x08002bac   Section        0  on_delay.o(.text._ZN7OnDelayC2Ej)
    [Anonymous Symbol]                       0x08002be0   Section        0  off_delay.o(.text._ZN8OffDelay9update1msEv)
    [Anonymous Symbol]                       0x08002bf0   Section        0  off_delay.o(.text._ZN8OffDelayC2Ej)
    [Anonymous Symbol]                       0x08002c24   Section        0  sequence.o(.text._ZN8Sequence4lockEb)
    [Anonymous Symbol]                       0x08002c3c   Section        0  sequence.o(.text._ZN8Sequence5startEb)
    [Anonymous Symbol]                       0x08002c68   Section        0  sequence.o(.text._ZN8Sequence6finishEb)
    [Anonymous Symbol]                       0x08002cac   Section        0  sequence.o(.text._ZN8Sequence6lockedEv)
    [Anonymous Symbol]                       0x08002cbc   Section        0  sequence.o(.text._ZN8Sequence7startedEv)
    [Anonymous Symbol]                       0x08002ce8   Section        0  sequence.o(.text._ZN8Sequence8finishedEv)
    [Anonymous Symbol]                       0x08002cf8   Section        0  sequence.o(.text._ZN8Sequence8isMyStepEv)
    [Anonymous Symbol]                       0x08002d10   Section        0  sequence.o(.text._ZN8SequenceC2EPhh)
    [Anonymous Symbol]                       0x08002d38   Section        0  analog_out.o(.text._ZN9AnalogOut9update1msEv)
    [Anonymous Symbol]                       0x08002d5c   Section        0  analog_out.o(.text._ZN9AnalogOutC2Etjffff)
    [Anonymous Symbol]                       0x08002dc8   Section        0  analog_out.o(.text._ZN9AnalogOutD2Ev)
    [Anonymous Symbol]                       0x08002df8   Section        0  analog_out.o(.text._ZN9AnalogOutaSEf)
    [Anonymous Symbol]                       0x08002e10   Section        0  rf_impulse.o(.text._ZN9RFimpulse3getEv)
    [Anonymous Symbol]                       0x08002e30   Section        0  rf_impulse.o(.text._ZN9RFimpulse3setEb)
    [Anonymous Symbol]                       0x08002ebc   Section        0  rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE)
    [Anonymous Symbol]                       0x08002ed0   Section        0  rf_impulse.o(.text._ZN9RFimpulseaSEb)
    [Anonymous Symbol]                       0x08002ef0   Section        0  two_pos.o(.text._ZN9TwoPosTim9update1msEv)
    [Anonymous Symbol]                       0x08002f78   Section        0  two_pos.o(.text._ZN9TwoPosTimC2Efttb)
    [Anonymous Symbol]                       0x08002ff4   Section        0  two_pos.o(.text._ZN9TwoPosTimD2Ev)
    [Anonymous Symbol]                       0x08003038   Section        0  cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE)
    [Anonymous Symbol]                       0x08003068   Section        0  cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv)
    [Anonymous Symbol]                       0x08003074   Section        0  cxa_handlers.cpp.o(.text._ZSt9terminatev)
    [Anonymous Symbol]                       0x08003084   Section        0  coil_with_timer.o(.text._ZThn16_N12CoilOffDelay8setValueEb)
    [Anonymous Symbol]                       0x080030a0   Section        0  pulse.o(.text._ZThn16_N14PulseInterrapt9update1msEv)
    [Anonymous Symbol]                       0x080030b0   Section        0  simple_input.o(.text._ZThn16_N18SimpleInputDelayed8isActiveEv)
    [Anonymous Symbol]                       0x080030c0   Section        0  on_delay.o(.text._ZThn16_N7OnDelay9update1msEv)
    [Anonymous Symbol]                       0x080030d0   Section        0  off_delay.o(.text._ZThn16_N8OffDelay9update1msEv)
    [Anonymous Symbol]                       0x080030e0   Section        0  sequence.o(.text._ZThn28_N15SequenceDelayed9update1msEv)
    [Anonymous Symbol]                       0x080030f0   Section        0  coil_with_timer.o(.text._ZThn32_N12CoilOffDelay9update1msEv)
    [Anonymous Symbol]                       0x08003100   Section        0  simple_input.o(.text._ZThn32_N18SimpleInputDelayed9update1msEv)
    [Anonymous Symbol]                       0x0800310e   Section        0  new.cpp.o(.text._ZdaPv)
    [Anonymous Symbol]                       0x08003112   Section        0  new.cpp.o(.text._ZdlPv)
    [Anonymous Symbol]                       0x08003116   Section        0  new.cpp.o(.text._ZdlPvj)
    [Anonymous Symbol]                       0x0800311a   Section        0  new.cpp.o(.text._Znaj)
    [Anonymous Symbol]                       0x08003120   Section        0  new.cpp.o(.text._Znwj)
    [Anonymous Symbol]                       0x08003148   Section        0  cxa_virtual.cpp.o(.text.__cxa_pure_virtual)
    [Anonymous Symbol]                       0x08003170   Section        0  cxa_aux_runtime.cpp.o(.text.__cxa_throw_bad_array_new_length)
    __cxx_global_var_init                    0x08003175   Thumb Code    30  main.o(.text.__cxx_global_var_init)
    [Anonymous Symbol]                       0x08003174   Section        0  main.o(.text.__cxx_global_var_init)
    __cxx_global_var_init                    0x08003195   Thumb Code    18  test_task.o(.text.__cxx_global_var_init)
    [Anonymous Symbol]                       0x08003194   Section        0  test_task.o(.text.__cxx_global_var_init)
    __cxx_global_var_init.1                  0x080031a9   Thumb Code    28  main.o(.text.__cxx_global_var_init.1)
    [Anonymous Symbol]                       0x080031a8   Section        0  main.o(.text.__cxx_global_var_init.1)
    __cxx_global_var_init.10                 0x080031c5   Thumb Code    76  main.o(.text.__cxx_global_var_init.10)
    [Anonymous Symbol]                       0x080031c4   Section        0  main.o(.text.__cxx_global_var_init.10)
    __cxx_global_var_init.11                 0x08003211   Thumb Code    20  main.o(.text.__cxx_global_var_init.11)
    [Anonymous Symbol]                       0x08003210   Section        0  main.o(.text.__cxx_global_var_init.11)
    __cxx_global_var_init.12                 0x08003225   Thumb Code    20  main.o(.text.__cxx_global_var_init.12)
    [Anonymous Symbol]                       0x08003224   Section        0  main.o(.text.__cxx_global_var_init.12)
    __cxx_global_var_init.13                 0x08003239   Thumb Code    20  main.o(.text.__cxx_global_var_init.13)
    [Anonymous Symbol]                       0x08003238   Section        0  main.o(.text.__cxx_global_var_init.13)
    __cxx_global_var_init.14                 0x0800324d   Thumb Code    20  main.o(.text.__cxx_global_var_init.14)
    [Anonymous Symbol]                       0x0800324c   Section        0  main.o(.text.__cxx_global_var_init.14)
    __cxx_global_var_init.15                 0x08003261   Thumb Code    26  main.o(.text.__cxx_global_var_init.15)
    [Anonymous Symbol]                       0x08003260   Section        0  main.o(.text.__cxx_global_var_init.15)
    __cxx_global_var_init.16                 0x0800327d   Thumb Code    30  main.o(.text.__cxx_global_var_init.16)
    [Anonymous Symbol]                       0x0800327c   Section        0  main.o(.text.__cxx_global_var_init.16)
    __cxx_global_var_init.2                  0x0800329d   Thumb Code    18  main.o(.text.__cxx_global_var_init.2)
    [Anonymous Symbol]                       0x0800329c   Section        0  main.o(.text.__cxx_global_var_init.2)
    __cxx_global_var_init.3                  0x080032b1   Thumb Code    54  main.o(.text.__cxx_global_var_init.3)
    [Anonymous Symbol]                       0x080032b0   Section        0  main.o(.text.__cxx_global_var_init.3)
    __cxx_global_var_init.4                  0x080032e9   Thumb Code    68  main.o(.text.__cxx_global_var_init.4)
    [Anonymous Symbol]                       0x080032e8   Section        0  main.o(.text.__cxx_global_var_init.4)
    __cxx_global_var_init.5                  0x0800332d   Thumb Code    60  main.o(.text.__cxx_global_var_init.5)
    [Anonymous Symbol]                       0x0800332c   Section        0  main.o(.text.__cxx_global_var_init.5)
    __cxx_global_var_init.6                  0x08003369   Thumb Code    36  main.o(.text.__cxx_global_var_init.6)
    [Anonymous Symbol]                       0x08003368   Section        0  main.o(.text.__cxx_global_var_init.6)
    __cxx_global_var_init.7                  0x0800338d   Thumb Code    20  main.o(.text.__cxx_global_var_init.7)
    [Anonymous Symbol]                       0x0800338c   Section        0  main.o(.text.__cxx_global_var_init.7)
    __cxx_global_var_init.8                  0x080033a1   Thumb Code    46  main.o(.text.__cxx_global_var_init.8)
    [Anonymous Symbol]                       0x080033a0   Section        0  main.o(.text.__cxx_global_var_init.8)
    __cxx_global_var_init.9                  0x080033d1   Thumb Code    64  main.o(.text.__cxx_global_var_init.9)
    [Anonymous Symbol]                       0x080033d0   Section        0  main.o(.text.__cxx_global_var_init.9)
    [Anonymous Symbol]                       0x08003410   Section        0  abort_message.cpp.o(.text.abort_message)
    [Anonymous Symbol]                       0x08003414   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x080034a1   Thumb Code   282  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x080034a0   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x080035bd   Thumb Code   340  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x080035bc   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x08003711   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x08003710   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x0800377d   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x0800377c   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x080037d9   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x080037d8   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvDeleteTCB                             0x0800381d   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x0800381c   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetNextExpireTime                     0x08003835   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x08003834   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x08003875   Thumb Code   174  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x08003874   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x08003925   Thumb Code    60  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x08003924   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x08003961   Thumb Code    72  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x08003960   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x080039a9   Thumb Code   230  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x080039a8   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x08003a91   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x08003a90   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x08003b21   Thumb Code   198  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x08003b20   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x08003be9   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x08003be8   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x08003c71   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x08003c70   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvPortStartFirstTask                    0x08003c99   Thumb Code    32  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x08003c98   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x08003cb9   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x08003cb8   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x08003d0d   Thumb Code   294  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x08003d0c   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x08003e35   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x08003e34   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x08003ed1   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x08003ed0   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x08003f05   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x08003f04   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x08003f41   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x08003f40   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x08003f85   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x08003f84   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x08003fd9   Thumb Code    38  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08003fd8   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x08004001   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x08004000   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x08004021   Thumb Code   174  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08004020   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x080040d0   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08004258   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x080042a8   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x080042f0   Section        0  main.o(.text.vApplicationIdleHook)
    [Anonymous Symbol]                       0x080042f4   Section        0  main.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x08004300   Section        0  main.o(.text.vApplicationTickHook)
    [Anonymous Symbol]                       0x08004304   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x08004334   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x08004344   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x080043b0   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x080043e0   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08004408   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08004480   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x080044b0   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x08004514   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x08004560   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x08004584   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x08004594   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x080045bc   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x0800461c   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x080046b0   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x080046c0   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x080046c0   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x080047ac   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x080047ec   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x0800486c   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x0800493c   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x08004a90   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x08004b2c   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x08004bcc   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x08004be0   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x08004e34   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x08004fa4   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x080051a4   Section        0  timers.o(.text.xTimerCreateTimerTask)
    x$fpl$fadd                               0x080051f4   Section      196  faddsub_clz.o(x$fpl$fadd)
    _fadd1                                   0x08005203   Thumb Code     0  faddsub_clz.o(x$fpl$fadd)
    x$fpl$fcmp                               0x080052b8   Section       84  fcmp.o(x$fpl$fcmp)
    x$fpl$fcmpinf                            0x0800530c   Section       24  fcmpi.o(x$fpl$fcmpinf)
    _fdiv1                                   0x08005325   Thumb Code     0  fdiv.o(x$fpl$fdiv)
    x$fpl$fdiv                               0x08005324   Section      388  fdiv.o(x$fpl$fdiv)
    x$fpl$feqf                               0x080054a8   Section      104  feqf.o(x$fpl$feqf)
    x$fpl$ffix                               0x08005510   Section       54  ffix.o(x$fpl$ffix)
    x$fpl$fflt                               0x08005548   Section       48  fflt_clz.o(x$fpl$fflt)
    x$fpl$ffltu                              0x08005578   Section       38  fflt_clz.o(x$fpl$ffltu)
    x$fpl$fgeqf                              0x080055a0   Section      104  fgeqf.o(x$fpl$fgeqf)
    x$fpl$fleqf                              0x08005608   Section      104  fleqf.o(x$fpl$fleqf)
    x$fpl$fmul                               0x08005670   Section      258  fmul.o(x$fpl$fmul)
    x$fpl$fnaninf                            0x08005772   Section      140  fnaninf.o(x$fpl$fnaninf)
    x$fpl$fretinf                            0x080057fe   Section       10  fretinf.o(x$fpl$fretinf)
    x$fpl$fsub                               0x08005808   Section      234  faddsub_clz.o(x$fpl$fsub)
    _fsub1                                   0x08005817   Thumb Code     0  faddsub_clz.o(x$fpl$fsub)
    x$fpl$usenofp                            0x080058f2   Section        0  usenofp.o(x$fpl$usenofp)
    .L.str                                   0x08005ad4   Data           8  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08005ad4   Section        0  main.o(.rodata.str1.1)
    .L.str.17                                0x08005adc   Data           8  main.o(.rodata.str1.1)
    .L.str.18                                0x08005ae4   Data           9  main.o(.rodata.str1.1)
    .L.str                                   0x08005aed   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08005aed   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x08005af2   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08005af2   Section        0  timers.o(.rodata.str1.1)
    .init_array                              0x08005b28   Section        0  init_aeabi.o(.init_array)
    uxCriticalNesting                        0x2000003c   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x2000003c   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000040   Section       96  libspace.o(.bss)
    prvSampleTimeNow.xLastTime               0x200001ec   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x200001ec   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x20000204   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20000208   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000208   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x2000020c   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x2000020c   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000210   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000210   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000214   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000214   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000218   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000218   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x2000021c   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x2000021c   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000334   Data       10240  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000334   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x20002b34   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002b34   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002b38   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002b38   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002b3c   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002b3c   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002b40   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002b40   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002b44   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002b44   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20002b48   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002b48   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002b5c   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002b5c   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20002b70   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002b70   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002b84   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002b84   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20002b98   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002b98   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20002b9c   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002b9c   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20002ba0   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002ba0   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002ba4   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002ba4   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002ba8   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002ba8   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20002bac   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20002bac   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002bb0   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002bb0   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002bb4   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002bb4   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002bb8   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002bb8   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002bcc   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002bcc   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002bd0   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002bd0   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002bd8   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002bd8   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002bec   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002bec   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002c00   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002c00   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002c04   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002c04   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002c08   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002c08   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002c0c   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002c0c   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002c10   Data        3072  startup_stm32f10x_md.o(HEAP)
    HEAP                                     0x20002c10   Section     3072  startup_stm32f10x_md.o(HEAP)
    Stack_Mem                                0x20003810   Data        1024  startup_stm32f10x_md.o(STACK)
    STACK                                    0x20003810   Section     1024  startup_stm32f10x_md.o(STACK)
    __initial_sp                             0x20003c10   Data           0  startup_stm32f10x_md.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _mutex_acquire                            - Undefined Weak Reference
    _mutex_free                               - Undefined Weak Reference
    _mutex_release                            - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __dso_handle                             0x08000000   Number         0  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000f5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000103   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000129   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000145   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000161   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_2                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000007)
    __rt_lib_init_preinit_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_relocate_pie_1             0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_alloca_1                   0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_2                      0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_exceptions_1               0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_rand_1                     0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_signal_1                   0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_cpp_1                      0x0800016f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_return                     0x0800016f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_shutdown                        0x08000171   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_2                  0x08000173   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000001)
    __rt_lib_shutdown_cpp_1                  0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0800017b   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800017b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800017b   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x08000181   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x08000181   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000185   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000185   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800018d   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800018f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800018f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000193   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000199   Thumb Code     8  startup_stm32f10x_md.o(.text)
    NMI_Handler                              0x080001a1   Thumb Code     2  startup_stm32f10x_md.o(.text)
    HardFault_Handler                        0x080001a3   Thumb Code     2  startup_stm32f10x_md.o(.text)
    MemManage_Handler                        0x080001a5   Thumb Code     2  startup_stm32f10x_md.o(.text)
    BusFault_Handler                         0x080001a7   Thumb Code     2  startup_stm32f10x_md.o(.text)
    UsageFault_Handler                       0x080001a9   Thumb Code     2  startup_stm32f10x_md.o(.text)
    DebugMon_Handler                         0x080001ad   Thumb Code     2  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART1_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART2_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART3_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __user_initial_stackheap                 0x080001b5   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __cxa_atexit                             0x080001d9   Thumb Code    10  cxa_atexit.o(.text)
    __aeabi_memcpy                           0x080001e3   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x080001e3   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08000249   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x0800026d   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x0800026d   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x0800027d   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x0800027d   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x08000281   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x080002c1   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080002c1   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080002c1   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x080002c5   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x0800030f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x08000311   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x08000313   Thumb Code     2  heapauxi.o(.text)
    __cpp_initialize__aeabi_                 0x08000315   Thumb Code    28  init_aeabi.o(.text)
    malloc                                   0x08000339   Thumb Code    94  h1_alloc.o(.text)
    free                                     0x08000397   Thumb Code    78  h1_free.o(.text)
    abort                                    0x080003e5   Thumb Code    22  abort.o(.text)
    __aeabi_atexit                           0x080003fb   Thumb Code    46  aeabi_atexit.o(.text)
    __aeabi_memcpy4                          0x08000429   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000429   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000429   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000471   Thumb Code     0  rt_memcpy_w.o(.text)
    _sys_exit                                0x0800048d   Thumb Code     8  sys_exit.o(.text)
    __rt_heap_descriptor                     0x08000499   Thumb Code     8  rt_heap_descriptor_intlibspace.o(.text)
    __rt_ddtor_pointer_addr                  0x080004a1   Thumb Code     8  rt_ddtor_pointer_addr_intlibspace.o(.text)
    __use_no_heap                            0x080004a9   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x080004ab   Thumb Code     2  hguard.o(.text)
    _terminate_user_alloc                    0x080004ad   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x080004af   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x080004b1   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x080004d3   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x080004d9   Thumb Code    94  init_alloc.o(.text)
    __Heap_Initialize                        0x08000537   Thumb Code    10  h1_init.o(.text)
    __Heap_DescSize                          0x08000541   Thumb Code     4  h1_init.o(.text)
    __cxa_finalize                           0x08000545   Thumb Code    66  cxa_finalize.o(.text)
    __rt_SIGABRT                             0x08000587   Thumb Code    14  defsig_abrt_outer.o(.text)
    __user_libspace                          0x08000595   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000595   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x08000595   Thumb Code     0  libspace.o(.text)
    __I$use$semihosting                      0x0800059d   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0800059d   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0800059f   Thumb Code     0  indicate_semi.o(.text)
    __user_setup_stackheap                   0x0800059f   Thumb Code    74  sys_stackheap_outer.o(.text)
    __Heap_ProvideMemory                     0x080005e9   Thumb Code    52  h1_extend.o(.text)
    _maybe_terminate_alloc                   0x080005e9   Thumb Code     0  maybetermalloc1.o(.text)
    exit                                     0x0800061d   Thumb Code    18  exit.o(.text)
    __sig_exit                               0x0800062f   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGABRT_inner                       0x08000639   Thumb Code    14  defsig_abrt_inner.o(.text)
    __rt_SIGRTMEM                            0x08000669   Thumb Code    14  defsig_rtmem_outer.o(.text)
    __default_signal_display                 0x08000677   Thumb Code    50  defsig_general.o(.text)
    __rt_SIGRTMEM_inner                      0x080006a9   Thumb Code    22  defsig_rtmem_inner.o(.text)
    _ttywrch                                 0x080006f9   Thumb Code    14  sys_wrch.o(.text)
    PendSV_Handler                           0x08000711   Thumb Code    68  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x08000761   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x080008b1   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemCoreClockUpdate                    0x080008ed   Thumb Code   290  system_stm32f10x.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x08000a11   Thumb Code   102  system_stm32f10x.o(.text.SystemInit)
    TIM2_IRQHandler                          0x08000a79   Thumb Code    76  main.o(.text.TIM2_IRQHandler)
    commonInit()                             0x08000b15   Thumb Code    14  init.o(.text._Z10commonInitv)
    getPosition(unsigned int)                0x08000b25   Thumb Code    64  common.o(.text._Z11getPositionj)
    void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int) 0x08000b65   Thumb Code    32  init.o(.text._Z11setRegisterIVjEvPT_jj)
    void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int) 0x08000b85   Thumb Code    68  init.o(.text._Z17setBitsInRegisterIVjEvPT_jj)
    void setBitsInRegister<unsigned short volatile>(unsigned short volatile*, unsigned int, unsigned int) 0x08000bc9   Thumb Code    68  init.o(.text._Z17setBitsInRegisterIVtEvPT_jj)
    float abs<float>(float)                  0x08000c0d   Thumb Code    34  pid.o(.text._Z3absIfET_S0_)
    float max<float>(float, float)           0x08000c31   Thumb Code    38  pid.o(.text._Z3maxIfET_S0_S0_)
    unsigned char max<unsigned char>(unsigned char, unsigned char) 0x08000c59   Thumb Code    52  moving_avg.o(.text._Z3maxIhET_S0_S0_)
    float limit<float>(float, float, float)  0x08000c8d   Thumb Code    76  test_task.o(.text._Z5limitIfET_S0_S0_S0_)
    unsigned short limit<unsigned short>(unsigned short, unsigned short, unsigned short) 0x08000cd9   Thumb Code   100  analog_monitor.o(.text._Z5limitItET_S0_S0_S0_)
    void toggle<float>(float*, float*)       0x08000d3d   Thumb Code    30  test_task.o(.text._Z6toggleIfEvPT_S1_)
    void toggle<unsigned short>(unsigned short*, unsigned short*) 0x08000d5d   Thumb Code    34  analog_monitor.o(.text._Z6toggleItEvPT_S1_)
    adcInit()                                0x08000d81   Thumb Code   344  init.o(.text._Z7adcInitv)
    ledTask(void*)                           0x08000ed9   Thumb Code    42  led_task.o(.text._Z7ledTaskPv)
    pidTask(void*)                           0x08000f05   Thumb Code   100  pidtask.o(.text._Z7pidTaskPv)
    pwmInit()                                0x08000f69   Thumb Code   170  init.o(.text._Z7pwmInitv)
    rccInit()                                0x08001015   Thumb Code   206  init.o(.text._Z7rccInitv)
    float getRange<float>(float const*)      0x080010e5   Thumb Code    20  ramp.o(.text._Z8getRangeIfET_PKS0_)
    testTask(void*)                          0x080010f9   Thumb Code   354  test_task.o(.text._Z8testTaskPv)
    tickInit()                               0x0800125d   Thumb Code    88  init.o(.text._Z8tickInitv)
    GPIOcommon::GPIOcommon(GPIO_TypeDef*, unsigned char) 0x08001365   Thumb Code   226  gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh)
    GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char) 0x08001365   Thumb Code   226  gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh)
    CommonTimer::notStarted()                0x08001449   Thumb Code    16  common_timer.o(.text._ZN11CommonTimer10notStartedEv)
    CommonTimer::notFinished()               0x08001459   Thumb Code    22  common_timer.o(.text._ZN11CommonTimer11notFinishedEv)
    CommonTimer::prepareAndStart()           0x08001471   Thumb Code    24  common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv)
    CommonTimer::stop()                      0x08001489   Thumb Code    24  common_timer.o(.text._ZN11CommonTimer4stopEv)
    CommonTimer::pause()                     0x080014a1   Thumb Code    14  common_timer.o(.text._ZN11CommonTimer5pauseEv)
    CommonTimer::reset()                     0x080014b1   Thumb Code    16  common_timer.o(.text._ZN11CommonTimer5resetEv)
    CommonTimer::start()                     0x080014c1   Thumb Code    14  common_timer.o(.text._ZN11CommonTimer5startEv)
    CommonTimer::finish()                    0x080014d1   Thumb Code    24  common_timer.o(.text._ZN11CommonTimer6finishEv)
    CommonTimer::inWork()                    0x080014e9   Thumb Code    46  common_timer.o(.text._ZN11CommonTimer6inWorkEv)
    CommonTimer::isFree()                    0x08001519   Thumb Code    44  common_timer.o(.text._ZN11CommonTimer6isFreeEv)
    CommonTimer::update()                    0x08001545   Thumb Code    56  common_timer.o(.text._ZN11CommonTimer6updateEv)
    CommonTimer::started()                   0x0800157d   Thumb Code    16  common_timer.o(.text._ZN11CommonTimer7startedEv)
    CommonTimer::finished()                  0x0800158d   Thumb Code    22  common_timer.o(.text._ZN11CommonTimer8finishedEv)
    CommonTimer::setStart(bool)              0x080015a5   Thumb Code    44  common_timer.o(.text._ZN11CommonTimer8setStartEb)
    CommonTimer::CommonTimer(unsigned int)   0x080015d1   Thumb Code    28  common_timer.o(.text._ZN11CommonTimerC2Ej)
    CommonTimer::CommonTimer__sub_object(unsigned int) 0x080015d1   Thumb Code    28  common_timer.o(.text._ZN11CommonTimerC2Ej)
    CommonTimer::operator=(bool)             0x080015ed   Thumb Code    32  common_timer.o(.text._ZN11CommonTimeraSEb)
    IUpdated1ms::IUpdated1ms__sub_object()   0x0800160d   Thumb Code    22  coil_with_timer.o(.text._ZN11IUpdated1msC2Ev)
    PulseCommon::get()                       0x08001625   Thumb Code    16  pulse.o(.text._ZN11PulseCommon3getEv)
    PulseCommon::set(bool)                   0x08001635   Thumb Code    72  pulse.o(.text._ZN11PulseCommon3setEb)
    PulseCommon::reset()                     0x0800167d   Thumb Code    20  pulse.o(.text._ZN11PulseCommon5resetEv)
    PulseCommon::update()                    0x08001691   Thumb Code    36  pulse.o(.text._ZN11PulseCommon6updateEv)
    PulseCommon::PulseCommon(unsigned int)   0x080016b5   Thumb Code    36  pulse.o(.text._ZN11PulseCommonC2Ej)
    PulseCommon::PulseCommon__sub_object(unsigned int) 0x080016b5   Thumb Code    36  pulse.o(.text._ZN11PulseCommonC2Ej)
    SimpleInput::isActive()                  0x080016d9   Thumb Code    64  simple_input.o(.text._ZN11SimpleInput8isActiveEv)
    SimpleInput::SimpleInput(GPIO_TypeDef*, unsigned char) 0x08001719   Thumb Code   152  simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh)
    SimpleInput::SimpleInput__sub_object(GPIO_TypeDef*, unsigned char) 0x08001719   Thumb Code   152  simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh)
    ThreePosReg::setPulseGist(float)         0x080017b1   Thumb Code    34  three_pos.o(.text._ZN11ThreePosReg12setPulseGistEf)
    ThreePosReg::impulseCycleEnded()         0x080017d5   Thumb Code    18  three_pos.o(.text._ZN11ThreePosReg17impulseCycleEndedEv)
    ThreePosReg::halfImpulseCycleEnded()     0x080017e9   Thumb Code    48  three_pos.o(.text._ZN11ThreePosReg21halfImpulseCycleEndedEv)
    ThreePosReg::update1ms()                 0x08001819   Thumb Code   384  three_pos.o(.text._ZN11ThreePosReg9update1msEv)
    ThreePosReg::ThreePosReg(float, float, float, unsigned short, unsigned short, bool) 0x08001999   Thumb Code   144  three_pos.o(.text._ZN11ThreePosRegC2Efffttb)
    ThreePosReg::ThreePosReg__sub_object(float, float, float, unsigned short, unsigned short, bool) 0x08001999   Thumb Code   144  three_pos.o(.text._ZN11ThreePosRegC2Efffttb)
    ThreePosReg::~ThreePosReg()              0x08001a29   Thumb Code    68  three_pos.o(.text._ZN11ThreePosRegD2Ev)
    ThreePosReg::~ThreePosReg__sub_object()  0x08001a29   Thumb Code    68  three_pos.o(.text._ZN11ThreePosRegD2Ev)
    CoilOffDelay::setValue(bool)             0x08001a6d   Thumb Code    28  coil_with_timer.o(.text._ZN12CoilOffDelay8setValueEb)
    CoilOffDelay::update1ms()                0x08001a89   Thumb Code    38  coil_with_timer.o(.text._ZN12CoilOffDelay9update1msEv)
    CoilOffDelay::CoilOffDelay(GPIO_TypeDef*, unsigned char, unsigned short) 0x08001ab1   Thumb Code    80  coil_with_timer.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht)
    CoilOffDelay::CoilOffDelay__sub_object(GPIO_TypeDef*, unsigned char, unsigned short) 0x08001ab1   Thumb Code    80  coil_with_timer.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht)
    CoilOffDelay::operator=(bool)            0x08001b01   Thumb Code    34  coil_with_timer.o(.text._ZN12CoilOffDelayaSEb)
    ProgrammCoil::isActive()                 0x08001b25   Thumb Code    16  coil.o(.text._ZN12ProgrammCoil8isActiveEv)
    ProgrammCoil::setValue(bool)             0x08001b35   Thumb Code    24  coil.o(.text._ZN12ProgrammCoil8setValueEb)
    ProgrammCoil::ProgrammCoil__sub_object() 0x08001b4d   Thumb Code    32  coil.o(.text._ZN12ProgrammCoilC2Ev)
    TwoPosCommon::TwoPosCommon(float, bool)  0x08001b6d   Thumb Code    30  two_pos.o(.text._ZN12TwoPosCommonC2Efb)
    TwoPosCommon::TwoPosCommon__sub_object(float, bool) 0x08001b6d   Thumb Code    30  two_pos.o(.text._ZN12TwoPosCommonC2Efb)
    AnalogMonitor::set(unsigned short)       0x08001b8d   Thumb Code    44  analog_monitor.o(.text._ZN13AnalogMonitor3setEt)
    AnalogMonitor::AnalogMonitor(unsigned char, float, float) 0x08001bb9   Thumb Code   134  analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff)
    AnalogMonitor::AnalogMonitor__sub_object(unsigned char, float, float) 0x08001bb9   Thumb Code   134  analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff)
    AnalogMonitor::~AnalogMonitor()          0x08001c41   Thumb Code    54  analog_monitor.o(.text._ZN13AnalogMonitorD2Ev)
    AnalogMonitor::~AnalogMonitor__sub_object() 0x08001c41   Thumb Code    54  analog_monitor.o(.text._ZN13AnalogMonitorD2Ev)
    AnalogMonitor::operator=(unsigned short) 0x08001c79   Thumb Code    28  analog_monitor.o(.text._ZN13AnalogMonitoraSEt)
    OnDelayCommon::update()                  0x08001c95   Thumb Code    16  on_delay.o(.text._ZN13OnDelayCommon6updateEv)
    OnDelayCommon::OnDelayCommon(unsigned int) 0x08001ca5   Thumb Code    36  on_delay.o(.text._ZN13OnDelayCommonC2Ej)
    OnDelayCommon::OnDelayCommon__sub_object(unsigned int) 0x08001ca5   Thumb Code    36  on_delay.o(.text._ZN13OnDelayCommonC2Ej)
    OffDelayCommon::get()                    0x08001cc9   Thumb Code    42  off_delay.o(.text._ZN14OffDelayCommon3getEv)
    OffDelayCommon::set(bool)                0x08001cf5   Thumb Code    68  off_delay.o(.text._ZN14OffDelayCommon3setEb)
    OffDelayCommon::update()                 0x08001d39   Thumb Code    36  off_delay.o(.text._ZN14OffDelayCommon6updateEv)
    OffDelayCommon::OffDelayCommon(unsigned int) 0x08001d5d   Thumb Code    36  off_delay.o(.text._ZN14OffDelayCommonC2Ej)
    OffDelayCommon::OffDelayCommon__sub_object(unsigned int) 0x08001d5d   Thumb Code    36  off_delay.o(.text._ZN14OffDelayCommonC2Ej)
    PulseInterrapt::set(bool)                0x08001d81   Thumb Code    48  pulse.o(.text._ZN14PulseInterrapt3setEb)
    PulseInterrapt::update1ms()              0x08001db1   Thumb Code    16  pulse.o(.text._ZN14PulseInterrapt9update1msEv)
    PulseInterrapt::PulseInterrapt(unsigned int) 0x08001dc1   Thumb Code    50  pulse.o(.text._ZN14PulseInterraptC2Ej)
    PulseInterrapt::PulseInterrapt__sub_object(unsigned int) 0x08001dc1   Thumb Code    50  pulse.o(.text._ZN14PulseInterraptC2Ej)
    PulseInterrapt::operator=(bool)          0x08001df5   Thumb Code    32  pulse.o(.text._ZN14PulseInterraptaSEb)
    SequenceDelayed::update1ms()             0x08001e15   Thumb Code    66  sequence.o(.text._ZN15SequenceDelayed9update1msEv)
    SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int) 0x08001e59   Thumb Code    70  sequence.o(.text._ZN15SequenceDelayedC2EPhhj)
    SequenceDelayed::SequenceDelayed__sub_object(unsigned char*, unsigned char, unsigned int) 0x08001e59   Thumb Code    70  sequence.o(.text._ZN15SequenceDelayedC2EPhhj)
    IUpdatedSomewhere::IUpdatedSomewhere__sub_object() 0x08001ea1   Thumb Code    22  main.o(.text._ZN17IUpdatedSomewhereC2Ev)
    SimpleInputDelayed::isActive()           0x08001eb9   Thumb Code    16  simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv)
    SimpleInputDelayed::update1ms()          0x08001ec9   Thumb Code    34  simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv)
    SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short) 0x08001eed   Thumb Code    80  simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht)
    SimpleInputDelayed::SimpleInputDelayed__sub_object(GPIO_TypeDef*, unsigned char, unsigned short) 0x08001eed   Thumb Code    80  simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht)
    Coil::isActive()                         0x08001f3d   Thumb Code    22  coil.o(.text._ZN4Coil8isActiveEv)
    Coil::setValue(bool)                     0x08001f55   Thumb Code    66  coil.o(.text._ZN4Coil8setValueEb)
    Coil::Coil(GPIO_TypeDef*, unsigned char) 0x08001f99   Thumb Code   118  coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh)
    Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char) 0x08001f99   Thumb Code   118  coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh)
    Ramp::getOutRange()                      0x08002011   Thumb Code    18  ramp.o(.text._ZN4Ramp11getOutRangeEv)
    Ramp::setFullRangeTime(unsigned int)     0x08002025   Thumb Code    64  ramp.o(.text._ZN4Ramp16setFullRangeTimeEj)
    Ramp::get()                              0x08002065   Thumb Code    12  ramp.o(.text._ZN4Ramp3getEv)
    Ramp::set(float)                         0x08002071   Thumb Code    30  ramp.o(.text._ZN4Ramp3setEf)
    Ramp::setLimMax(float)                   0x08002091   Thumb Code    28  ramp.o(.text._ZN4Ramp9setLimMaxEf)
    Ramp::update1ms()                        0x080020ad   Thumb Code   154  ramp.o(.text._ZN4Ramp9update1msEv)
    Ramp::Ramp(unsigned int)                 0x08002149   Thumb Code    42  ramp.o(.text._ZN4RampC2Ej)
    Ramp::Ramp__sub_object(unsigned int)     0x08002149   Thumb Code    42  ramp.o(.text._ZN4RampC2Ej)
    Ramp::Ramp(unsigned int, float, float, float, float) 0x08002175   Thumb Code   122  ramp.o(.text._ZN4RampC2Ejffff)
    Ramp::Ramp__sub_object(unsigned int, float, float, float, float) 0x08002175   Thumb Code   122  ramp.o(.text._ZN4RampC2Ejffff)
    Ramp::operator=(float)                   0x080021f1   Thumb Code    24  ramp.o(.text._ZN4RampaSEf)
    Scale<float, short>::updateSomewhere()   0x08002209   Thumb Code   102  main.o(.text._ZN5ScaleIfsE15updateSomewhereEv)
    Scale<float, short>::get()               0x08002271   Thumb Code    14  test_task.o(.text._ZN5ScaleIfsE3getEv)
    Scale<float, short>::set(float)          0x08002281   Thumb Code    38  test_task.o(.text._ZN5ScaleIfsE3setEf)
    Scale<float, short>::Scale__sub_object(float, float, short, short) 0x080022a9   Thumb Code    70  main.o(.text._ZN5ScaleIfsEC2Effss)
    Scale<float, short>::operator=(float)    0x080022f1   Thumb Code    24  test_task.o(.text._ZN5ScaleIfsEaSEf)
    Scale<float, unsigned short>::updateSomewhere() 0x08002309   Thumb Code    98  analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv)
    Scale<float, unsigned short>::set(float) 0x0800236d   Thumb Code    38  analog_out.o(.text._ZN5ScaleIftE3setEf)
    Scale<float, unsigned short>::Scale__sub_object(float, float, unsigned short, unsigned short) 0x08002395   Thumb Code    70  analog_out.o(.text._ZN5ScaleIftEC2Efftt)
    Scale<unsigned short, float>::updateSomewhere() 0x080023dd   Thumb Code    82  analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv)
    Scale<unsigned short, float>::get()      0x08002431   Thumb Code    12  analog_monitor.o(.text._ZN5ScaleItfE3getEv)
    Scale<unsigned short, float>::set(unsigned short) 0x0800243d   Thumb Code    42  analog_monitor.o(.text._ZN5ScaleItfE3setEt)
    Scale<unsigned short, float>::Scale__sub_object(unsigned short, unsigned short, float, float) 0x08002469   Thumb Code    66  analog_monitor.o(.text._ZN5ScaleItfEC2Ettff)
    Scale<unsigned short, float>::operator=(unsigned short) 0x080024ad   Thumb Code    28  analog_monitor.o(.text._ZN5ScaleItfEaSEt)
    MovAvg::updateSomewhere()                0x080024c9   Thumb Code   128  moving_avg.o(.text._ZN6MovAvg15updateSomewhereEv)
    MovAvg::get()                            0x08002549   Thumb Code    12  moving_avg.o(.text._ZN6MovAvg3getEv)
    MovAvg::set(float)                       0x08002555   Thumb Code    24  moving_avg.o(.text._ZN6MovAvg3setEf)
    MovAvg::MovAvg(unsigned char)            0x0800256d   Thumb Code   106  moving_avg.o(.text._ZN6MovAvgC2Eh)
    MovAvg::MovAvg__sub_object(unsigned char) 0x0800256d   Thumb Code   106  moving_avg.o(.text._ZN6MovAvgC2Eh)
    MovAvg::~MovAvg()                        0x080025d9   Thumb Code    44  moving_avg.o(.text._ZN6MovAvgD2Ev)
    MovAvg::~MovAvg__sub_object()            0x080025d9   Thumb Code    44  moving_avg.o(.text._ZN6MovAvgD2Ev)
    MovAvg::operator=(float)                 0x08002605   Thumb Code    24  moving_avg.o(.text._ZN6MovAvgaSEf)
    PIDreg::updateKoef()                     0x0800261d   Thumb Code   212  pid.o(.text._ZN6PIDreg10updateKoefEv)
    PIDreg::updateSomewhere()                0x080026f1   Thumb Code   196  pid.o(.text._ZN6PIDreg15updateSomewhereEv)
    PIDreg::getT()                           0x080027b5   Thumb Code    18  pid.o(.text._ZN6PIDreg4getTEv)
    PIDreg::reset()                          0x080027c9   Thumb Code    20  pid.o(.text._ZN6PIDreg5resetEv)
    PIDreg::setKp(float)                     0x080027dd   Thumb Code    22  pid.o(.text._ZN6PIDreg5setKpEf)
    PIDreg::setPv(float)                     0x080027f5   Thumb Code    24  pid.o(.text._ZN6PIDreg5setPvEf)
    PIDreg::setTd(float)                     0x0800280d   Thumb Code    22  pid.o(.text._ZN6PIDreg5setTdEf)
    PIDreg::setTi(float)                     0x08002825   Thumb Code    22  pid.o(.text._ZN6PIDreg5setTiEf)
    PIDreg::setAuto(bool)                    0x0800283d   Thumb Code    26  pid.o(.text._ZN6PIDreg7setAutoEb)
    PIDreg::PIDreg(unsigned short, float, float, float, float, float, float, float, bool) 0x08002859   Thumb Code   180  pid.o(.text._ZN6PIDregC2Etfffffffb)
    PIDreg::PIDreg__sub_object(unsigned short, float, float, float, float, float, float, float, bool) 0x08002859   Thumb Code   180  pid.o(.text._ZN6PIDregC2Etfffffffb)
    PIDreg::operator=(float)                 0x0800290d   Thumb Code    24  pid.o(.text._ZN6PIDregaSEf)
    Counter::Counter(IMPULSE, unsigned int)  0x08002925   Thumb Code    34  counter.o(.text._ZN7CounterC2E7IMPULSEj)
    Counter::Counter__sub_object(IMPULSE, unsigned int) 0x08002925   Thumb Code    34  counter.o(.text._ZN7CounterC2E7IMPULSEj)
    ISwitch::ISwitch__sub_object()           0x08002949   Thumb Code    22  coil.o(.text._ZN7ISwitchC2Ev)
    Monitor::setValueMax(float)              0x08002961   Thumb Code    28  monitor.o(.text._ZN7Monitor11setValueMaxEf)
    Monitor::get()                           0x0800297d   Thumb Code    12  monitor.o(.text._ZN7Monitor3getEv)
    Monitor::set(float)                      0x08002989   Thumb Code    30  monitor.o(.text._ZN7Monitor3setEf)
    Monitor::update1ms()                     0x080029a9   Thumb Code   242  monitor.o(.text._ZN7Monitor9update1msEv)
    Monitor::Monitor(float, float)           0x08002a9d   Thumb Code   174  monitor.o(.text._ZN7MonitorC2Eff)
    Monitor::Monitor__sub_object(float, float) 0x08002a9d   Thumb Code   174  monitor.o(.text._ZN7MonitorC2Eff)
    Monitor::~Monitor()                      0x08002b4d   Thumb Code    80  monitor.o(.text._ZN7MonitorD2Ev)
    Monitor::~Monitor__sub_object()          0x08002b4d   Thumb Code    80  monitor.o(.text._ZN7MonitorD2Ev)
    OnDelay::update1ms()                     0x08002b9d   Thumb Code    16  on_delay.o(.text._ZN7OnDelay9update1msEv)
    OnDelay::OnDelay(unsigned int)           0x08002bad   Thumb Code    50  on_delay.o(.text._ZN7OnDelayC2Ej)
    OnDelay::OnDelay__sub_object(unsigned int) 0x08002bad   Thumb Code    50  on_delay.o(.text._ZN7OnDelayC2Ej)
    OffDelay::update1ms()                    0x08002be1   Thumb Code    16  off_delay.o(.text._ZN8OffDelay9update1msEv)
    OffDelay::OffDelay(unsigned int)         0x08002bf1   Thumb Code    50  off_delay.o(.text._ZN8OffDelayC2Ej)
    OffDelay::OffDelay__sub_object(unsigned int) 0x08002bf1   Thumb Code    50  off_delay.o(.text._ZN8OffDelayC2Ej)
    Sequence::lock(bool)                     0x08002c25   Thumb Code    24  sequence.o(.text._ZN8Sequence4lockEb)
    Sequence::start(bool)                    0x08002c3d   Thumb Code    44  sequence.o(.text._ZN8Sequence5startEb)
    Sequence::finish(bool)                   0x08002c69   Thumb Code    68  sequence.o(.text._ZN8Sequence6finishEb)
    Sequence::locked()                       0x08002cad   Thumb Code    16  sequence.o(.text._ZN8Sequence6lockedEv)
    Sequence::started()                      0x08002cbd   Thumb Code    42  sequence.o(.text._ZN8Sequence7startedEv)
    Sequence::finished()                     0x08002ce9   Thumb Code    16  sequence.o(.text._ZN8Sequence8finishedEv)
    Sequence::isMyStep()                     0x08002cf9   Thumb Code    24  sequence.o(.text._ZN8Sequence8isMyStepEv)
    Sequence::Sequence(unsigned char*, unsigned char) 0x08002d11   Thumb Code    38  sequence.o(.text._ZN8SequenceC2EPhh)
    Sequence::Sequence__sub_object(unsigned char*, unsigned char) 0x08002d11   Thumb Code    38  sequence.o(.text._ZN8SequenceC2EPhh)
    AnalogOut::update1ms()                   0x08002d39   Thumb Code    36  analog_out.o(.text._ZN9AnalogOut9update1msEv)
    AnalogOut::AnalogOut(unsigned short, unsigned int, float, float, float, float) 0x08002d5d   Thumb Code   108  analog_out.o(.text._ZN9AnalogOutC2Etjffff)
    AnalogOut::AnalogOut__sub_object(unsigned short, unsigned int, float, float, float, float) 0x08002d5d   Thumb Code   108  analog_out.o(.text._ZN9AnalogOutC2Etjffff)
    AnalogOut::~AnalogOut()                  0x08002dc9   Thumb Code    46  analog_out.o(.text._ZN9AnalogOutD2Ev)
    AnalogOut::~AnalogOut__sub_object()      0x08002dc9   Thumb Code    46  analog_out.o(.text._ZN9AnalogOutD2Ev)
    AnalogOut::operator=(float)              0x08002df9   Thumb Code    24  analog_out.o(.text._ZN9AnalogOutaSEf)
    RFimpulse::get()                         0x08002e11   Thumb Code    32  rf_impulse.o(.text._ZN9RFimpulse3getEv)
    RFimpulse::set(bool)                     0x08002e31   Thumb Code   138  rf_impulse.o(.text._ZN9RFimpulse3setEb)
    RFimpulse::RFimpulse(IMPULSE)            0x08002ebd   Thumb Code    20  rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE)
    RFimpulse::RFimpulse__sub_object(IMPULSE) 0x08002ebd   Thumb Code    20  rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE)
    RFimpulse::operator=(bool)               0x08002ed1   Thumb Code    32  rf_impulse.o(.text._ZN9RFimpulseaSEb)
    TwoPosTim::update1ms()                   0x08002ef1   Thumb Code   134  two_pos.o(.text._ZN9TwoPosTim9update1msEv)
    TwoPosTim::TwoPosTim(float, unsigned short, unsigned short, bool) 0x08002f79   Thumb Code   122  two_pos.o(.text._ZN9TwoPosTimC2Efttb)
    TwoPosTim::TwoPosTim__sub_object(float, unsigned short, unsigned short, bool) 0x08002f79   Thumb Code   122  two_pos.o(.text._ZN9TwoPosTimC2Efttb)
    TwoPosTim::~TwoPosTim()                  0x08002ff5   Thumb Code    68  two_pos.o(.text._ZN9TwoPosTimD2Ev)
    TwoPosTim::~TwoPosTim__sub_object()      0x08002ff5   Thumb Code    68  two_pos.o(.text._ZN9TwoPosTimD2Ev)
    std::__terminate(void (*)())             0x08003039   Thumb Code     8  cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE)
    std::get_new_handler()                   0x08003069   Thumb Code    12  cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv)
    std::terminate()                         0x08003075   Thumb Code    14  cxa_handlers.cpp.o(.text._ZSt9terminatev)
    non-virtual thunk to CoilOffDelay::setValue(bool) 0x08003085   Thumb Code    26  coil_with_timer.o(.text._ZThn16_N12CoilOffDelay8setValueEb)
    non-virtual thunk to PulseInterrapt::update1ms() 0x080030a1   Thumb Code    14  pulse.o(.text._ZThn16_N14PulseInterrapt9update1msEv)
    non-virtual thunk to SimpleInputDelayed::isActive() 0x080030b1   Thumb Code    14  simple_input.o(.text._ZThn16_N18SimpleInputDelayed8isActiveEv)
    non-virtual thunk to OnDelay::update1ms() 0x080030c1   Thumb Code    14  on_delay.o(.text._ZThn16_N7OnDelay9update1msEv)
    non-virtual thunk to OffDelay::update1ms() 0x080030d1   Thumb Code    14  off_delay.o(.text._ZThn16_N8OffDelay9update1msEv)
    non-virtual thunk to SequenceDelayed::update1ms() 0x080030e1   Thumb Code    14  sequence.o(.text._ZThn28_N15SequenceDelayed9update1msEv)
    non-virtual thunk to CoilOffDelay::update1ms() 0x080030f1   Thumb Code    14  coil_with_timer.o(.text._ZThn32_N12CoilOffDelay9update1msEv)
    non-virtual thunk to SimpleInputDelayed::update1ms() 0x08003101   Thumb Code    14  simple_input.o(.text._ZThn32_N18SimpleInputDelayed9update1msEv)
    operator delete[](void*)                 0x0800310f   Thumb Code     4  new.cpp.o(.text._ZdaPv)
    operator delete(void*)                   0x08003113   Thumb Code     4  new.cpp.o(.text._ZdlPv)
    operator delete(void*, unsigned int)     0x08003117   Thumb Code     4  new.cpp.o(.text._ZdlPvj)
    operator new[](unsigned int)             0x0800311b   Thumb Code     4  new.cpp.o(.text._Znaj)
    operator new(unsigned int)               0x08003121   Thumb Code    38  new.cpp.o(.text._Znwj)
    __cxa_pure_virtual                       0x08003149   Thumb Code     8  cxa_virtual.cpp.o(.text.__cxa_pure_virtual)
    __cxa_throw_bad_array_new_length         0x08003171   Thumb Code     4  cxa_aux_runtime.cpp.o(.text.__cxa_throw_bad_array_new_length)
    abort_message                            0x08003411   Thumb Code     4  abort_message.cpp.o(.text.abort_message)
    main                                     0x08003415   Thumb Code   138  main.o(.text.main)
    pvPortMalloc                             0x080040d1   Thumb Code   390  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x08004259   Thumb Code    80  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x080042a9   Thumb Code    72  list.o(.text.uxListRemove)
    vApplicationIdleHook                     0x080042f1   Thumb Code     2  main.o(.text.vApplicationIdleHook)
    vApplicationStackOverflowHook            0x080042f5   Thumb Code    10  main.o(.text.vApplicationStackOverflowHook)
    vApplicationTickHook                     0x08004301   Thumb Code     2  main.o(.text.vApplicationTickHook)
    vListInitialise                          0x08004305   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x08004335   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x08004345   Thumb Code   106  list.o(.text.vListInsert)
    vPortEnterCritical                       0x080043b1   Thumb Code    48  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x080043e1   Thumb Code    38  port.o(.text.vPortExitCritical)
    vPortFree                                0x08004409   Thumb Code   118  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08004481   Thumb Code    46  port.o(.text.vPortSetupTimerInterrupt)
    vQueueWaitForMessageRestricted           0x080044b1   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x08004515   Thumb Code    74  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x08004561   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x08004585   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x08004595   Thumb Code    38  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x080045bd   Thumb Code    96  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x0800461d   Thumb Code   148  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x080046b1   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x080046c1   Thumb Code   236  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x080047ad   Thumb Code    64  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x080047ed   Thumb Code   126  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x0800486d   Thumb Code   208  queue.o(.text.xQueueGenericReset)
    xQueueReceive                            0x0800493d   Thumb Code   338  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x08004a91   Thumb Code   154  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x08004b2d   Thumb Code   160  tasks.o(.text.xTaskCreate)
    xTaskGetTickCount                        0x08004bcd   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x08004be1   Thumb Code   596  tasks.o(.text.xTaskIncrementTick)
    xTaskRemoveFromEventList                 0x08004e35   Thumb Code   368  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08004fa5   Thumb Code   510  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x080051a5   Thumb Code    80  timers.o(.text.xTimerCreateTimerTask)
    __aeabi_fadd                             0x080051f5   Thumb Code     0  faddsub_clz.o(x$fpl$fadd)
    _fadd                                    0x080051f5   Thumb Code   196  faddsub_clz.o(x$fpl$fadd)
    __aeabi_fcmpeq                           0x080052b9   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _feq                                     0x080052b9   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    _fneq                                    0x080052c7   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __aeabi_fcmpgt                           0x080052d5   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _fgr                                     0x080052d5   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __aeabi_fcmpge                           0x080052e3   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _fgeq                                    0x080052e3   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __aeabi_fcmple                           0x080052f1   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _fleq                                    0x080052f1   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __aeabi_fcmplt                           0x080052ff   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _fls                                     0x080052ff   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __fpl_fcmp_Inf                           0x0800530d   Thumb Code    24  fcmpi.o(x$fpl$fcmpinf)
    __aeabi_fdiv                             0x08005325   Thumb Code     0  fdiv.o(x$fpl$fdiv)
    _fdiv                                    0x08005325   Thumb Code   384  fdiv.o(x$fpl$fdiv)
    __aeabi_cfcmpeq                          0x080054a9   Thumb Code     0  feqf.o(x$fpl$feqf)
    _fcmpeq                                  0x080054a9   Thumb Code   104  feqf.o(x$fpl$feqf)
    __aeabi_f2iz                             0x08005511   Thumb Code     0  ffix.o(x$fpl$ffix)
    _ffix                                    0x08005511   Thumb Code    54  ffix.o(x$fpl$ffix)
    __aeabi_i2f                              0x08005549   Thumb Code     0  fflt_clz.o(x$fpl$fflt)
    _fflt                                    0x08005549   Thumb Code    48  fflt_clz.o(x$fpl$fflt)
    __aeabi_ui2f                             0x08005579   Thumb Code     0  fflt_clz.o(x$fpl$ffltu)
    _ffltu                                   0x08005579   Thumb Code    38  fflt_clz.o(x$fpl$ffltu)
    _fcmpge                                  0x080055a1   Thumb Code   104  fgeqf.o(x$fpl$fgeqf)
    __aeabi_cfcmple                          0x08005609   Thumb Code     0  fleqf.o(x$fpl$fleqf)
    _fcmple                                  0x08005609   Thumb Code   104  fleqf.o(x$fpl$fleqf)
    __fpl_fcmple_InfNaN                      0x0800565b   Thumb Code     0  fleqf.o(x$fpl$fleqf)
    __aeabi_fmul                             0x08005671   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x08005671   Thumb Code   258  fmul.o(x$fpl$fmul)
    __fpl_fnaninf                            0x08005773   Thumb Code   140  fnaninf.o(x$fpl$fnaninf)
    __fpl_fretinf                            0x080057ff   Thumb Code    10  fretinf.o(x$fpl$fretinf)
    __aeabi_fsub                             0x08005809   Thumb Code     0  faddsub_clz.o(x$fpl$fsub)
    _fsub                                    0x08005809   Thumb Code   234  faddsub_clz.o(x$fpl$fsub)
    AHBPrescTable                            0x080058f2   Data          16  system_stm32f10x.o(.rodata.AHBPrescTable)
    __I$use$fp                               0x080058f2   Number         0  usenofp.o(x$fpl$usenofp)
    vtable for CommonTimer                   0x08005904   Data          12  common_timer.o(.rodata._ZTV11CommonTimer)
    vtable for IUpdated1ms                   0x08005910   Data          12  coil_with_timer.o(.rodata._ZTV11IUpdated1ms)
    vtable for PulseCommon                   0x0800591c   Data          12  pulse.o(.rodata._ZTV11PulseCommon)
    vtable for SimpleInput                   0x08005928   Data          12  simple_input.o(.rodata._ZTV11SimpleInput)
    vtable for ThreePosReg                   0x08005934   Data          12  three_pos.o(.rodata._ZTV11ThreePosReg)
    vtable for CoilOffDelay                  0x08005940   Data          48  coil_with_timer.o(.rodata._ZTV12CoilOffDelay)
    vtable for ProgrammCoil                  0x08005970   Data          16  coil.o(.rodata._ZTV12ProgrammCoil)
    vtable for AnalogMonitor                 0x08005980   Data          12  analog_monitor.o(.rodata._ZTV13AnalogMonitor)
    vtable for OnDelayCommon                 0x0800598c   Data          12  on_delay.o(.rodata._ZTV13OnDelayCommon)
    vtable for OffDelayCommon                0x08005998   Data          12  off_delay.o(.rodata._ZTV14OffDelayCommon)
    vtable for PulseInterrapt                0x080059a4   Data          28  pulse.o(.rodata._ZTV14PulseInterrapt)
    vtable for SequenceDelayed               0x080059c0   Data          28  sequence.o(.rodata._ZTV15SequenceDelayed)
    vtable for IUpdatedSomewhere             0x080059dc   Data          12  main.o(.rodata._ZTV17IUpdatedSomewhere)
    vtable for SimpleInputDelayed            0x080059e8   Data          44  simple_input.o(.rodata._ZTV18SimpleInputDelayed)
    vtable for Coil                          0x08005a14   Data          16  coil.o(.rodata._ZTV4Coil)
    vtable for Ramp                          0x08005a24   Data          12  ramp.o(.rodata._ZTV4Ramp)
    vtable for Scale<float, short>           0x08005a30   Data          12  main.o(.rodata._ZTV5ScaleIfsE)
    vtable for Scale<float, unsigned short>  0x08005a3c   Data          12  analog_out.o(.rodata._ZTV5ScaleIftE)
    vtable for Scale<unsigned short, float>  0x08005a48   Data          12  analog_monitor.o(.rodata._ZTV5ScaleItfE)
    vtable for MovAvg                        0x08005a54   Data          12  moving_avg.o(.rodata._ZTV6MovAvg)
    vtable for PIDreg                        0x08005a60   Data          12  pid.o(.rodata._ZTV6PIDreg)
    vtable for ISwitch                       0x08005a6c   Data          12  coil.o(.rodata._ZTV7ISwitch)
    vtable for Monitor                       0x08005a78   Data          12  monitor.o(.rodata._ZTV7Monitor)
    vtable for OnDelay                       0x08005a84   Data          28  on_delay.o(.rodata._ZTV7OnDelay)
    vtable for OffDelay                      0x08005aa0   Data          28  off_delay.o(.rodata._ZTV8OffDelay)
    vtable for AnalogOut                     0x08005abc   Data          12  analog_out.o(.rodata._ZTV9AnalogOut)
    vtable for TwoPosTim                     0x08005ac8   Data          12  two_pos.o(.rodata._ZTV9TwoPosTim)
    uxTopUsedPriority                        0x08005afc   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x08005b00   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08005b20   Number         0  anon$$obj.o(Region$$Table)
    SHT$$INIT_ARRAY$$Base                    0x08005b20   Number         0  main.o(.init_array)
    SHT$$INIT_ARRAY$$Limit                   0x08005b28   Number         0  init_aeabi.o(.init_array)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f10x.o(.data.SystemCoreClock)
    __cxa_terminate_handler                  0x20000004   Data           4  cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler)
    updateObjects                            0x20000008   Data          48  main.o(.data.updateObjects)
    updateObjectsSize                        0x20000038   Data           1  main.o(.data.updateObjectsSize)
    __libspace_start                         0x20000040   Data          96  libspace.o(.bss)
    __cxa_new_handler                        0x200000a0   Data           4  cxa_default_handlers.cpp.o(.bss.__cxa_new_handler)
    __temporary_stack_top$libspace           0x200000a0   Data           0  libspace.o(.bss)
    adcMonitor                               0x200000a4   Data          52  main.o(.bss.adcMonitor)
    adcValues                                0x200000d8   Data           4  main.o(.bss.adcValues)
    analogOut                                0x200000dc   Data          40  main.o(.bss.analogOut)
    avg                                      0x20000104   Data          20  main.o(.bss.avg)
    button                                   0x20000118   Data          36  main.o(.bss.button)
    counter                                  0x2000013c   Data           8  main.o(.bss.counter)
    delay                                    0x20000144   Data          20  main.o(.bss.delay)
    led                                      0x20000158   Data          36  main.o(.bss.led)
    offDelay                                 0x2000017c   Data          20  main.o(.bss.offDelay)
    onDelay                                  0x20000190   Data          20  main.o(.bss.onDelay)
    pid                                      0x200001a4   Data          72  main.o(.bss.pid)
    pulse                                    0x200001f0   Data          20  main.o(.bss.pulse)
    pxCurrentTCB                             0x20000204   Data           4  tasks.o(.bss.pxCurrentTCB)
    ramp                                     0x20000280   Data          36  main.o(.bss.ramp)
    reslt                                    0x200002a4   Data           1  test_task.o(.bss.reslt)
    rest                                     0x200002a5   Data           1  test_task.o(.bss.rest)
    rise                                     0x200002a6   Data           3  test_task.o(.bss.rise)
    scale                                    0x200002ac   Data          24  main.o(.bss.scale)
    seq1                                     0x200002c4   Data          12  main.o(.bss.seq1)
    seq2                                     0x200002d0   Data          32  main.o(.bss.seq2)
    seq_finish                               0x200002f0   Data           1  test_task.o(.bss.seq_finish)
    seq_lock                                 0x200002f1   Data           1  test_task.o(.bss.seq_lock)
    seq_start                                0x200002f2   Data           1  test_task.o(.bss.seq_start)
    step                                     0x200002f3   Data           1  main.o(.bss.step)
    strt                                     0x200002f4   Data           1  test_task.o(.bss.strt)
    threePosReg                              0x200002f8   Data          36  main.o(.bss.threePosReg)
    twoPos                                   0x2000031c   Data          24  main.o(.bss.twoPos)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00005b68, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00005b28, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO         1344    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000008   Code   RO         1385  * !!!main             c_w.l(__main.o)
    0x080000f4   0x080000f4   0x00000034   Code   RO         1816    !!!scatter          c_w.l(__scatter.o)
    0x08000128   0x08000128   0x0000001a   Code   RO         1818    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000142   0x08000142   0x00000002   PAD
    0x08000144   0x08000144   0x0000001c   Code   RO         1820    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000160   0x08000160   0x00000002   Code   RO         1754    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1554    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1556    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1558    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000008   Code   RO         1559    .ARM.Collect$$libinit$$00000007  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1561    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1563    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1565    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1568    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1570    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1572    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1574    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1576    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1578    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1580    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1582    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1584    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1586    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1588    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1592    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1594    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1596    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000004   Code   RO         1597    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x0800016e   0x0800016e   0x00000000   Code   RO         1598    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x0800016e   0x0800016e   0x00000002   Code   RO         1599    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000170   0x08000170   0x00000002   Code   RO         1814    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000172   0x08000172   0x00000006   Code   RO         1755    .ARM.Collect$$libshutdown$$00000001  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1756    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1758    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1761    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1764    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1766    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1769    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000002   Code   RO         1770    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0800017a   0x0800017a   0x00000000   Code   RO         1476    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0800017a   0x0800017a   0x00000000   Code   RO         1642    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0800017a   0x0800017a   0x00000006   Code   RO         1654    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000180   0x08000180   0x00000000   Code   RO         1644    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x08000180   0x08000180   0x00000004   Code   RO         1645    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000184   0x08000184   0x00000000   Code   RO         1647    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000184   0x08000184   0x00000008   Code   RO         1648    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800018c   0x0800018c   0x00000002   Code   RO         1771    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1786    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0800018e   0x0800018e   0x00000004   Code   RO         1787    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000192   0x08000192   0x00000006   Code   RO         1788    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x08000198   0x08000198   0x00000040   Code   RO         1345    .text               startup_stm32f10x_md.o
    0x080001d8   0x080001d8   0x0000000a   Code   RO         1372    .text               c_w.l(cxa_atexit.o)
    0x080001e2   0x080001e2   0x0000008a   Code   RO         1375    .text               c_w.l(rt_memcpy_v6.o)
    0x0800026c   0x0800026c   0x00000010   Code   RO         1377    .text               c_w.l(aeabi_memset4.o)
    0x0800027c   0x0800027c   0x00000044   Code   RO         1379    .text               c_w.l(rt_memclr.o)
    0x080002c0   0x080002c0   0x0000004e   Code   RO         1381    .text               c_w.l(rt_memclr_w.o)
    0x0800030e   0x0800030e   0x00000006   Code   RO         1383    .text               c_w.l(heapauxi.o)
    0x08000314   0x08000314   0x00000024   Code   RO         1390    .text               c_w.l(init_aeabi.o)
    0x08000338   0x08000338   0x0000005e   Code   RO         1481    .text               c_w.l(h1_alloc.o)
    0x08000396   0x08000396   0x0000004e   Code   RO         1483    .text               c_w.l(h1_free.o)
    0x080003e4   0x080003e4   0x00000016   Code   RO         1543    .text               c_w.l(abort.o)
    0x080003fa   0x080003fa   0x0000002e   Code   RO         1548    .text               c_w.l(aeabi_atexit.o)
    0x08000428   0x08000428   0x00000064   Code   RO         1551    .text               c_w.l(rt_memcpy_w.o)
    0x0800048c   0x0800048c   0x0000000c   Code   RO         1635    .text               c_w.l(sys_exit.o)
    0x08000498   0x08000498   0x00000008   Code   RO         1659    .text               c_w.l(rt_heap_descriptor_intlibspace.o)
    0x080004a0   0x080004a0   0x00000008   Code   RO         1664    .text               c_w.l(rt_ddtor_pointer_addr_intlibspace.o)
    0x080004a8   0x080004a8   0x00000004   Code   RO         1666    .text               c_w.l(hguard.o)
    0x080004ac   0x080004ac   0x0000008a   Code   RO         1668    .text               c_w.l(init_alloc.o)
    0x08000536   0x08000536   0x0000000e   Code   RO         1672    .text               c_w.l(h1_init.o)
    0x08000544   0x08000544   0x00000042   Code   RO         1684    .text               c_w.l(cxa_finalize.o)
    0x08000586   0x08000586   0x0000000e   Code   RO         1687    .text               c_w.l(defsig_abrt_outer.o)
    0x08000594   0x08000594   0x00000008   Code   RO         1714    .text               c_w.l(libspace.o)
    0x0800059c   0x0800059c   0x00000002   Code   RO         1717    .text               c_w.l(use_no_semi.o)
    0x0800059e   0x0800059e   0x00000000   Code   RO         1719    .text               c_w.l(indicate_semi.o)
    0x0800059e   0x0800059e   0x0000004a   Code   RO         1720    .text               c_w.l(sys_stackheap_outer.o)
    0x080005e8   0x080005e8   0x00000000   Code   RO         1726    .text               c_w.l(maybetermalloc1.o)
    0x080005e8   0x080005e8   0x00000034   Code   RO         1728    .text               c_w.l(h1_extend.o)
    0x0800061c   0x0800061c   0x00000012   Code   RO         1732    .text               c_w.l(exit.o)
    0x0800062e   0x0800062e   0x0000000a   Code   RO         1734    .text               c_w.l(defsig_exit.o)
    0x08000638   0x08000638   0x00000030   Code   RO         1736    .text               c_w.l(defsig_abrt_inner.o)
    0x08000668   0x08000668   0x0000000e   Code   RO         1738    .text               c_w.l(defsig_rtmem_outer.o)
    0x08000676   0x08000676   0x00000032   Code   RO         1777    .text               c_w.l(defsig_general.o)
    0x080006a8   0x080006a8   0x00000050   Code   RO         1779    .text               c_w.l(defsig_rtmem_inner.o)
    0x080006f8   0x080006f8   0x0000000e   Code   RO         1781    .text               c_w.l(sys_wrch.o)
    0x08000706   0x08000706   0x0000000a   PAD
    0x08000710   0x08000710   0x00000044   Code   RO          532    .text.PendSV_Handler  port.o
    0x08000754   0x08000754   0x0000000c   PAD
    0x08000760   0x08000760   0x00000024   Code   RO          518    .text.SVC_Handler   port.o
    0x08000784   0x08000784   0x00000008   Code   RO         1353    .text.SetSysClock   system_stm32f10x.o
    0x0800078c   0x0800078c   0x00000122   Code   RO         1357    .text.SetSysClockTo72  system_stm32f10x.o
    0x080008ae   0x080008ae   0x00000002   PAD
    0x080008b0   0x080008b0   0x0000003c   Code   RO          534    .text.SysTick_Handler  port.o
    0x080008ec   0x080008ec   0x00000122   Code   RO         1355    .text.SystemCoreClockUpdate  system_stm32f10x.o
    0x08000a0e   0x08000a0e   0x00000002   PAD
    0x08000a10   0x08000a10   0x00000066   Code   RO         1351    .text.SystemInit    system_stm32f10x.o
    0x08000a76   0x08000a76   0x00000002   PAD
    0x08000a78   0x08000a78   0x0000004c   Code   RO           44    .text.TIM2_IRQHandler  main.o
    0x08000ac4   0x08000ac4   0x00000048   Code   RO           48    .text._GLOBAL__sub_I_main.cpp  main.o
    0x08000b0c   0x08000b0c   0x00000008   Code   RO          556    .text._GLOBAL__sub_I_test_task.cpp  test_task.o
    0x08000b14   0x08000b14   0x0000000e   Code   RO          602    .text._Z10commonInitv  init.o
    0x08000b22   0x08000b22   0x00000002   PAD
    0x08000b24   0x08000b24   0x00000040   Code   RO          593    .text._Z11getPositionj  common.o
    0x08000b64   0x08000b64   0x00000020   Code   RO          624    .text._Z11setRegisterIVjEvPT_jj  init.o
    0x08000b84   0x08000b84   0x00000044   Code   RO          626    .text._Z17setBitsInRegisterIVjEvPT_jj  init.o
    0x08000bc8   0x08000bc8   0x00000044   Code   RO          628    .text._Z17setBitsInRegisterIVtEvPT_jj  init.o
    0x08000c0c   0x08000c0c   0x00000022   Code   RO         1060    .text._Z3absIfET_S0_  pid.o
    0x08000c2e   0x08000c2e   0x00000002   PAD
    0x08000c30   0x08000c30   0x00000026   Code   RO         1062    .text._Z3maxIfET_S0_S0_  pid.o
    0x08000c56   0x08000c56   0x00000002   PAD
    0x08000c58   0x08000c58   0x00000034   Code   RO         1319    .text._Z3maxIhET_S0_S0_  moving_avg.o
    0x08000c8c   0x08000c8c   0x0000004c   Code   RO          578    .text._Z5limitIfET_S0_S0_S0_  test_task.o
    0x08000cd8   0x08000cd8   0x00000064   Code   RO          663    .text._Z5limitItET_S0_S0_S0_  analog_monitor.o
    0x08000d3c   0x08000d3c   0x0000001e   Code   RO          580    .text._Z6toggleIfEvPT_S1_  test_task.o
    0x08000d5a   0x08000d5a   0x00000002   PAD
    0x08000d5c   0x08000d5c   0x00000022   Code   RO          665    .text._Z6toggleItEvPT_S1_  analog_monitor.o
    0x08000d7e   0x08000d7e   0x00000002   PAD
    0x08000d80   0x08000d80   0x00000158   Code   RO          614    .text._Z7adcInitv   init.o
    0x08000ed8   0x08000ed8   0x0000002a   Code   RO          544    .text._Z7ledTaskPv  led_task.o
    0x08000f02   0x08000f02   0x00000002   PAD
    0x08000f04   0x08000f04   0x00000064   Code   RO          583    .text._Z7pidTaskPv  pidtask.o
    0x08000f68   0x08000f68   0x000000aa   Code   RO          616    .text._Z7pwmInitv   init.o
    0x08001012   0x08001012   0x00000002   PAD
    0x08001014   0x08001014   0x000000ce   Code   RO          606    .text._Z7rccInitv   init.o
    0x080010e2   0x080010e2   0x00000002   PAD
    0x080010e4   0x080010e4   0x00000014   Code   RO         1104    .text._Z8getRangeIfET_PKS0_  ramp.o
    0x080010f8   0x080010f8   0x00000162   Code   RO          554    .text._Z8testTaskPv  test_task.o
    0x0800125a   0x0800125a   0x00000002   PAD
    0x0800125c   0x0800125c   0x00000058   Code   RO          608    .text._Z8tickInitv  init.o
    0x080012b4   0x080012b4   0x00000030   Code   RO          610    .text._ZL16__NVIC_EnableIRQ4IRQn  init.o
    0x080012e4   0x080012e4   0x00000042   Code   RO          612    .text._ZL18__NVIC_SetPriority4IRQnj  init.o
    0x08001326   0x08001326   0x00000002   PAD
    0x08001328   0x08001328   0x0000003c   Code   RO          604    .text._ZL26__NVIC_SetPriorityGroupingj  init.o
    0x08001364   0x08001364   0x000000e2   Code   RO          787    .text._ZN10GPIOcommonC2EP12GPIO_TypeDefh  gpio_common.o
    0x08001446   0x08001446   0x00000002   PAD
    0x08001448   0x08001448   0x00000010   Code   RO          883    .text._ZN11CommonTimer10notStartedEv  common_timer.o
    0x08001458   0x08001458   0x00000016   Code   RO          885    .text._ZN11CommonTimer11notFinishedEv  common_timer.o
    0x0800146e   0x0800146e   0x00000002   PAD
    0x08001470   0x08001470   0x00000018   Code   RO          873    .text._ZN11CommonTimer15prepareAndStartEv  common_timer.o
    0x08001488   0x08001488   0x00000018   Code   RO          869    .text._ZN11CommonTimer4stopEv  common_timer.o
    0x080014a0   0x080014a0   0x0000000e   Code   RO          867    .text._ZN11CommonTimer5pauseEv  common_timer.o
    0x080014ae   0x080014ae   0x00000002   PAD
    0x080014b0   0x080014b0   0x00000010   Code   RO          871    .text._ZN11CommonTimer5resetEv  common_timer.o
    0x080014c0   0x080014c0   0x0000000e   Code   RO          865    .text._ZN11CommonTimer5startEv  common_timer.o
    0x080014ce   0x080014ce   0x00000002   PAD
    0x080014d0   0x080014d0   0x00000018   Code   RO          875    .text._ZN11CommonTimer6finishEv  common_timer.o
    0x080014e8   0x080014e8   0x0000002e   Code   RO          889    .text._ZN11CommonTimer6inWorkEv  common_timer.o
    0x08001516   0x08001516   0x00000002   PAD
    0x08001518   0x08001518   0x0000002c   Code   RO          891    .text._ZN11CommonTimer6isFreeEv  common_timer.o
    0x08001544   0x08001544   0x00000038   Code   RO          853    .text._ZN11CommonTimer6updateEv  common_timer.o
    0x0800157c   0x0800157c   0x00000010   Code   RO          881    .text._ZN11CommonTimer7startedEv  common_timer.o
    0x0800158c   0x0800158c   0x00000016   Code   RO          855    .text._ZN11CommonTimer8finishedEv  common_timer.o
    0x080015a2   0x080015a2   0x00000002   PAD
    0x080015a4   0x080015a4   0x0000002c   Code   RO          877    .text._ZN11CommonTimer8setStartEb  common_timer.o
    0x080015d0   0x080015d0   0x0000001c   Code   RO          851    .text._ZN11CommonTimerC2Ej  common_timer.o
    0x080015ec   0x080015ec   0x00000020   Code   RO          879    .text._ZN11CommonTimeraSEb  common_timer.o
    0x0800160c   0x0800160c   0x00000016   Code   RO          783    .text._ZN11IUpdated1msC2Ev  coil_with_timer.o
    0x08001622   0x08001622   0x00000002   PAD
    0x08001624   0x08001624   0x00000010   Code   RO          961    .text._ZN11PulseCommon3getEv  pulse.o
    0x08001634   0x08001634   0x00000048   Code   RO          959    .text._ZN11PulseCommon3setEb  pulse.o
    0x0800167c   0x0800167c   0x00000014   Code   RO          963    .text._ZN11PulseCommon5resetEv  pulse.o
    0x08001690   0x08001690   0x00000024   Code   RO          957    .text._ZN11PulseCommon6updateEv  pulse.o
    0x080016b4   0x080016b4   0x00000024   Code   RO          955    .text._ZN11PulseCommonC2Ej  pulse.o
    0x080016d8   0x080016d8   0x00000040   Code   RO          797    .text._ZN11SimpleInput8isActiveEv  simple_input.o
    0x08001718   0x08001718   0x00000098   Code   RO          795    .text._ZN11SimpleInputC2EP12GPIO_TypeDefh  simple_input.o
    0x080017b0   0x080017b0   0x00000022   Code   RO         1109    .text._ZN11ThreePosReg12setPulseGistEf  three_pos.o
    0x080017d2   0x080017d2   0x00000002   PAD
    0x080017d4   0x080017d4   0x00000012   Code   RO         1143    .text._ZN11ThreePosReg17impulseCycleEndedEv  three_pos.o
    0x080017e6   0x080017e6   0x00000002   PAD
    0x080017e8   0x080017e8   0x00000030   Code   RO         1145    .text._ZN11ThreePosReg21halfImpulseCycleEndedEv  three_pos.o
    0x08001818   0x08001818   0x00000180   Code   RO         1147    .text._ZN11ThreePosReg9update1msEv  three_pos.o
    0x08001998   0x08001998   0x00000090   Code   RO         1107    .text._ZN11ThreePosRegC2Efffttb  three_pos.o
    0x08001a28   0x08001a28   0x00000044   Code   RO         1111    .text._ZN11ThreePosRegD2Ev  three_pos.o
    0x08001a6c   0x08001a6c   0x0000001c   Code   RO          756    .text._ZN12CoilOffDelay8setValueEb  coil_with_timer.o
    0x08001a88   0x08001a88   0x00000026   Code   RO          752    .text._ZN12CoilOffDelay9update1msEv  coil_with_timer.o
    0x08001aae   0x08001aae   0x00000002   PAD
    0x08001ab0   0x08001ab0   0x00000050   Code   RO          750    .text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht  coil_with_timer.o
    0x08001b00   0x08001b00   0x00000022   Code   RO          760    .text._ZN12CoilOffDelayaSEb  coil_with_timer.o
    0x08001b22   0x08001b22   0x00000002   PAD
    0x08001b24   0x08001b24   0x00000010   Code   RO          704    .text._ZN12ProgrammCoil8isActiveEv  coil.o
    0x08001b34   0x08001b34   0x00000018   Code   RO          706    .text._ZN12ProgrammCoil8setValueEb  coil.o
    0x08001b4c   0x08001b4c   0x00000020   Code   RO          732    .text._ZN12ProgrammCoilC2Ev  coil.o
    0x08001b6c   0x08001b6c   0x0000001e   Code   RO         1163    .text._ZN12TwoPosCommonC2Efb  two_pos.o
    0x08001b8a   0x08001b8a   0x00000002   PAD
    0x08001b8c   0x08001b8c   0x0000002c   Code   RO          635    .text._ZN13AnalogMonitor3setEt  analog_monitor.o
    0x08001bb8   0x08001bb8   0x00000086   Code   RO          631    .text._ZN13AnalogMonitorC2Ehff  analog_monitor.o
    0x08001c3e   0x08001c3e   0x00000002   PAD
    0x08001c40   0x08001c40   0x00000036   Code   RO          633    .text._ZN13AnalogMonitorD2Ev  analog_monitor.o
    0x08001c76   0x08001c76   0x00000002   PAD
    0x08001c78   0x08001c78   0x0000001c   Code   RO          637    .text._ZN13AnalogMonitoraSEt  analog_monitor.o
    0x08001c94   0x08001c94   0x00000010   Code   RO          903    .text._ZN13OnDelayCommon6updateEv  on_delay.o
    0x08001ca4   0x08001ca4   0x00000024   Code   RO          901    .text._ZN13OnDelayCommonC2Ej  on_delay.o
    0x08001cc8   0x08001cc8   0x0000002a   Code   RO          934    .text._ZN14OffDelayCommon3getEv  off_delay.o
    0x08001cf2   0x08001cf2   0x00000002   PAD
    0x08001cf4   0x08001cf4   0x00000044   Code   RO          932    .text._ZN14OffDelayCommon3setEb  off_delay.o
    0x08001d38   0x08001d38   0x00000024   Code   RO          930    .text._ZN14OffDelayCommon6updateEv  off_delay.o
    0x08001d5c   0x08001d5c   0x00000024   Code   RO          928    .text._ZN14OffDelayCommonC2Ej  off_delay.o
    0x08001d80   0x08001d80   0x00000030   Code   RO          979    .text._ZN14PulseInterrapt3setEb  pulse.o
    0x08001db0   0x08001db0   0x00000010   Code   RO          975    .text._ZN14PulseInterrapt9update1msEv  pulse.o
    0x08001dc0   0x08001dc0   0x00000032   Code   RO          973    .text._ZN14PulseInterraptC2Ej  pulse.o
    0x08001df2   0x08001df2   0x00000002   PAD
    0x08001df4   0x08001df4   0x00000020   Code   RO          981    .text._ZN14PulseInterraptaSEb  pulse.o
    0x08001e14   0x08001e14   0x00000042   Code   RO         1246    .text._ZN15SequenceDelayed9update1msEv  sequence.o
    0x08001e56   0x08001e56   0x00000002   PAD
    0x08001e58   0x08001e58   0x00000046   Code   RO         1244    .text._ZN15SequenceDelayedC2EPhhj  sequence.o
    0x08001e9e   0x08001e9e   0x00000002   PAD
    0x08001ea0   0x08001ea0   0x00000016   Code   RO           83    .text._ZN17IUpdatedSomewhereC2Ev  main.o
    0x08001eb6   0x08001eb6   0x00000002   PAD
    0x08001eb8   0x08001eb8   0x00000010   Code   RO          807    .text._ZN18SimpleInputDelayed8isActiveEv  simple_input.o
    0x08001ec8   0x08001ec8   0x00000022   Code   RO          803    .text._ZN18SimpleInputDelayed9update1msEv  simple_input.o
    0x08001eea   0x08001eea   0x00000002   PAD
    0x08001eec   0x08001eec   0x00000050   Code   RO          801    .text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht  simple_input.o
    0x08001f3c   0x08001f3c   0x00000016   Code   RO          718    .text._ZN4Coil8isActiveEv  coil.o
    0x08001f52   0x08001f52   0x00000002   PAD
    0x08001f54   0x08001f54   0x00000042   Code   RO          720    .text._ZN4Coil8setValueEb  coil.o
    0x08001f96   0x08001f96   0x00000002   PAD
    0x08001f98   0x08001f98   0x00000076   Code   RO          716    .text._ZN4CoilC2EP12GPIO_TypeDefh  coil.o
    0x0800200e   0x0800200e   0x00000002   PAD
    0x08002010   0x08002010   0x00000012   Code   RO         1079    .text._ZN4Ramp11getOutRangeEv  ramp.o
    0x08002022   0x08002022   0x00000002   PAD
    0x08002024   0x08002024   0x00000040   Code   RO         1071    .text._ZN4Ramp16setFullRangeTimeEj  ramp.o
    0x08002064   0x08002064   0x0000000c   Code   RO         1083    .text._ZN4Ramp3getEv  ramp.o
    0x08002070   0x08002070   0x0000001e   Code   RO         1085    .text._ZN4Ramp3setEf  ramp.o
    0x0800208e   0x0800208e   0x00000002   PAD
    0x08002090   0x08002090   0x0000001c   Code   RO         1069    .text._ZN4Ramp9setLimMaxEf  ramp.o
    0x080020ac   0x080020ac   0x0000009a   Code   RO         1081    .text._ZN4Ramp9update1msEv  ramp.o
    0x08002146   0x08002146   0x00000002   PAD
    0x08002148   0x08002148   0x0000002a   Code   RO         1075    .text._ZN4RampC2Ej  ramp.o
    0x08002172   0x08002172   0x00000002   PAD
    0x08002174   0x08002174   0x0000007a   Code   RO         1067    .text._ZN4RampC2Ejffff  ramp.o
    0x080021ee   0x080021ee   0x00000002   PAD
    0x080021f0   0x080021f0   0x00000018   Code   RO         1091    .text._ZN4RampaSEf  ramp.o
    0x08002208   0x08002208   0x00000066   Code   RO           85    .text._ZN5ScaleIfsE15updateSomewhereEv  main.o
    0x0800226e   0x0800226e   0x00000002   PAD
    0x08002270   0x08002270   0x0000000e   Code   RO          574    .text._ZN5ScaleIfsE3getEv  test_task.o
    0x0800227e   0x0800227e   0x00000002   PAD
    0x08002280   0x08002280   0x00000026   Code   RO          576    .text._ZN5ScaleIfsE3setEf  test_task.o
    0x080022a6   0x080022a6   0x00000002   PAD
    0x080022a8   0x080022a8   0x00000046   Code   RO           81    .text._ZN5ScaleIfsEC2Effss  main.o
    0x080022ee   0x080022ee   0x00000002   PAD
    0x080022f0   0x080022f0   0x00000018   Code   RO          572    .text._ZN5ScaleIfsEaSEf  test_task.o
    0x08002308   0x08002308   0x00000062   Code   RO          700    .text._ZN5ScaleIftE15updateSomewhereEv  analog_out.o
    0x0800236a   0x0800236a   0x00000002   PAD
    0x0800236c   0x0800236c   0x00000026   Code   RO          696    .text._ZN5ScaleIftE3setEf  analog_out.o
    0x08002392   0x08002392   0x00000002   PAD
    0x08002394   0x08002394   0x00000046   Code   RO          694    .text._ZN5ScaleIftEC2Efftt  analog_out.o
    0x080023da   0x080023da   0x00000002   PAD
    0x080023dc   0x080023dc   0x00000052   Code   RO          659    .text._ZN5ScaleItfE15updateSomewhereEv  analog_monitor.o
    0x0800242e   0x0800242e   0x00000002   PAD
    0x08002430   0x08002430   0x0000000c   Code   RO          653    .text._ZN5ScaleItfE3getEv  analog_monitor.o
    0x0800243c   0x0800243c   0x0000002a   Code   RO          661    .text._ZN5ScaleItfE3setEt  analog_monitor.o
    0x08002466   0x08002466   0x00000002   PAD
    0x08002468   0x08002468   0x00000042   Code   RO          649    .text._ZN5ScaleItfEC2Ettff  analog_monitor.o
    0x080024aa   0x080024aa   0x00000002   PAD
    0x080024ac   0x080024ac   0x0000001c   Code   RO          651    .text._ZN5ScaleItfEaSEt  analog_monitor.o
    0x080024c8   0x080024c8   0x00000080   Code   RO         1304    .text._ZN6MovAvg15updateSomewhereEv  moving_avg.o
    0x08002548   0x08002548   0x0000000c   Code   RO         1302    .text._ZN6MovAvg3getEv  moving_avg.o
    0x08002554   0x08002554   0x00000018   Code   RO         1300    .text._ZN6MovAvg3setEf  moving_avg.o
    0x0800256c   0x0800256c   0x0000006a   Code   RO         1296    .text._ZN6MovAvgC2Eh  moving_avg.o
    0x080025d6   0x080025d6   0x00000002   PAD
    0x080025d8   0x080025d8   0x0000002c   Code   RO         1298    .text._ZN6MovAvgD2Ev  moving_avg.o
    0x08002604   0x08002604   0x00000018   Code   RO         1306    .text._ZN6MovAvgaSEf  moving_avg.o
    0x0800261c   0x0800261c   0x000000d4   Code   RO          995    .text._ZN6PIDreg10updateKoefEv  pid.o
    0x080026f0   0x080026f0   0x000000c4   Code   RO         1045    .text._ZN6PIDreg15updateSomewhereEv  pid.o
    0x080027b4   0x080027b4   0x00000012   Code   RO          999    .text._ZN6PIDreg4getTEv  pid.o
    0x080027c6   0x080027c6   0x00000002   PAD
    0x080027c8   0x080027c8   0x00000014   Code   RO          997    .text._ZN6PIDreg5resetEv  pid.o
    0x080027dc   0x080027dc   0x00000016   Code   RO         1009    .text._ZN6PIDreg5setKpEf  pid.o
    0x080027f2   0x080027f2   0x00000002   PAD
    0x080027f4   0x080027f4   0x00000018   Code   RO         1001    .text._ZN6PIDreg5setPvEf  pid.o
    0x0800280c   0x0800280c   0x00000016   Code   RO         1017    .text._ZN6PIDreg5setTdEf  pid.o
    0x08002822   0x08002822   0x00000002   PAD
    0x08002824   0x08002824   0x00000016   Code   RO         1013    .text._ZN6PIDreg5setTiEf  pid.o
    0x0800283a   0x0800283a   0x00000002   PAD
    0x0800283c   0x0800283c   0x0000001a   Code   RO         1037    .text._ZN6PIDreg7setAutoEb  pid.o
    0x08002856   0x08002856   0x00000002   PAD
    0x08002858   0x08002858   0x000000b4   Code   RO          993    .text._ZN6PIDregC2Etfffffffb  pid.o
    0x0800290c   0x0800290c   0x00000018   Code   RO         1047    .text._ZN6PIDregaSEf  pid.o
    0x08002924   0x08002924   0x00000022   Code   RO         1322    .text._ZN7CounterC2E7IMPULSEj  counter.o
    0x08002946   0x08002946   0x00000002   PAD
    0x08002948   0x08002948   0x00000016   Code   RO          734    .text._ZN7ISwitchC2Ev  coil.o
    0x0800295e   0x0800295e   0x00000002   PAD
    0x08002960   0x08002960   0x0000001c   Code   RO         1260    .text._ZN7Monitor11setValueMaxEf  monitor.o
    0x0800297c   0x0800297c   0x0000000c   Code   RO         1268    .text._ZN7Monitor3getEv  monitor.o
    0x08002988   0x08002988   0x0000001e   Code   RO         1270    .text._ZN7Monitor3setEf  monitor.o
    0x080029a6   0x080029a6   0x00000002   PAD
    0x080029a8   0x080029a8   0x000000f2   Code   RO         1266    .text._ZN7Monitor9update1msEv  monitor.o
    0x08002a9a   0x08002a9a   0x00000002   PAD
    0x08002a9c   0x08002a9c   0x000000ae   Code   RO         1258    .text._ZN7MonitorC2Eff  monitor.o
    0x08002b4a   0x08002b4a   0x00000002   PAD
    0x08002b4c   0x08002b4c   0x00000050   Code   RO         1262    .text._ZN7MonitorD2Ev  monitor.o
    0x08002b9c   0x08002b9c   0x00000010   Code   RO          913    .text._ZN7OnDelay9update1msEv  on_delay.o
    0x08002bac   0x08002bac   0x00000032   Code   RO          911    .text._ZN7OnDelayC2Ej  on_delay.o
    0x08002bde   0x08002bde   0x00000002   PAD
    0x08002be0   0x08002be0   0x00000010   Code   RO          940    .text._ZN8OffDelay9update1msEv  off_delay.o
    0x08002bf0   0x08002bf0   0x00000032   Code   RO          938    .text._ZN8OffDelayC2Ej  off_delay.o
    0x08002c22   0x08002c22   0x00000002   PAD
    0x08002c24   0x08002c24   0x00000018   Code   RO         1230    .text._ZN8Sequence4lockEb  sequence.o
    0x08002c3c   0x08002c3c   0x0000002c   Code   RO         1228    .text._ZN8Sequence5startEb  sequence.o
    0x08002c68   0x08002c68   0x00000044   Code   RO         1232    .text._ZN8Sequence6finishEb  sequence.o
    0x08002cac   0x08002cac   0x00000010   Code   RO         1238    .text._ZN8Sequence6lockedEv  sequence.o
    0x08002cbc   0x08002cbc   0x0000002a   Code   RO         1236    .text._ZN8Sequence7startedEv  sequence.o
    0x08002ce6   0x08002ce6   0x00000002   PAD
    0x08002ce8   0x08002ce8   0x00000010   Code   RO         1240    .text._ZN8Sequence8finishedEv  sequence.o
    0x08002cf8   0x08002cf8   0x00000018   Code   RO         1224    .text._ZN8Sequence8isMyStepEv  sequence.o
    0x08002d10   0x08002d10   0x00000026   Code   RO         1222    .text._ZN8SequenceC2EPhh  sequence.o
    0x08002d36   0x08002d36   0x00000002   PAD
    0x08002d38   0x08002d38   0x00000024   Code   RO          673    .text._ZN9AnalogOut9update1msEv  analog_out.o
    0x08002d5c   0x08002d5c   0x0000006c   Code   RO          671    .text._ZN9AnalogOutC2Etjffff  analog_out.o
    0x08002dc8   0x08002dc8   0x0000002e   Code   RO          675    .text._ZN9AnalogOutD2Ev  analog_out.o
    0x08002df6   0x08002df6   0x00000002   PAD
    0x08002df8   0x08002df8   0x00000018   Code   RO          681    .text._ZN9AnalogOutaSEf  analog_out.o
    0x08002e10   0x08002e10   0x00000020   Code   RO          840    .text._ZN9RFimpulse3getEv  rf_impulse.o
    0x08002e30   0x08002e30   0x0000008a   Code   RO          838    .text._ZN9RFimpulse3setEb  rf_impulse.o
    0x08002eba   0x08002eba   0x00000002   PAD
    0x08002ebc   0x08002ebc   0x00000014   Code   RO          836    .text._ZN9RFimpulseC2E7IMPULSE  rf_impulse.o
    0x08002ed0   0x08002ed0   0x00000020   Code   RO          842    .text._ZN9RFimpulseaSEb  rf_impulse.o
    0x08002ef0   0x08002ef0   0x00000086   Code   RO         1209    .text._ZN9TwoPosTim9update1msEv  two_pos.o
    0x08002f76   0x08002f76   0x00000002   PAD
    0x08002f78   0x08002f78   0x0000007a   Code   RO         1197    .text._ZN9TwoPosTimC2Efttb  two_pos.o
    0x08002ff2   0x08002ff2   0x00000002   PAD
    0x08002ff4   0x08002ff4   0x00000044   Code   RO         1199    .text._ZN9TwoPosTimD2Ev  two_pos.o
    0x08003038   0x08003038   0x00000030   Code   RO         1624    .text._ZSt11__terminatePFvvE  libcppabi_w.l(cxa_handlers.cpp.o)
    0x08003068   0x08003068   0x0000000c   Code   RO         1628    .text._ZSt15get_new_handlerv  libcppabi_w.l(cxa_handlers.cpp.o)
    0x08003074   0x08003074   0x0000000e   Code   RO         1626    .text._ZSt9terminatev  libcppabi_w.l(cxa_handlers.cpp.o)
    0x08003082   0x08003082   0x00000002   PAD
    0x08003084   0x08003084   0x0000001a   Code   RO          758    .text._ZThn16_N12CoilOffDelay8setValueEb  coil_with_timer.o
    0x0800309e   0x0800309e   0x00000002   PAD
    0x080030a0   0x080030a0   0x0000000e   Code   RO          977    .text._ZThn16_N14PulseInterrapt9update1msEv  pulse.o
    0x080030ae   0x080030ae   0x00000002   PAD
    0x080030b0   0x080030b0   0x0000000e   Code   RO          809    .text._ZThn16_N18SimpleInputDelayed8isActiveEv  simple_input.o
    0x080030be   0x080030be   0x00000002   PAD
    0x080030c0   0x080030c0   0x0000000e   Code   RO          915    .text._ZThn16_N7OnDelay9update1msEv  on_delay.o
    0x080030ce   0x080030ce   0x00000002   PAD
    0x080030d0   0x080030d0   0x0000000e   Code   RO          942    .text._ZThn16_N8OffDelay9update1msEv  off_delay.o
    0x080030de   0x080030de   0x00000002   PAD
    0x080030e0   0x080030e0   0x0000000e   Code   RO         1248    .text._ZThn28_N15SequenceDelayed9update1msEv  sequence.o
    0x080030ee   0x080030ee   0x00000002   PAD
    0x080030f0   0x080030f0   0x0000000e   Code   RO          754    .text._ZThn32_N12CoilOffDelay9update1msEv  coil_with_timer.o
    0x080030fe   0x080030fe   0x00000002   PAD
    0x08003100   0x08003100   0x0000000e   Code   RO          805    .text._ZThn32_N18SimpleInputDelayed9update1msEv  simple_input.o
    0x0800310e   0x0800310e   0x00000004   Code   RO         1434    .text._ZdaPv        libcpp_w.l(new.cpp.o)
    0x08003112   0x08003112   0x00000004   Code   RO         1428    .text._ZdlPv        libcpp_w.l(new.cpp.o)
    0x08003116   0x08003116   0x00000004   Code   RO         1432    .text._ZdlPvj       libcpp_w.l(new.cpp.o)
    0x0800311a   0x0800311a   0x00000004   Code   RO         1424    .text._Znaj         libcpp_w.l(new.cpp.o)
    0x0800311e   0x0800311e   0x00000002   PAD
    0x08003120   0x08003120   0x00000026   Code   RO         1420    .text._Znwj         libcpp_w.l(new.cpp.o)
    0x08003146   0x08003146   0x00000002   PAD
    0x08003148   0x08003148   0x00000028   Code   RO         1471    .text.__cxa_pure_virtual  libcppabi_w.l(cxa_virtual.cpp.o)
    0x08003170   0x08003170   0x00000004   Code   RO         1467    .text.__cxa_throw_bad_array_new_length  libcppabi_w.l(cxa_aux_runtime.cpp.o)
    0x08003174   0x08003174   0x0000001e   Code   RO            2    .text.__cxx_global_var_init  main.o
    0x08003192   0x08003192   0x00000002   PAD
    0x08003194   0x08003194   0x00000012   Code   RO          552    .text.__cxx_global_var_init  test_task.o
    0x080031a6   0x080031a6   0x00000002   PAD
    0x080031a8   0x080031a8   0x0000001c   Code   RO            4    .text.__cxx_global_var_init.1  main.o
    0x080031c4   0x080031c4   0x0000004c   Code   RO           22    .text.__cxx_global_var_init.10  main.o
    0x08003210   0x08003210   0x00000014   Code   RO           24    .text.__cxx_global_var_init.11  main.o
    0x08003224   0x08003224   0x00000014   Code   RO           26    .text.__cxx_global_var_init.12  main.o
    0x08003238   0x08003238   0x00000014   Code   RO           28    .text.__cxx_global_var_init.13  main.o
    0x0800324c   0x0800324c   0x00000014   Code   RO           30    .text.__cxx_global_var_init.14  main.o
    0x08003260   0x08003260   0x0000001a   Code   RO           32    .text.__cxx_global_var_init.15  main.o
    0x0800327a   0x0800327a   0x00000002   PAD
    0x0800327c   0x0800327c   0x0000001e   Code   RO           34    .text.__cxx_global_var_init.16  main.o
    0x0800329a   0x0800329a   0x00000002   PAD
    0x0800329c   0x0800329c   0x00000012   Code   RO            6    .text.__cxx_global_var_init.2  main.o
    0x080032ae   0x080032ae   0x00000002   PAD
    0x080032b0   0x080032b0   0x00000036   Code   RO            8    .text.__cxx_global_var_init.3  main.o
    0x080032e6   0x080032e6   0x00000002   PAD
    0x080032e8   0x080032e8   0x00000044   Code   RO           10    .text.__cxx_global_var_init.4  main.o
    0x0800332c   0x0800332c   0x0000003c   Code   RO           12    .text.__cxx_global_var_init.5  main.o
    0x08003368   0x08003368   0x00000024   Code   RO           14    .text.__cxx_global_var_init.6  main.o
    0x0800338c   0x0800338c   0x00000014   Code   RO           16    .text.__cxx_global_var_init.7  main.o
    0x080033a0   0x080033a0   0x0000002e   Code   RO           18    .text.__cxx_global_var_init.8  main.o
    0x080033ce   0x080033ce   0x00000002   PAD
    0x080033d0   0x080033d0   0x00000040   Code   RO           20    .text.__cxx_global_var_init.9  main.o
    0x08003410   0x08003410   0x00000004   Code   RO         1632    .text.abort_message  libcppabi_w.l(abort_message.cpp.o)
    0x08003414   0x08003414   0x0000008a   Code   RO           46    .text.main          main.o
    0x0800349e   0x0800349e   0x00000002   PAD
    0x080034a0   0x080034a0   0x0000011a   Code   RO          313    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x080035ba   0x080035ba   0x00000002   PAD
    0x080035bc   0x080035bc   0x00000154   Code   RO          301    .text.prvAddNewTaskToReadyList  tasks.o
    0x08003710   0x08003710   0x0000006a   Code   RO          449    .text.prvCheckForValidListAndQueue  timers.o
    0x0800377a   0x0800377a   0x00000002   PAD
    0x0800377c   0x0800377c   0x0000005a   Code   RO          415    .text.prvCheckTasksWaitingTermination  tasks.o
    0x080037d6   0x080037d6   0x00000002   PAD
    0x080037d8   0x080037d8   0x00000042   Code   RO          203    .text.prvCopyDataFromQueue  queue.o
    0x0800381a   0x0800381a   0x00000002   PAD
    0x0800381c   0x0800381c   0x00000018   Code   RO          307    .text.prvDeleteTCB  tasks.o
    0x08003834   0x08003834   0x00000040   Code   RO          483    .text.prvGetNextExpireTime  timers.o
    0x08003874   0x08003874   0x000000ae   Code   RO          124    .text.prvHeapInit   heap_4.o
    0x08003922   0x08003922   0x00000002   PAD
    0x08003924   0x08003924   0x0000003c   Code   RO          339    .text.prvIdleTask   tasks.o
    0x08003960   0x08003960   0x00000048   Code   RO          175    .text.prvInitialiseNewQueue  queue.o
    0x080039a8   0x080039a8   0x000000e6   Code   RO          299    .text.prvInitialiseNewTask  tasks.o
    0x08003a8e   0x08003a8e   0x00000002   PAD
    0x08003a90   0x08003a90   0x0000008e   Code   RO          413    .text.prvInitialiseTaskLists  tasks.o
    0x08003b1e   0x08003b1e   0x00000002   PAD
    0x08003b20   0x08003b20   0x000000c6   Code   RO          126    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x08003be6   0x08003be6   0x00000002   PAD
    0x08003be8   0x08003be8   0x00000086   Code   RO          497    .text.prvInsertTimerInActiveList  timers.o
    0x08003c6e   0x08003c6e   0x00000002   PAD
    0x08003c70   0x08003c70   0x00000028   Code   RO          205    .text.prvIsQueueEmpty  queue.o
    0x08003c98   0x08003c98   0x00000020   Code   RO          524    .text.prvPortStartFirstTask  port.o
    0x08003cb8   0x08003cb8   0x00000054   Code   RO          491    .text.prvProcessExpiredTimer  timers.o
    0x08003d0c   0x08003d0c   0x00000126   Code   RO          487    .text.prvProcessReceivedCommands  timers.o
    0x08003e32   0x08003e32   0x00000002   PAD
    0x08003e34   0x08003e34   0x0000009a   Code   RO          485    .text.prvProcessTimerOrBlockTask  timers.o
    0x08003ece   0x08003ece   0x00000002   PAD
    0x08003ed0   0x08003ed0   0x00000034   Code   RO          495    .text.prvReloadTimer  timers.o
    0x08003f04   0x08003f04   0x0000003c   Code   RO          305    .text.prvResetNextTaskUnblockTime  tasks.o
    0x08003f40   0x08003f40   0x00000044   Code   RO          489    .text.prvSampleTimeNow  timers.o
    0x08003f84   0x08003f84   0x00000052   Code   RO          493    .text.prvSwitchTimerLists  timers.o
    0x08003fd6   0x08003fd6   0x00000002   PAD
    0x08003fd8   0x08003fd8   0x00000026   Code   RO          516    .text.prvTaskExitError  port.o
    0x08003ffe   0x08003ffe   0x00000002   PAD
    0x08004000   0x08004000   0x0000001e   Code   RO          451    .text.prvTimerTask  timers.o
    0x0800401e   0x0800401e   0x00000002   PAD
    0x08004020   0x08004020   0x000000ae   Code   RO          195    .text.prvUnlockQueue  queue.o
    0x080040ce   0x080040ce   0x00000002   PAD
    0x080040d0   0x080040d0   0x00000186   Code   RO          122    .text.pvPortMalloc  heap_4.o
    0x08004256   0x08004256   0x00000002   PAD
    0x08004258   0x08004258   0x00000050   Code   RO          514    .text.pxPortInitialiseStack  port.o
    0x080042a8   0x080042a8   0x00000048   Code   RO          162    .text.uxListRemove  list.o
    0x080042f0   0x080042f0   0x00000002   Code   RO           36    .text.vApplicationIdleHook  main.o
    0x080042f2   0x080042f2   0x00000002   PAD
    0x080042f4   0x080042f4   0x0000000a   Code   RO           42    .text.vApplicationStackOverflowHook  main.o
    0x080042fe   0x080042fe   0x00000002   PAD
    0x08004300   0x08004300   0x00000002   Code   RO           38    .text.vApplicationTickHook  main.o
    0x08004302   0x08004302   0x00000002   PAD
    0x08004304   0x08004304   0x0000002e   Code   RO          154    .text.vListInitialise  list.o
    0x08004332   0x08004332   0x00000002   PAD
    0x08004334   0x08004334   0x0000000e   Code   RO          156    .text.vListInitialiseItem  list.o
    0x08004342   0x08004342   0x00000002   PAD
    0x08004344   0x08004344   0x0000006a   Code   RO          160    .text.vListInsert   list.o
    0x080043ae   0x080043ae   0x00000002   PAD
    0x080043b0   0x080043b0   0x00000030   Code   RO          528    .text.vPortEnterCritical  port.o
    0x080043e0   0x080043e0   0x00000026   Code   RO          530    .text.vPortExitCritical  port.o
    0x08004406   0x08004406   0x00000002   PAD
    0x08004408   0x08004408   0x00000076   Code   RO          128    .text.vPortFree     heap_4.o
    0x0800447e   0x0800447e   0x00000002   PAD
    0x08004480   0x08004480   0x0000002e   Code   RO          522    .text.vPortSetupTimerInterrupt  port.o
    0x080044ae   0x080044ae   0x00000002   PAD
    0x080044b0   0x080044b0   0x00000064   Code   RO          233    .text.vQueueWaitForMessageRestricted  queue.o
    0x08004514   0x08004514   0x0000004a   Code   RO          317    .text.vTaskDelay    tasks.o
    0x0800455e   0x0800455e   0x00000002   PAD
    0x08004560   0x08004560   0x00000024   Code   RO          371    .text.vTaskInternalSetTimeOutState  tasks.o
    0x08004584   0x08004584   0x0000000e   Code   RO          375    .text.vTaskMissedYield  tasks.o
    0x08004592   0x08004592   0x00000002   PAD
    0x08004594   0x08004594   0x00000026   Code   RO          359    .text.vTaskPlaceOnEventList  tasks.o
    0x080045ba   0x080045ba   0x00000002   PAD
    0x080045bc   0x080045bc   0x00000060   Code   RO          363    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x0800461c   0x0800461c   0x00000094   Code   RO          337    .text.vTaskStartScheduler  tasks.o
    0x080046b0   0x080046b0   0x00000010   Code   RO          311    .text.vTaskSuspendAll  tasks.o
    0x080046c0   0x080046c0   0x000000ec   Code   RO          329    .text.vTaskSwitchContext  tasks.o
    0x080047ac   0x080047ac   0x00000040   Code   RO          520    .text.xPortStartScheduler  port.o
    0x080047ec   0x080047ec   0x0000007e   Code   RO          173    .text.xQueueGenericCreate  queue.o
    0x0800486a   0x0800486a   0x00000002   PAD
    0x0800486c   0x0800486c   0x000000d0   Code   RO          171    .text.xQueueGenericReset  queue.o
    0x0800493c   0x0800493c   0x00000152   Code   RO          201    .text.xQueueReceive  queue.o
    0x08004a8e   0x08004a8e   0x00000002   PAD
    0x08004a90   0x08004a90   0x0000009a   Code   RO          373    .text.xTaskCheckForTimeOut  tasks.o
    0x08004b2a   0x08004b2a   0x00000002   PAD
    0x08004b2c   0x08004b2c   0x000000a0   Code   RO          297    .text.xTaskCreate   tasks.o
    0x08004bcc   0x08004bcc   0x00000014   Code   RO          345    .text.xTaskGetTickCount  tasks.o
    0x08004be0   0x08004be0   0x00000254   Code   RO          343    .text.xTaskIncrementTick  tasks.o
    0x08004e34   0x08004e34   0x00000170   Code   RO          365    .text.xTaskRemoveFromEventList  tasks.o
    0x08004fa4   0x08004fa4   0x000001fe   Code   RO          315    .text.xTaskResumeAll  tasks.o
    0x080051a2   0x080051a2   0x00000002   PAD
    0x080051a4   0x080051a4   0x00000050   Code   RO          447    .text.xTimerCreateTimerTask  timers.o
    0x080051f4   0x080051f4   0x000000c4   Code   RO         1393    x$fpl$fadd          fz_ws.l(faddsub_clz.o)
    0x080052b8   0x080052b8   0x00000054   Code   RO         1399    x$fpl$fcmp          fz_ws.l(fcmp.o)
    0x0800530c   0x0800530c   0x00000018   Code   RO         1695    x$fpl$fcmpinf       fz_ws.l(fcmpi.o)
    0x08005324   0x08005324   0x00000184   Code   RO         1402    x$fpl$fdiv          fz_ws.l(fdiv.o)
    0x080054a8   0x080054a8   0x00000068   Code   RO         1604    x$fpl$feqf          fz_ws.l(feqf.o)
    0x08005510   0x08005510   0x00000036   Code   RO         1405    x$fpl$ffix          fz_ws.l(ffix.o)
    0x08005546   0x08005546   0x00000002   PAD
    0x08005548   0x08005548   0x00000030   Code   RO         1410    x$fpl$fflt          fz_ws.l(fflt_clz.o)
    0x08005578   0x08005578   0x00000026   Code   RO         1409    x$fpl$ffltu         fz_ws.l(fflt_clz.o)
    0x0800559e   0x0800559e   0x00000002   PAD
    0x080055a0   0x080055a0   0x00000068   Code   RO         1606    x$fpl$fgeqf         fz_ws.l(fgeqf.o)
    0x08005608   0x08005608   0x00000068   Code   RO         1608    x$fpl$fleqf         fz_ws.l(fleqf.o)
    0x08005670   0x08005670   0x00000102   Code   RO         1415    x$fpl$fmul          fz_ws.l(fmul.o)
    0x08005772   0x08005772   0x0000008c   Code   RO         1610    x$fpl$fnaninf       fz_ws.l(fnaninf.o)
    0x080057fe   0x080057fe   0x0000000a   Code   RO         1612    x$fpl$fretinf       fz_ws.l(fretinf.o)
    0x08005808   0x08005808   0x000000ea   Code   RO         1395    x$fpl$fsub          fz_ws.l(faddsub_clz.o)
    0x080058f2   0x080058f2   0x00000000   Code   RO         1614    x$fpl$usenofp       fz_ws.l(usenofp.o)
    0x080058f2   0x080058f2   0x00000010   Data   RO         1360    .rodata.AHBPrescTable  system_stm32f10x.o
    0x08005902   0x08005902   0x00000002   PAD
    0x08005904   0x08005904   0x0000000c   Data   RO          893    .rodata._ZTV11CommonTimer  common_timer.o
    0x08005910   0x08005910   0x0000000c   Data   RO          785    .rodata._ZTV11IUpdated1ms  coil_with_timer.o
    0x0800591c   0x0800591c   0x0000000c   Data   RO          991    .rodata._ZTV11PulseCommon  pulse.o
    0x08005928   0x08005928   0x0000000c   Data   RO          811    .rodata._ZTV11SimpleInput  simple_input.o
    0x08005934   0x08005934   0x0000000c   Data   RO         1155    .rodata._ZTV11ThreePosReg  three_pos.o
    0x08005940   0x08005940   0x00000030   Data   RO          775    .rodata._ZTV12CoilOffDelay  coil_with_timer.o
    0x08005970   0x08005970   0x00000010   Data   RO          725    .rodata._ZTV12ProgrammCoil  coil.o
    0x08005980   0x08005980   0x0000000c   Data   RO          667    .rodata._ZTV13AnalogMonitor  analog_monitor.o
    0x0800598c   0x0800598c   0x0000000c   Data   RO          926    .rodata._ZTV13OnDelayCommon  on_delay.o
    0x08005998   0x08005998   0x0000000c   Data   RO          953    .rodata._ZTV14OffDelayCommon  off_delay.o
    0x080059a4   0x080059a4   0x0000001c   Data   RO          984    .rodata._ZTV14PulseInterrapt  pulse.o
    0x080059c0   0x080059c0   0x0000001c   Data   RO         1250    .rodata._ZTV15SequenceDelayed  sequence.o
    0x080059dc   0x080059dc   0x0000000c   Data   RO           88    .rodata._ZTV17IUpdatedSomewhere  main.o
    0x080059e8   0x080059e8   0x0000002c   Data   RO          812    .rodata._ZTV18SimpleInputDelayed  simple_input.o
    0x08005a14   0x08005a14   0x00000010   Data   RO          724    .rodata._ZTV4Coil   coil.o
    0x08005a24   0x08005a24   0x0000000c   Data   RO         1097    .rodata._ZTV4Ramp   ramp.o
    0x08005a30   0x08005a30   0x0000000c   Data   RO           87    .rodata._ZTV5ScaleIfsE  main.o
    0x08005a3c   0x08005a3c   0x0000000c   Data   RO          702    .rodata._ZTV5ScaleIftE  analog_out.o
    0x08005a48   0x08005a48   0x0000000c   Data   RO          668    .rodata._ZTV5ScaleItfE  analog_monitor.o
    0x08005a54   0x08005a54   0x0000000c   Data   RO         1312    .rodata._ZTV6MovAvg  moving_avg.o
    0x08005a60   0x08005a60   0x0000000c   Data   RO         1053    .rodata._ZTV6PIDreg  pid.o
    0x08005a6c   0x08005a6c   0x0000000c   Data   RO          736    .rodata._ZTV7ISwitch  coil.o
    0x08005a78   0x08005a78   0x0000000c   Data   RO         1288    .rodata._ZTV7Monitor  monitor.o
    0x08005a84   0x08005a84   0x0000001c   Data   RO          919    .rodata._ZTV7OnDelay  on_delay.o
    0x08005aa0   0x08005aa0   0x0000001c   Data   RO          946    .rodata._ZTV8OffDelay  off_delay.o
    0x08005abc   0x08005abc   0x0000000c   Data   RO          687    .rodata._ZTV9AnalogOut  analog_out.o
    0x08005ac8   0x08005ac8   0x0000000c   Data   RO         1214    .rodata._ZTV9TwoPosTim  two_pos.o
    0x08005ad4   0x08005ad4   0x00000019   Data   RO           71    .rodata.str1.1      main.o
    0x08005aed   0x08005aed   0x00000005   Data   RO          433    .rodata.str1.1      tasks.o
    0x08005af2   0x08005af2   0x00000008   Data   RO          500    .rodata.str1.1      timers.o
    0x08005afa   0x08005afa   0x00000002   PAD
    0x08005afc   0x08005afc   0x00000004   Data   RO          418    .rodata.uxTopUsedPriority  tasks.o
    0x08005b00   0x08005b00   0x00000020   Data   RO         1815    Region$$Table       anon$$obj.o
    0x08005b20   0x08005b20   0x00000004   Data   RO           72    .init_array         main.o
    0x08005b24   0x08005b20   0x00000004   Data   RO          565    .init_array         test_task.o
    0x08005b28   0x08005b20   0x00000000   Data   RO         1388    .init_array         c_w.l(init_aeabi.o)


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08005b28, Size: 0x00003c10, Max: 0x00005000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08005b28   0x00000004   Data   RW         1359    .data.SystemCoreClock  system_stm32f10x.o
    0x20000004   0x08005b2c   0x00000004   Data   RW         1706    .data.__cxa_terminate_handler  libcppabi_w.l(cxa_default_handlers.cpp.o)
    0x20000008   0x08005b30   0x00000030   Data   RW           69    .data.updateObjects  main.o
    0x20000038   0x08005b60   0x00000001   Data   RW           70    .data.updateObjectsSize  main.o
    0x20000039   0x08005b61   0x00000003   PAD
    0x2000003c   0x08005b64   0x00000004   Data   RW          536    .data.uxCriticalNesting  port.o
    0x20000040        -       0x00000060   Zero   RW         1715    .bss                c_w.l(libspace.o)
    0x200000a0        -       0x00000004   Zero   RW         1708    .bss.__cxa_new_handler  libcppabi_w.l(cxa_default_handlers.cpp.o)
    0x200000a4        -       0x00000034   Zero   RW           54    .bss.adcMonitor     main.o
    0x200000d8        -       0x00000004   Zero   RW           53    .bss.adcValues      main.o
    0x200000dc        -       0x00000028   Zero   RW           55    .bss.analogOut      main.o
    0x20000104        -       0x00000014   Zero   RW           59    .bss.avg            main.o
    0x20000118        -       0x00000024   Zero   RW           51    .bss.button         main.o
    0x2000013c        -       0x00000008   Zero   RW           65    .bss.counter        main.o
    0x20000144        -       0x00000014   Zero   RW           52    .bss.delay          main.o
    0x20000158        -       0x00000024   Zero   RW           50    .bss.led            main.o
    0x2000017c        -       0x00000014   Zero   RW           63    .bss.offDelay       main.o
    0x20000190        -       0x00000014   Zero   RW           62    .bss.onDelay        main.o
    0x200001a4        -       0x00000048   Zero   RW           56    .bss.pid            main.o
    0x200001ec        -       0x00000004   Zero   RW          504    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x200001f0        -       0x00000014   Zero   RW           64    .bss.pulse          main.o
    0x20000204        -       0x00000004   Zero   RW          417    .bss.pxCurrentTCB   tasks.o
    0x20000208        -       0x00000004   Zero   RW          502    .bss.pxCurrentTimerList  timers.o
    0x2000020c        -       0x00000004   Zero   RW          427    .bss.pxDelayedTaskList  tasks.o
    0x20000210        -       0x00000004   Zero   RW          140    .bss.pxEnd          heap_4.o
    0x20000214        -       0x00000004   Zero   RW          428    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000218        -       0x00000004   Zero   RW          503    .bss.pxOverflowTimerList  timers.o
    0x2000021c        -       0x00000064   Zero   RW          419    .bss.pxReadyTasksLists  tasks.o
    0x20000280        -       0x00000024   Zero   RW           58    .bss.ramp           main.o
    0x200002a4        -       0x00000001   Zero   RW          561    .bss.reslt          test_task.o
    0x200002a5        -       0x00000001   Zero   RW          560    .bss.rest           test_task.o
    0x200002a6        -       0x00000003   Zero   RW          558    .bss.rise           test_task.o
    0x200002a9   0x08005b68   0x00000003   PAD
    0x200002ac        -       0x00000018   Zero   RW           57    .bss.scale          main.o
    0x200002c4        -       0x0000000c   Zero   RW           67    .bss.seq1           main.o
    0x200002d0        -       0x00000020   Zero   RW           68    .bss.seq2           main.o
    0x200002f0        -       0x00000001   Zero   RW          564    .bss.seq_finish     test_task.o
    0x200002f1        -       0x00000001   Zero   RW          563    .bss.seq_lock       test_task.o
    0x200002f2        -       0x00000001   Zero   RW          562    .bss.seq_start      test_task.o
    0x200002f3        -       0x00000001   Zero   RW           66    .bss.step           main.o
    0x200002f4        -       0x00000001   Zero   RW          559    .bss.strt           test_task.o
    0x200002f5   0x08005b68   0x00000003   PAD
    0x200002f8        -       0x00000024   Zero   RW           61    .bss.threePosReg    main.o
    0x2000031c        -       0x00000018   Zero   RW           60    .bss.twoPos         main.o
    0x20000334        -       0x00002800   Zero   RW          146    .bss.ucHeap         heap_4.o
    0x20002b34        -       0x00000004   Zero   RW          424    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002b38        -       0x00000004   Zero   RW          423    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002b3c        -       0x00000004   Zero   RW          430    .bss.uxSchedulerSuspended  tasks.o
    0x20002b40        -       0x00000004   Zero   RW          421    .bss.uxTaskNumber   tasks.o
    0x20002b44        -       0x00000004   Zero   RW          420    .bss.uxTopReadyPriority  tasks.o
    0x20002b48        -       0x00000014   Zero   RW          505    .bss.xActiveTimerList1  timers.o
    0x20002b5c        -       0x00000014   Zero   RW          506    .bss.xActiveTimerList2  timers.o
    0x20002b70        -       0x00000014   Zero   RW          438    .bss.xDelayedTaskList1  tasks.o
    0x20002b84        -       0x00000014   Zero   RW          439    .bss.xDelayedTaskList2  tasks.o
    0x20002b98        -       0x00000004   Zero   RW          141    .bss.xFreeBytesRemaining  heap_4.o
    0x20002b9c        -       0x00000004   Zero   RW          434    .bss.xIdleTaskHandle  tasks.o
    0x20002ba0        -       0x00000004   Zero   RW          143    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20002ba4        -       0x00000004   Zero   RW          435    .bss.xNextTaskUnblockTime  tasks.o
    0x20002ba8        -       0x00000004   Zero   RW          437    .bss.xNumOfOverflows  tasks.o
    0x20002bac        -       0x00000004   Zero   RW          144    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002bb0        -       0x00000004   Zero   RW          145    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20002bb4        -       0x00000004   Zero   RW          436    .bss.xPendedTicks   tasks.o
    0x20002bb8        -       0x00000014   Zero   RW          432    .bss.xPendingReadyList  tasks.o
    0x20002bcc        -       0x00000004   Zero   RW          425    .bss.xSchedulerRunning  tasks.o
    0x20002bd0        -       0x00000008   Zero   RW          142    .bss.xStart         heap_4.o
    0x20002bd8        -       0x00000014   Zero   RW          429    .bss.xSuspendedTaskList  tasks.o
    0x20002bec        -       0x00000014   Zero   RW          422    .bss.xTasksWaitingTermination  tasks.o
    0x20002c00        -       0x00000004   Zero   RW          426    .bss.xTickCount     tasks.o
    0x20002c04        -       0x00000004   Zero   RW          499    .bss.xTimerQueue    timers.o
    0x20002c08        -       0x00000004   Zero   RW          501    .bss.xTimerTaskHandle  timers.o
    0x20002c0c        -       0x00000004   Zero   RW          431    .bss.xYieldPending  tasks.o
    0x20002c10        -       0x00000c00   Zero   RW         1343    HEAP                startup_stm32f10x_md.o
    0x20003810        -       0x00000400   Zero   RW         1342    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       624          0         24          0          0       5390   analog_monitor.o
       420          0         24          0          0       5300   analog_out.o
       300          0         44          0          0       4631   coil.o
       242          0         60          0          0       5209   coil_with_timer.o
        64          0          0          0          0       1810   common.o
       442          0         12          0          0       5261   common_timer.o
        34          0          0          0          0       2957   counter.o
       226          0          0          0          0       2307   gpio_common.o
       880          0          0          0      10268       4062   heap_4.o
      1164          0          0          0          0       7833   init.o
        42          0          0          0          0       7211   led_task.o
       238          0          0          0          0       2044   list.o
      1130          0         53         49        513      13578   main.o
       566          0         12          0          0       6310   monitor.o
       390          0         12          0          0       9323   moving_avg.o
       262          0         40          0          0       3599   off_delay.o
       132          0         40          0          0       3487   on_delay.o
       838          0         12          0          0       8493   pid.o
       100          0          0          0          0       7221   pidtask.o
       510         12          0          4          0       2483   port.o
       340          0         40          0          0       4372   pulse.o
      1124          0          0          0          0      12153   queue.o
       514          0         12          0          0       6027   ramp.o
       222          0          0          0          0       2561   rf_impulse.o
       422          0         28          0          0       4764   sequence.o
       374          0         56          0          0       4551   simple_input.o
        64         26        236          0       4096        820   startup_stm32f10x_md.o
       690          0         16          4          0       2938   system_stm32f10x.o
      3694          0          9          0        260      21770   tasks.o
       562          0          4          0          9       9125   test_task.o
       696          0         12          0          0       7499   three_pos.o
      1148         10          8          0         60       7642   timers.o
       354          0         12          0          0       7304   two_pos.o

    ----------------------------------------------------------------------
     19054         60        802         60      15212     200035   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       246         12          4          3          6          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        22          0          0          0          0         80   abort.o
        46          0          0          0          0         84   aeabi_atexit.o
        16          0          0          0          0         68   aeabi_memset4.o
        10          0          0          0          0         68   cxa_atexit.o
        66          0          0          0          0         84   cxa_finalize.o
        48         34          0          0          0         76   defsig_abrt_inner.o
        14          0          0          0          0         80   defsig_abrt_outer.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        18          0          0          0          0         80   exit.o
        94          0          0          0          0         80   h1_alloc.o
        52          0          0          0          0         68   h1_extend.o
        78          0          0          0          0         80   h1_free.o
        14          0          0          0          0         84   h1_init.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
         0          0          0          0          0          0   indicate_semi.o
        36          8          0          0          0         80   init_aeabi.o
       138          0          0          0          0        168   init_alloc.o
         2          0          0          0          0          0   libinit.o
        14          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         8          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
         0          0          0          0          0          0   maybetermalloc1.o
         8          4          0          0          0         68   rt_ddtor_pointer_addr_intlibspace.o
         8          4          0          0          0         68   rt_heap_descriptor_intlibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
         2          0          0          0          0         68   use_no_semi.o
       430          8          0          0          0        168   faddsub_clz.o
        84          0          0          0          0        196   fcmp.o
        24          0          0          0          0         68   fcmpi.o
       388         76          0          0          0         96   fdiv.o
       104          4          0          0          0         84   feqf.o
        54          4          0          0          0         84   ffix.o
        86          0          0          0          0        136   fflt_clz.o
       104          4          0          0          0         84   fgeqf.o
       104          4          0          0          0         84   fleqf.o
       258          4          0          0          0         84   fmul.o
       140          4          0          0          0         84   fnaninf.o
        10          0          0          0          0         68   fretinf.o
         0          0          0          0          0          0   usenofp.o
        54          0          0          0          0        380   new.cpp.o
         4          0          0          0          0         36   abort_message.cpp.o
         4          0          0          0          0         68   cxa_aux_runtime.cpp.o
         0          0          0          4          4          0   cxa_default_handlers.cpp.o
        74         40          0          0          0        132   cxa_handlers.cpp.o
        40         32          0          0          0         52   cxa_virtual.cpp.o

    ----------------------------------------------------------------------
      3480        304          0          4        100       4544   Library Totals
        22          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1496        124          0          0         96       2640   c_w.l
      1786        108          0          0          0       1236   fz_ws.l
        54          0          0          0          0        380   libcpp_w.l
       122         72          0          4          4        288   libcppabi_w.l

    ----------------------------------------------------------------------
      3480        304          0          4        100       4544   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     22534        364        802         64      15312     201671   Grand Totals
     22534        364        802         64      15312     201671   ELF Image Totals
     22534        364        802         64          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                23336 (  22.79kB)
    Total RW  Size (RW Data + ZI Data)             15376 (  15.02kB)
    Total ROM Size (Code + RO Data + RW Data)      23400 (  22.85kB)

==============================================================================

