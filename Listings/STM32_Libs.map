Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    main.o(.text.__cxx_global_var_init) refers to main.o(.bss.led) for led
    main.o(.text.__cxx_global_var_init) refers to coil.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) for CoilOffDelay::CoilOffDelay(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init) refers to main.o(.text.__cxx_global_var_init) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.1) refers to main.o(.bss.button) for button
    main.o(.text.__cxx_global_var_init.1) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.1) refers to main.o(.text.__cxx_global_var_init.1) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.2) refers to main.o(.bss.delay) for delay
    main.o(.text.__cxx_global_var_init.2) refers to on_delay.o(.text._ZN7OnDelayC2Ej) for OnDelay::OnDelay(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.2) refers to main.o(.text.__cxx_global_var_init.2) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.3) refers to main.o(.bss.adcMonitor) for adcMonitor
    main.o(.text.__cxx_global_var_init.3) refers to analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff) for AnalogMonitor::AnalogMonitor(unsigned char, float, float)
    main.o(.text.__cxx_global_var_init.3) refers to analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) for AnalogMonitor::~AnalogMonitor()
    main.o(.text.__cxx_global_var_init.3) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.3) refers to main.o(.text.__cxx_global_var_init.3) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.4) refers to main.o(.bss.analogOut) for analogOut
    main.o(.text.__cxx_global_var_init.4) refers to analog_out.o(.text._ZN9AnalogOutC2Etjffff) for AnalogOut::AnalogOut(unsigned short, unsigned int, float, float, float, float)
    main.o(.text.__cxx_global_var_init.4) refers to analog_out.o(.text._ZN9AnalogOutD2Ev) for AnalogOut::~AnalogOut()
    main.o(.text.__cxx_global_var_init.4) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.4) refers to main.o(.text.__cxx_global_var_init.4) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.5) refers to main.o(.bss.pid) for pid
    main.o(.text.__cxx_global_var_init.5) refers to pid.o(.text._ZN6PIDregC2Etfffffffb) for PIDreg::PIDreg(unsigned short, float, float, float, float, float, float, float, bool)
    main.o(.ARM.exidx.text.__cxx_global_var_init.5) refers to main.o(.text.__cxx_global_var_init.5) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.6) refers to main.o(.bss.scale) for scale
    main.o(.text.__cxx_global_var_init.6) refers to main.o(.text._ZN5ScaleIfsEC2Effss) for Scale<float, short>::Scale__sub_object(float, float, short, short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.6) refers to main.o(.text.__cxx_global_var_init.6) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.7) refers to main.o(.bss.ramp) for ramp
    main.o(.text.__cxx_global_var_init.7) refers to ramp.o(.text._ZN4RampC2Ej) for Ramp::Ramp(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.7) refers to main.o(.text.__cxx_global_var_init.7) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.8) refers to main.o(.bss.avg) for avg
    main.o(.text.__cxx_global_var_init.8) refers to moving_avg.o(.text._ZN6MovAvgC2Eh) for MovAvg::MovAvg(unsigned char)
    main.o(.text.__cxx_global_var_init.8) refers to moving_avg.o(.text._ZN6MovAvgD2Ev) for MovAvg::~MovAvg()
    main.o(.text.__cxx_global_var_init.8) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.8) refers to main.o(.text.__cxx_global_var_init.8) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.9) refers to main.o(.bss.twoPos) for twoPos
    main.o(.text.__cxx_global_var_init.9) refers to two_pos.o(.text._ZN9TwoPosTimC2Efttb) for TwoPosTim::TwoPosTim(float, unsigned short, unsigned short, bool)
    main.o(.text.__cxx_global_var_init.9) refers to two_pos.o(.text._ZN9TwoPosTimD2Ev) for TwoPosTim::~TwoPosTim()
    main.o(.text.__cxx_global_var_init.9) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.9) refers to main.o(.text.__cxx_global_var_init.9) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.10) refers to main.o(.bss.threePosReg) for threePosReg
    main.o(.text.__cxx_global_var_init.10) refers to three_pos.o(.text._ZN11ThreePosRegC2Efffttb) for ThreePosReg::ThreePosReg(float, float, float, unsigned short, unsigned short, bool)
    main.o(.text.__cxx_global_var_init.10) refers to three_pos.o(.text._ZN11ThreePosRegD2Ev) for ThreePosReg::~ThreePosReg()
    main.o(.text.__cxx_global_var_init.10) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.10) refers to main.o(.text.__cxx_global_var_init.10) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.11) refers to main.o(.bss.onDelay) for onDelay
    main.o(.text.__cxx_global_var_init.11) refers to on_delay.o(.text._ZN7OnDelayC2Ej) for OnDelay::OnDelay(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.11) refers to main.o(.text.__cxx_global_var_init.11) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.12) refers to main.o(.bss.offDelay) for offDelay
    main.o(.text.__cxx_global_var_init.12) refers to off_delay.o(.text._ZN8OffDelayC2Ej) for OffDelay::OffDelay(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.12) refers to main.o(.text.__cxx_global_var_init.12) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.13) refers to main.o(.bss.pulse) for pulse
    main.o(.text.__cxx_global_var_init.13) refers to pulse.o(.text._ZN5PulseC2Ej) for Pulse::Pulse(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.13) refers to main.o(.text.__cxx_global_var_init.13) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.14) refers to main.o(.bss.counter) for counter
    main.o(.text.__cxx_global_var_init.14) refers to counter.o(.text._ZN7CounterC2E7IMPULSEj) for Counter::Counter(IMPULSE, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.14) refers to main.o(.text.__cxx_global_var_init.14) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.15) refers to main.o(.bss.seq1) for seq1
    main.o(.text.__cxx_global_var_init.15) refers to main.o(.bss.step) for step
    main.o(.text.__cxx_global_var_init.15) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.15) refers to main.o(.text.__cxx_global_var_init.15) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.16) refers to main.o(.bss.seq2) for seq2
    main.o(.text.__cxx_global_var_init.16) refers to main.o(.bss.step) for step
    main.o(.text.__cxx_global_var_init.16) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.16) refers to main.o(.text.__cxx_global_var_init.16) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationIdleHook) refers to main.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationTickHook) refers to main.o(.text.vApplicationTickHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationMallocFailedHook) refers to main.o(.text.vApplicationMallocFailedHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to main.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    main.o(.text.TIM2_IRQHandler) refers to main.o(.data.updateObjectsSize) for updateObjectsSize
    main.o(.text.TIM2_IRQHandler) refers to main.o(.data.updateObjects) for updateObjects
    main.o(.ARM.exidx.text.TIM2_IRQHandler) refers to main.o(.text.TIM2_IRQHandler) for [Anonymous Symbol]
    main.o(.text.main) refers to init.o(.text._Z7rccInitv) for rccInit()
    main.o(.text.main) refers to init.o(.text._Z8tickInitv) for tickInit()
    main.o(.text.main) refers to init.o(.text._Z10commonInitv) for commonInit()
    main.o(.text.main) refers to init.o(.text._Z7adcInitv) for adcInit()
    main.o(.text.main) refers to init.o(.text._Z7pwmInitv) for pwmInit()
    main.o(.text.main) refers to led_task.o(.text._Z7ledTaskPv) for ledTask(void*)
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to pidtask.o(.text._Z7pidTaskPv) for pidTask(void*)
    main.o(.text.main) refers to test_task.o(.text._Z8testTaskPv) for testTask(void*)
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init) for __cxx_global_var_init
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.1) for __cxx_global_var_init.1
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.2) for __cxx_global_var_init.2
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.3) for __cxx_global_var_init.3
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.4) for __cxx_global_var_init.4
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.5) for __cxx_global_var_init.5
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.6) for __cxx_global_var_init.6
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.7) for __cxx_global_var_init.7
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.8) for __cxx_global_var_init.8
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.9) for __cxx_global_var_init.9
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.10) for __cxx_global_var_init.10
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.11) for __cxx_global_var_init.11
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.12) for __cxx_global_var_init.12
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.13) for __cxx_global_var_init.13
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.14) for __cxx_global_var_init.14
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.15) for __cxx_global_var_init.15
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.16) for __cxx_global_var_init.16
    main.o(.ARM.exidx.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text._GLOBAL__sub_I_main.cpp) for [Anonymous Symbol]
    main.o(.data.updateObjects) refers to main.o(.bss.delay) for delay
    main.o(.data.updateObjects) refers to main.o(.bss.adcMonitor) for adcMonitor
    main.o(.data.updateObjects) refers to main.o(.bss.analogOut) for analogOut
    main.o(.data.updateObjects) refers to main.o(.bss.ramp) for ramp
    main.o(.data.updateObjects) refers to main.o(.bss.twoPos) for twoPos
    main.o(.data.updateObjects) refers to main.o(.bss.threePosReg) for threePosReg
    main.o(.data.updateObjects) refers to main.o(.bss.button) for button
    main.o(.data.updateObjects) refers to main.o(.bss.onDelay) for onDelay
    main.o(.data.updateObjects) refers to main.o(.bss.offDelay) for offDelay
    main.o(.data.updateObjects) refers to main.o(.bss.pulse) for pulse
    main.o(.data.updateObjects) refers to main.o(.bss.seq2) for seq2
    main.o(.data.updateObjects) refers to main.o(.bss.led) for led
    main.o(.init_array) refers to main.o(.text._GLOBAL__sub_I_main.cpp) for _GLOBAL__sub_I_main.cpp
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to rt_memclr.o(.text) for __aeabi_memclr
    stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadBytesFromBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteBytesToBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to main.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to main.o(.text.vApplicationIdleHook) for vApplicationIdleHook
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to main.o(.text.vApplicationTickHook) for vApplicationTickHook
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    led_task.o(.text._Z7ledTaskPv) refers to main.o(.bss.button) for button
    led_task.o(.text._Z7ledTaskPv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    led_task.o(.text._Z7ledTaskPv) refers to main.o(.bss.led) for led
    led_task.o(.text._Z7ledTaskPv) refers to coil.o(.text._ZN12CoilOffDelayaSEb) for CoilOffDelay::operator=(bool)
    led_task.o(.text._Z7ledTaskPv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    led_task.o(.ARM.exidx.text._Z7ledTaskPv) refers to led_task.o(.text._Z7ledTaskPv) for [Anonymous Symbol]
    test_task.o(.text.__cxx_global_var_init) refers to test_task.o(.bss.rise) for rise
    test_task.o(.text.__cxx_global_var_init) refers to rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE) for RFimpulse::RFimpulse(IMPULSE)
    test_task.o(.ARM.exidx.text.__cxx_global_var_init) refers to test_task.o(.text.__cxx_global_var_init) for [Anonymous Symbol]
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.adcValues) for adcValues
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.adcMonitor) for adcMonitor
    test_task.o(.text._Z8testTaskPv) refers to analog_monitor.o(.text._ZN13AnalogMonitoraSEt) for AnalogMonitor::operator=(unsigned short)
    test_task.o(.text._Z8testTaskPv) refers to monitor.o(.text._ZN7Monitor3getEv) for Monitor::get()
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.avg) for avg
    test_task.o(.text._Z8testTaskPv) refers to moving_avg.o(.text._ZN6MovAvgaSEf) for MovAvg::operator=(float)
    test_task.o(.text._Z8testTaskPv) refers to moving_avg.o(.text._ZN6MovAvg3getEv) for MovAvg::get()
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.scale) for scale
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.text._ZN5ScaleIfsEaSEf) for Scale<float, short>::operator=(float)
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.text._ZN5ScaleIfsE3getEv) for Scale<float, short>::get()
    test_task.o(.text._Z8testTaskPv) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.ramp) for ramp
    test_task.o(.text._Z8testTaskPv) refers to ramp.o(.text._ZN4RampaSEf) for Ramp::operator=(float)
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.analogOut) for analogOut
    test_task.o(.text._Z8testTaskPv) refers to analog_out.o(.text._ZN9AnalogOutaSEf) for AnalogOut::operator=(float)
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.strt) for strt
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.pulse) for pulse
    test_task.o(.text._Z8testTaskPv) refers to pulse.o(.text._ZN5PulseaSEb) for Pulse::operator=(bool)
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.rest) for rest
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.rise) for rise
    test_task.o(.text._Z8testTaskPv) refers to rf_impulse.o(.text._ZN9RFimpulseaSEb) for RFimpulse::operator=(bool)
    test_task.o(.text._Z8testTaskPv) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for RFimpulse::get()
    test_task.o(.text._Z8testTaskPv) refers to pulse.o(.text._ZN11PulseCommon5resetEv) for PulseCommon::reset()
    test_task.o(.text._Z8testTaskPv) refers to pulse.o(.text._ZN11PulseCommon3getEv) for PulseCommon::get()
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.reslt) for reslt
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.seq_start) for seq_start
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.seq1) for seq1
    test_task.o(.text._Z8testTaskPv) refers to sequence.o(.text._ZN8Sequence5startEb) for Sequence::start(bool)
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.seq_lock) for seq_lock
    test_task.o(.text._Z8testTaskPv) refers to sequence.o(.text._ZN8Sequence4lockEb) for Sequence::lock(bool)
    test_task.o(.text._Z8testTaskPv) refers to test_task.o(.bss.seq_finish) for seq_finish
    test_task.o(.text._Z8testTaskPv) refers to sequence.o(.text._ZN8Sequence6finishEb) for Sequence::finish(bool)
    test_task.o(.text._Z8testTaskPv) refers to main.o(.bss.seq2) for seq2
    test_task.o(.text._Z8testTaskPv) refers to sequence.o(.text._ZN8Sequence8finishedEv) for Sequence::finished()
    test_task.o(.text._Z8testTaskPv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    test_task.o(.ARM.exidx.text._Z8testTaskPv) refers to test_task.o(.text._Z8testTaskPv) for [Anonymous Symbol]
    test_task.o(.text._GLOBAL__sub_I_test_task.cpp) refers to test_task.o(.text.__cxx_global_var_init) for __cxx_global_var_init
    test_task.o(.ARM.exidx.text._GLOBAL__sub_I_test_task.cpp) refers to test_task.o(.text._GLOBAL__sub_I_test_task.cpp) for [Anonymous Symbol]
    test_task.o(.init_array) refers to test_task.o(.text._GLOBAL__sub_I_test_task.cpp) for _GLOBAL__sub_I_test_task.cpp
    pidtask.o(.text._Z7pidTaskPv) refers to main.o(.bss.pid) for pid
    pidtask.o(.text._Z7pidTaskPv) refers to pid.o(.text._ZN6PIDreg5setKpEf) for PIDreg::setKp(float)
    pidtask.o(.text._Z7pidTaskPv) refers to pid.o(.text._ZN6PIDreg5setTiEf) for PIDreg::setTi(float)
    pidtask.o(.text._Z7pidTaskPv) refers to pid.o(.text._ZN6PIDreg5setTdEf) for PIDreg::setTd(float)
    pidtask.o(.text._Z7pidTaskPv) refers to pid.o(.text._ZN6PIDreg7setAutoEb) for PIDreg::setAuto(bool)
    pidtask.o(.text._Z7pidTaskPv) refers to main.o(.bss.adcMonitor) for adcMonitor
    pidtask.o(.text._Z7pidTaskPv) refers to monitor.o(.text._ZN7Monitor3getEv) for Monitor::get()
    pidtask.o(.text._Z7pidTaskPv) refers to pid.o(.text._ZN6PIDregaSEf) for PIDreg::operator=(float)
    pidtask.o(.text._Z7pidTaskPv) refers to pid.o(.text._ZN6PIDreg4getTEv) for PIDreg::getT()
    pidtask.o(.text._Z7pidTaskPv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    pidtask.o(.ARM.exidx.text._Z7pidTaskPv) refers to pidtask.o(.text._Z7pidTaskPv) for [Anonymous Symbol]
    common.o(.ARM.exidx.text._Z10badTimeOutj) refers to common.o(.text._Z10badTimeOutj) for [Anonymous Symbol]
    common.o(.ARM.exidx.text._Z11getPositionj) refers to common.o(.text._Z11getPositionj) for [Anonymous Symbol]
    init.o(.text._Z10commonInitv) refers to init.o(.text._ZL26__NVIC_SetPriorityGroupingj) for __NVIC_SetPriorityGrouping(unsigned int)
    init.o(.text._Z10commonInitv) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    init.o(.ARM.exidx.text._Z10commonInitv) refers to init.o(.text._Z10commonInitv) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL26__NVIC_SetPriorityGroupingj) refers to init.o(.text._ZL26__NVIC_SetPriorityGroupingj) for [Anonymous Symbol]
    init.o(.text._Z7rccInitv) refers to init.o(.text._Z11setRegisterIVjEvPT_jj) for void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    init.o(.ARM.exidx.text._Z7rccInitv) refers to init.o(.text._Z7rccInitv) for [Anonymous Symbol]
    init.o(.text._Z8tickInitv) refers to init.o(.text._ZL16__NVIC_EnableIRQ4IRQn) for __NVIC_EnableIRQ(IRQn)
    init.o(.text._Z8tickInitv) refers to init.o(.text._ZL18__NVIC_SetPriority4IRQnj) for __NVIC_SetPriority(IRQn, unsigned int)
    init.o(.ARM.exidx.text._Z8tickInitv) refers to init.o(.text._Z8tickInitv) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL16__NVIC_EnableIRQ4IRQn) refers to init.o(.text._ZL16__NVIC_EnableIRQ4IRQn) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL18__NVIC_SetPriority4IRQnj) refers to init.o(.text._ZL18__NVIC_SetPriority4IRQnj) for [Anonymous Symbol]
    init.o(.text._Z7adcInitv) refers to init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    init.o(.text._Z7adcInitv) refers to main.o(.bss.delay) for delay
    init.o(.text._Z7adcInitv) refers to common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) for CommonTimer::prepareAndStart()
    init.o(.text._Z7adcInitv) refers to common_timer.o(.text._ZN11CommonTimer11notFinishedEv) for CommonTimer::notFinished()
    init.o(.text._Z7adcInitv) refers to main.o(.bss.adcValues) for adcValues
    init.o(.ARM.exidx.text._Z7adcInitv) refers to init.o(.text._Z7adcInitv) for [Anonymous Symbol]
    init.o(.text._Z7pwmInitv) refers to init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    init.o(.text._Z7pwmInitv) refers to init.o(.text._Z17setBitsInRegisterIVtEvPT_jj) for void setBitsInRegister<unsigned short volatile>(unsigned short volatile*, unsigned int, unsigned int)
    init.o(.ARM.exidx.text._Z7pwmInitv) refers to init.o(.text._Z7pwmInitv) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff) refers to monitor.o(.text._ZN7MonitorC2Eff) for Monitor::Monitor__sub_object(float, float)
    analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff) refers to analog_monitor.o(.rodata._ZTV13AnalogMonitor) for vtable for AnalogMonitor
    analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff) refers to analog_monitor.o(.text._ZN5ScaleItfEC2Ettff) for Scale<unsigned short, float>::Scale__sub_object(unsigned short, unsigned short, float, float)
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorC2Ehff) refers to analog_monitor.o(.text._ZN13AnalogMonitorC2Ehff) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) refers to analog_monitor.o(.rodata._ZTV13AnalogMonitor) for vtable for AnalogMonitor
    analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) refers to monitor.o(.text._ZN7MonitorD2Ev) for Monitor::~Monitor__sub_object()
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorD2Ev) refers to analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor3setEt) refers to analog_monitor.o(.text._ZN5ScaleItfEaSEt) for Scale<unsigned short, float>::operator=(unsigned short)
    analog_monitor.o(.text._ZN13AnalogMonitor3setEt) refers to analog_monitor.o(.text._ZN5ScaleItfE3getEv) for Scale<unsigned short, float>::get()
    analog_monitor.o(.text._ZN13AnalogMonitor3setEt) refers to monitor.o(.text._ZN7Monitor3setEf) for Monitor::set(float)
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor3setEt) refers to analog_monitor.o(.text._ZN13AnalogMonitor3setEt) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitoraSEt) refers to analog_monitor.o(.text._ZN13AnalogMonitor3setEt) for AnalogMonitor::set(unsigned short)
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitoraSEt) refers to analog_monitor.o(.text._ZN13AnalogMonitoraSEt) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor8getInRefEv) refers to analog_monitor.o(.text._ZN5ScaleItfE8getInRefEv) for Scale<unsigned short, float>::getInRef()
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor8getInRefEv) refers to analog_monitor.o(.text._ZN13AnalogMonitor8getInRefEv) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor9getOutRefEv) refers to analog_monitor.o(.text._ZN5ScaleItfE9getOutRefEv) for Scale<unsigned short, float>::getOutRef()
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor9getOutRefEv) refers to analog_monitor.o(.text._ZN13AnalogMonitor9getOutRefEv) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOutC2Etjffff) refers to ramp.o(.text._ZN4RampC2Ejffff) for Ramp::Ramp__sub_object(unsigned int, float, float, float, float)
    analog_out.o(.text._ZN9AnalogOutC2Etjffff) refers to analog_out.o(.rodata._ZTV9AnalogOut) for vtable for AnalogOut
    analog_out.o(.text._ZN9AnalogOutC2Etjffff) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    analog_out.o(.text._ZN9AnalogOutC2Etjffff) refers to analog_out.o(.text._ZN5ScaleIftEC2Efftt) for Scale<float, unsigned short>::Scale__sub_object(float, float, unsigned short, unsigned short)
    analog_out.o(.ARM.exidx.text._ZN9AnalogOutC2Etjffff) refers to analog_out.o(.text._ZN9AnalogOutC2Etjffff) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut9update1msEv) refers to ramp.o(.text._ZN4Ramp9update1msEv) for Ramp::update1ms()
    analog_out.o(.text._ZN9AnalogOut9update1msEv) refers to ramp.o(.text._ZN4Ramp3getEv) for Ramp::get()
    analog_out.o(.text._ZN9AnalogOut9update1msEv) refers to analog_out.o(.text._ZN5ScaleIftE3setEf) for Scale<float, unsigned short>::set(float)
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut9update1msEv) refers to analog_out.o(.text._ZN9AnalogOut9update1msEv) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOutD2Ev) refers to analog_out.o(.rodata._ZTV9AnalogOut) for vtable for AnalogOut
    analog_out.o(.text._ZN9AnalogOutD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    analog_out.o(.ARM.exidx.text._ZN9AnalogOutD2Ev) refers to analog_out.o(.text._ZN9AnalogOutD2Ev) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut3setEf) refers to ramp.o(.text._ZN4Ramp3setEf) for Ramp::set(float)
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut3setEf) refers to analog_out.o(.text._ZN9AnalogOut3setEf) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut3getEv) refers to ramp.o(.text._ZN4Ramp3getEv) for Ramp::get()
    analog_out.o(.text._ZN9AnalogOut3getEv) refers to ffix.o(x$fpl$ffix) for __aeabi_f2iz
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut3getEv) refers to analog_out.o(.text._ZN9AnalogOut3getEv) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOutaSEf) refers to ramp.o(.text._ZN4Ramp3setEf) for Ramp::set(float)
    analog_out.o(.ARM.exidx.text._ZN9AnalogOutaSEf) refers to analog_out.o(.text._ZN9AnalogOutaSEf) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut8getInRefEv) refers to ramp.o(.text._ZN4Ramp8getSpRefEv) for Ramp::getSpRef()
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut8getInRefEv) refers to analog_out.o(.text._ZN9AnalogOut8getInRefEv) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut9getOutRefEv) refers to analog_out.o(.text._ZN5ScaleIftE9getOutRefEv) for Scale<float, unsigned short>::getOutRef()
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut9getOutRefEv) refers to analog_out.o(.text._ZN9AnalogOut9getOutRefEv) for [Anonymous Symbol]
    analog_out.o(.rodata._ZTV9AnalogOut) refers to analog_out.o(.text._ZN9AnalogOut9update1msEv) for AnalogOut::update1ms()
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil8isActiveEv) refers to coil.o(.text._ZN12ProgrammCoil8isActiveEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil8setValueEb) refers to coil.o(.text._ZN12ProgrammCoil8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil3setEv) refers to coil.o(.text._ZN12ProgrammCoil3setEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil5resetEv) refers to coil.o(.text._ZN12ProgrammCoil5resetEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil6toggleEv) refers to coil.o(.text._ZN12ProgrammCoil6toggleEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoilaSEb) refers to coil.o(.text._ZN12ProgrammCoilaSEb) for [Anonymous Symbol]
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char)
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.text._ZN12ProgrammCoilC2Ev) for ProgrammCoil::ProgrammCoil__sub_object()
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.rodata._ZTV4Coil) for vtable for Coil
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    coil.o(.ARM.exidx.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4Coil8isActiveEv) refers to coil.o(.text._ZN4Coil8isActiveEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4Coil8setValueEb) refers to coil.o(.text._ZN4Coil8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4CoilaSEb) refers to coil.o(.text._ZN4CoilaSEb) for [Anonymous Symbol]
    coil.o(.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht) refers to on_delay.o(.text._ZN13OnDelayCommonC2Ej) for OnDelayCommon::OnDelayCommon__sub_object(unsigned int)
    coil.o(.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char)
    coil.o(.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    coil.o(.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht) refers to coil.o(.rodata._ZTV11CoilOnDelay) for vtable for CoilOnDelay
    coil.o(.ARM.exidx.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    coil.o(.text._ZN11CoilOnDelay9update1msEv) refers to on_delay.o(.text._ZN13OnDelayCommon6updateEv) for OnDelayCommon::update()
    coil.o(.text._ZN11CoilOnDelay9update1msEv) refers to on_delay.o(.text._ZN13OnDelayCommon3getEv) for OnDelayCommon::get()
    coil.o(.text._ZN11CoilOnDelay9update1msEv) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil.o(.ARM.exidx.text._ZN11CoilOnDelay9update1msEv) refers to coil.o(.text._ZN11CoilOnDelay9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZThn32_N11CoilOnDelay9update1msEv) refers to coil.o(.text._ZN11CoilOnDelay9update1msEv) for CoilOnDelay::update1ms()
    coil.o(.ARM.exidx.text._ZThn32_N11CoilOnDelay9update1msEv) refers to coil.o(.text._ZThn32_N11CoilOnDelay9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZN11CoilOnDelay8setValueEb) refers to on_delay.o(.text._ZN13OnDelayCommon3setEb) for OnDelayCommon::set(bool)
    coil.o(.ARM.exidx.text._ZN11CoilOnDelay8setValueEb) refers to coil.o(.text._ZN11CoilOnDelay8setValueEb) for [Anonymous Symbol]
    coil.o(.text._ZThn16_N11CoilOnDelay8setValueEb) refers to coil.o(.text._ZN11CoilOnDelay8setValueEb) for CoilOnDelay::setValue(bool)
    coil.o(.ARM.exidx.text._ZThn16_N11CoilOnDelay8setValueEb) refers to coil.o(.text._ZThn16_N11CoilOnDelay8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN11CoilOnDelayaSEb) refers to coil.o(.text._ZN11CoilOnDelayaSEb) for [Anonymous Symbol]
    coil.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) refers to off_delay.o(.text._ZN14OffDelayCommonC2Ej) for OffDelayCommon::OffDelayCommon__sub_object(unsigned int)
    coil.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char)
    coil.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    coil.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) refers to coil.o(.rodata._ZTV12CoilOffDelay) for vtable for CoilOffDelay
    coil.o(.ARM.exidx.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    coil.o(.text._ZN12CoilOffDelay9update1msEv) refers to off_delay.o(.text._ZN14OffDelayCommon6updateEv) for OffDelayCommon::update()
    coil.o(.text._ZN12CoilOffDelay9update1msEv) refers to off_delay.o(.text._ZN14OffDelayCommon3getEv) for OffDelayCommon::get()
    coil.o(.text._ZN12CoilOffDelay9update1msEv) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil.o(.ARM.exidx.text._ZN12CoilOffDelay9update1msEv) refers to coil.o(.text._ZN12CoilOffDelay9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZThn32_N12CoilOffDelay9update1msEv) refers to coil.o(.text._ZN12CoilOffDelay9update1msEv) for CoilOffDelay::update1ms()
    coil.o(.ARM.exidx.text._ZThn32_N12CoilOffDelay9update1msEv) refers to coil.o(.text._ZThn32_N12CoilOffDelay9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZN12CoilOffDelay8setValueEb) refers to off_delay.o(.text._ZN14OffDelayCommon3setEb) for OffDelayCommon::set(bool)
    coil.o(.ARM.exidx.text._ZN12CoilOffDelay8setValueEb) refers to coil.o(.text._ZN12CoilOffDelay8setValueEb) for [Anonymous Symbol]
    coil.o(.text._ZThn16_N12CoilOffDelay8setValueEb) refers to coil.o(.text._ZN12CoilOffDelay8setValueEb) for CoilOffDelay::setValue(bool)
    coil.o(.ARM.exidx.text._ZThn16_N12CoilOffDelay8setValueEb) refers to coil.o(.text._ZThn16_N12CoilOffDelay8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12CoilOffDelayaSEb) refers to coil.o(.text._ZN12CoilOffDelayaSEb) for [Anonymous Symbol]
    coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to pulse.o(.text._ZN11PulseCommonC2Ej) for PulseCommon::PulseCommon__sub_object(unsigned int)
    coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char)
    coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil.o(.rodata._ZTV9CoilPulse) for vtable for CoilPulse
    coil.o(.ARM.exidx.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    coil.o(.text._ZN9CoilPulse9update1msEv) refers to pulse.o(.text._ZN11PulseCommon6updateEv) for PulseCommon::update()
    coil.o(.text._ZN9CoilPulse9update1msEv) refers to pulse.o(.text._ZN11PulseCommon3getEv) for PulseCommon::get()
    coil.o(.text._ZN9CoilPulse9update1msEv) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil.o(.ARM.exidx.text._ZN9CoilPulse9update1msEv) refers to coil.o(.text._ZN9CoilPulse9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZThn32_N9CoilPulse9update1msEv) refers to coil.o(.text._ZN9CoilPulse9update1msEv) for CoilPulse::update1ms()
    coil.o(.ARM.exidx.text._ZThn32_N9CoilPulse9update1msEv) refers to coil.o(.text._ZThn32_N9CoilPulse9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZN9CoilPulse8setValueEb) refers to pulse.o(.text._ZN11PulseCommon3setEb) for PulseCommon::set(bool)
    coil.o(.ARM.exidx.text._ZN9CoilPulse8setValueEb) refers to coil.o(.text._ZN9CoilPulse8setValueEb) for [Anonymous Symbol]
    coil.o(.text._ZThn16_N9CoilPulse8setValueEb) refers to coil.o(.text._ZN9CoilPulse8setValueEb) for CoilPulse::setValue(bool)
    coil.o(.ARM.exidx.text._ZThn16_N9CoilPulse8setValueEb) refers to coil.o(.text._ZThn16_N9CoilPulse8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN9CoilPulseaSEb) refers to coil.o(.text._ZN9CoilPulseaSEb) for [Anonymous Symbol]
    coil.o(.rodata._ZTV4Coil) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil.o(.rodata._ZTV4Coil) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil.o(.rodata._ZTV11CoilOnDelay) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    coil.o(.rodata._ZTV11CoilOnDelay) refers to coil.o(.text._ZN11CoilOnDelay9update1msEv) for CoilOnDelay::update1ms()
    coil.o(.rodata._ZTV11CoilOnDelay) refers to coil.o(.text._ZN11CoilOnDelay8setValueEb) for CoilOnDelay::setValue(bool)
    coil.o(.rodata._ZTV11CoilOnDelay) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil.o(.rodata._ZTV11CoilOnDelay) refers to coil.o(.text._ZThn16_N11CoilOnDelay8setValueEb) for non-virtual thunk to CoilOnDelay::setValue(bool)
    coil.o(.rodata._ZTV11CoilOnDelay) refers to coil.o(.text._ZThn32_N11CoilOnDelay9update1msEv) for non-virtual thunk to CoilOnDelay::update1ms()
    coil.o(.rodata._ZTV12CoilOffDelay) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    coil.o(.rodata._ZTV12CoilOffDelay) refers to coil.o(.text._ZN12CoilOffDelay9update1msEv) for CoilOffDelay::update1ms()
    coil.o(.rodata._ZTV12CoilOffDelay) refers to coil.o(.text._ZN12CoilOffDelay8setValueEb) for CoilOffDelay::setValue(bool)
    coil.o(.rodata._ZTV12CoilOffDelay) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil.o(.rodata._ZTV12CoilOffDelay) refers to coil.o(.text._ZThn16_N12CoilOffDelay8setValueEb) for non-virtual thunk to CoilOffDelay::setValue(bool)
    coil.o(.rodata._ZTV12CoilOffDelay) refers to coil.o(.text._ZThn32_N12CoilOffDelay9update1msEv) for non-virtual thunk to CoilOffDelay::update1ms()
    coil.o(.rodata._ZTV9CoilPulse) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZN9CoilPulse9update1msEv) for CoilPulse::update1ms()
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZN9CoilPulse8setValueEb) for CoilPulse::setValue(bool)
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZThn16_N9CoilPulse8setValueEb) for non-virtual thunk to CoilPulse::setValue(bool)
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZThn32_N9CoilPulse9update1msEv) for non-virtual thunk to CoilPulse::update1ms()
    coil.o(.rodata._ZTV12ProgrammCoil) refers to coil.o(.text._ZN12ProgrammCoil8isActiveEv) for ProgrammCoil::isActive()
    coil.o(.rodata._ZTV12ProgrammCoil) refers to coil.o(.text._ZN12ProgrammCoil8setValueEb) for ProgrammCoil::setValue(bool)
    gpio_common.o(.ARM.exidx.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char)
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to coil.o(.text._ZN7ISwitchC2Ev) for ISwitch::ISwitch__sub_object()
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to simple_input.o(.rodata._ZTV11SimpleInput) for vtable for SimpleInput
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to init.o(.text._Z11setRegisterIVjEvPT_jj) for void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    simple_input.o(.ARM.exidx.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    simple_input.o(.ARM.exidx.text._ZN11SimpleInput8isActiveEv) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for [Anonymous Symbol]
    simple_input.o(.ARM.exidx.text._ZN11SimpleInput11isNotActiveEv) refers to simple_input.o(.text._ZN11SimpleInput11isNotActiveEv) for [Anonymous Symbol]
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) for SimpleInput::SimpleInput__sub_object(GPIO_TypeDef*, unsigned char)
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to simple_input.o(.rodata._ZTV18SimpleInputDelayed) for vtable for SimpleInputDelayed
    simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for SimpleInput::isActive()
    simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) for [Anonymous Symbol]
    simple_input.o(.text._ZThn32_N18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) for SimpleInputDelayed::update1ms()
    simple_input.o(.ARM.exidx.text._ZThn32_N18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZThn32_N18SimpleInputDelayed9update1msEv) for [Anonymous Symbol]
    simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed8isActiveEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for [Anonymous Symbol]
    simple_input.o(.text._ZThn16_N18SimpleInputDelayed8isActiveEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    simple_input.o(.ARM.exidx.text._ZThn16_N18SimpleInputDelayed8isActiveEv) refers to simple_input.o(.text._ZThn16_N18SimpleInputDelayed8isActiveEv) for [Anonymous Symbol]
    simple_input.o(.rodata._ZTV11SimpleInput) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for SimpleInput::isActive()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) for SimpleInputDelayed::update1ms()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZThn16_N18SimpleInputDelayed8isActiveEv) for non-virtual thunk to SimpleInputDelayed::isActive()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZThn32_N18SimpleInputDelayed9update1msEv) for non-virtual thunk to SimpleInputDelayed::update1ms()
    switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) refers to switch_delay.o(.rodata._ZTV11SwitchDelay) for vtable for SwitchDelay
    switch_delay.o(.ARM.exidx.text._ZN11SwitchDelayC2EP7ISwitcht) refers to switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) for [Anonymous Symbol]
    switch_delay.o(.text._ZN11SwitchDelay9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay9update1msEv) refers to switch_delay.o(.text._ZN11SwitchDelay9update1msEv) for [Anonymous Symbol]
    switch_delay.o(.text._ZThn16_N11SwitchDelay9update1msEv) refers to switch_delay.o(.text._ZN11SwitchDelay9update1msEv) for SwitchDelay::update1ms()
    switch_delay.o(.ARM.exidx.text._ZThn16_N11SwitchDelay9update1msEv) refers to switch_delay.o(.text._ZThn16_N11SwitchDelay9update1msEv) for [Anonymous Symbol]
    switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay7startedEv) refers to switch_delay.o(.text._ZN11SwitchDelay7startedEv) for [Anonymous Symbol]
    switch_delay.o(.rodata._ZTV11SwitchDelay) refers to switch_delay.o(.text._ZN11SwitchDelay7startedEv) for SwitchDelay::started()
    switch_delay.o(.rodata._ZTV11SwitchDelay) refers to switch_delay.o(.text._ZN11SwitchDelay9update1msEv) for SwitchDelay::update1ms()
    switch_delay.o(.rodata._ZTV11SwitchDelay) refers to switch_delay.o(.text._ZThn16_N11SwitchDelay9update1msEv) for non-virtual thunk to SwitchDelay::update1ms()
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseC2E7IMPULSE) refers to rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE) for [Anonymous Symbol]
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3setEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for [Anonymous Symbol]
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3getEv) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for [Anonymous Symbol]
    rf_impulse.o(.text._ZN9RFimpulseaSEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseaSEb) refers to rf_impulse.o(.text._ZN9RFimpulseaSEb) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimerC2Ej) refers to common_timer.o(.rodata._ZTV11CommonTimer) for vtable for CommonTimer
    common_timer.o(.ARM.exidx.text._ZN11CommonTimerC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6updateEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6updateEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer8finishedEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer9getPeriodEv) refers to common_timer.o(.text._ZN11CommonTimer9getPeriodEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer9setPeriodEj) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer14getCurrentTimeEv) refers to common_timer.o(.text._ZN11CommonTimer14getCurrentTimeEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer14setCurrentTimeEj) refers to common_timer.o(.text._ZN11CommonTimer14setCurrentTimeEj) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer5startEv) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer5pauseEv) refers to common_timer.o(.text._ZN11CommonTimer5pauseEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer4stopEv) refers to common_timer.o(.text._ZN11CommonTimer5pauseEv) for CommonTimer::pause()
    common_timer.o(.text._ZN11CommonTimer4stopEv) refers to common_timer.o(.text._ZN11CommonTimer5resetEv) for CommonTimer::reset()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer4stopEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer5resetEv) refers to common_timer.o(.text._ZN11CommonTimer5resetEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer15prepareAndStartEv) refers to common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6finishEv) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6finishEv) refers to common_timer.o(.text._ZN11CommonTimer6finishEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer8setStartEb) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    common_timer.o(.text._ZN11CommonTimer8setStartEb) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer8setStartEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimeraSEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    common_timer.o(.ARM.exidx.text._ZN11CommonTimeraSEb) refers to common_timer.o(.text._ZN11CommonTimeraSEb) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer7startedEv) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer10notStartedEv) refers to common_timer.o(.text._ZN11CommonTimer10notStartedEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer11notFinishedEv) refers to common_timer.o(.text._ZN11CommonTimer11notFinishedEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer15finishedImpulseEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer15finishedImpulseEv) refers to common_timer.o(.text._ZN11CommonTimer15finishedImpulseEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6inWorkEv) refers to common_timer.o(.text._ZN11CommonTimer11notFinishedEv) for CommonTimer::notFinished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6inWorkEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6isFreeEv) refers to common_timer.o(.text._ZN11CommonTimer10notStartedEv) for CommonTimer::notStarted()
    common_timer.o(.text._ZN11CommonTimer6isFreeEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6isFreeEv) refers to common_timer.o(.text._ZN11CommonTimer6isFreeEv) for [Anonymous Symbol]
    common_timer.o(.rodata._ZTV11CommonTimer) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    on_delay.o(.text._ZN13OnDelayCommonC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    on_delay.o(.text._ZN13OnDelayCommonC2Ej) refers to on_delay.o(.rodata._ZTV13OnDelayCommon) for vtable for OnDelayCommon
    on_delay.o(.ARM.exidx.text._ZN13OnDelayCommonC2Ej) refers to on_delay.o(.text._ZN13OnDelayCommonC2Ej) for [Anonymous Symbol]
    on_delay.o(.text._ZN13OnDelayCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon6updateEv) refers to on_delay.o(.text._ZN13OnDelayCommon6updateEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN13OnDelayCommon3setEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon3setEb) refers to on_delay.o(.text._ZN13OnDelayCommon3setEb) for [Anonymous Symbol]
    on_delay.o(.text._ZN13OnDelayCommon3getEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon3getEv) refers to on_delay.o(.text._ZN13OnDelayCommon3getEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN13OnDelayCommon5resetEv) refers to common_timer.o(.text._ZN11CommonTimer5resetEv) for CommonTimer::reset()
    on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon5resetEv) refers to on_delay.o(.text._ZN13OnDelayCommon5resetEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelayC2Ej) refers to on_delay.o(.text._ZN13OnDelayCommonC2Ej) for OnDelayCommon::OnDelayCommon__sub_object(unsigned int)
    on_delay.o(.text._ZN7OnDelayC2Ej) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    on_delay.o(.text._ZN7OnDelayC2Ej) refers to on_delay.o(.rodata._ZTV7OnDelay) for vtable for OnDelay
    on_delay.o(.ARM.exidx.text._ZN7OnDelayC2Ej) refers to on_delay.o(.text._ZN7OnDelayC2Ej) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelay9update1msEv) refers to on_delay.o(.text._ZN13OnDelayCommon6updateEv) for OnDelayCommon::update()
    on_delay.o(.ARM.exidx.text._ZN7OnDelay9update1msEv) refers to on_delay.o(.text._ZN7OnDelay9update1msEv) for [Anonymous Symbol]
    on_delay.o(.text._ZThn16_N7OnDelay9update1msEv) refers to on_delay.o(.text._ZN7OnDelay9update1msEv) for OnDelay::update1ms()
    on_delay.o(.ARM.exidx.text._ZThn16_N7OnDelay9update1msEv) refers to on_delay.o(.text._ZThn16_N7OnDelay9update1msEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelayaSEb) refers to on_delay.o(.text._ZN13OnDelayCommon3setEb) for OnDelayCommon::set(bool)
    on_delay.o(.ARM.exidx.text._ZN7OnDelayaSEb) refers to on_delay.o(.text._ZN7OnDelayaSEb) for [Anonymous Symbol]
    on_delay.o(.rodata._ZTV7OnDelay) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    on_delay.o(.rodata._ZTV7OnDelay) refers to on_delay.o(.text._ZN7OnDelay9update1msEv) for OnDelay::update1ms()
    on_delay.o(.rodata._ZTV7OnDelay) refers to on_delay.o(.text._ZThn16_N7OnDelay9update1msEv) for non-virtual thunk to OnDelay::update1ms()
    off_delay.o(.text._ZN14OffDelayCommonC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    off_delay.o(.text._ZN14OffDelayCommonC2Ej) refers to off_delay.o(.rodata._ZTV14OffDelayCommon) for vtable for OffDelayCommon
    off_delay.o(.ARM.exidx.text._ZN14OffDelayCommonC2Ej) refers to off_delay.o(.text._ZN14OffDelayCommonC2Ej) for [Anonymous Symbol]
    off_delay.o(.text._ZN14OffDelayCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    off_delay.o(.text._ZN14OffDelayCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    off_delay.o(.text._ZN14OffDelayCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon6updateEv) refers to off_delay.o(.text._ZN14OffDelayCommon6updateEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN14OffDelayCommon3setEb) refers to common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) for CommonTimer::prepareAndStart()
    off_delay.o(.text._ZN14OffDelayCommon3setEb) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon3setEb) refers to off_delay.o(.text._ZN14OffDelayCommon3setEb) for [Anonymous Symbol]
    off_delay.o(.text._ZN14OffDelayCommon3getEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for CommonTimer::inWork()
    off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon3getEv) refers to off_delay.o(.text._ZN14OffDelayCommon3getEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN14OffDelayCommon5resetEv) refers to common_timer.o(.text._ZN11CommonTimer6finishEv) for CommonTimer::finish()
    off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon5resetEv) refers to off_delay.o(.text._ZN14OffDelayCommon5resetEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelayC2Ej) refers to off_delay.o(.text._ZN14OffDelayCommonC2Ej) for OffDelayCommon::OffDelayCommon__sub_object(unsigned int)
    off_delay.o(.text._ZN8OffDelayC2Ej) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    off_delay.o(.text._ZN8OffDelayC2Ej) refers to off_delay.o(.rodata._ZTV8OffDelay) for vtable for OffDelay
    off_delay.o(.ARM.exidx.text._ZN8OffDelayC2Ej) refers to off_delay.o(.text._ZN8OffDelayC2Ej) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelay9update1msEv) refers to off_delay.o(.text._ZN14OffDelayCommon6updateEv) for OffDelayCommon::update()
    off_delay.o(.ARM.exidx.text._ZN8OffDelay9update1msEv) refers to off_delay.o(.text._ZN8OffDelay9update1msEv) for [Anonymous Symbol]
    off_delay.o(.text._ZThn16_N8OffDelay9update1msEv) refers to off_delay.o(.text._ZN8OffDelay9update1msEv) for OffDelay::update1ms()
    off_delay.o(.ARM.exidx.text._ZThn16_N8OffDelay9update1msEv) refers to off_delay.o(.text._ZThn16_N8OffDelay9update1msEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelayaSEb) refers to off_delay.o(.text._ZN14OffDelayCommon3setEb) for OffDelayCommon::set(bool)
    off_delay.o(.ARM.exidx.text._ZN8OffDelayaSEb) refers to off_delay.o(.text._ZN8OffDelayaSEb) for [Anonymous Symbol]
    off_delay.o(.rodata._ZTV8OffDelay) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    off_delay.o(.rodata._ZTV8OffDelay) refers to off_delay.o(.text._ZN8OffDelay9update1msEv) for OffDelay::update1ms()
    off_delay.o(.rodata._ZTV8OffDelay) refers to off_delay.o(.text._ZThn16_N8OffDelay9update1msEv) for non-virtual thunk to OffDelay::update1ms()
    pulse.o(.text._ZN11PulseCommonC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    pulse.o(.text._ZN11PulseCommonC2Ej) refers to pulse.o(.rodata._ZTV11PulseCommon) for vtable for PulseCommon
    pulse.o(.ARM.exidx.text._ZN11PulseCommonC2Ej) refers to pulse.o(.text._ZN11PulseCommonC2Ej) for [Anonymous Symbol]
    pulse.o(.text._ZN11PulseCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    pulse.o(.text._ZN11PulseCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    pulse.o(.text._ZN11PulseCommon6updateEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    pulse.o(.ARM.exidx.text._ZN11PulseCommon6updateEv) refers to pulse.o(.text._ZN11PulseCommon6updateEv) for [Anonymous Symbol]
    pulse.o(.text._ZN11PulseCommon3setEb) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    pulse.o(.text._ZN11PulseCommon3setEb) refers to common_timer.o(.text._ZN11CommonTimer6isFreeEv) for CommonTimer::isFree()
    pulse.o(.ARM.exidx.text._ZN11PulseCommon3setEb) refers to pulse.o(.text._ZN11PulseCommon3setEb) for [Anonymous Symbol]
    pulse.o(.text._ZN11PulseCommon3getEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for CommonTimer::inWork()
    pulse.o(.ARM.exidx.text._ZN11PulseCommon3getEv) refers to pulse.o(.text._ZN11PulseCommon3getEv) for [Anonymous Symbol]
    pulse.o(.text._ZN11PulseCommon5resetEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    pulse.o(.ARM.exidx.text._ZN11PulseCommon5resetEv) refers to pulse.o(.text._ZN11PulseCommon5resetEv) for [Anonymous Symbol]
    pulse.o(.text._ZN5PulseC2Ej) refers to pulse.o(.text._ZN11PulseCommonC2Ej) for PulseCommon::PulseCommon__sub_object(unsigned int)
    pulse.o(.text._ZN5PulseC2Ej) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    pulse.o(.text._ZN5PulseC2Ej) refers to pulse.o(.rodata._ZTV5Pulse) for vtable for Pulse
    pulse.o(.ARM.exidx.text._ZN5PulseC2Ej) refers to pulse.o(.text._ZN5PulseC2Ej) for [Anonymous Symbol]
    pulse.o(.text._ZN5Pulse9update1msEv) refers to pulse.o(.text._ZN11PulseCommon6updateEv) for PulseCommon::update()
    pulse.o(.ARM.exidx.text._ZN5Pulse9update1msEv) refers to pulse.o(.text._ZN5Pulse9update1msEv) for [Anonymous Symbol]
    pulse.o(.text._ZThn16_N5Pulse9update1msEv) refers to pulse.o(.text._ZN5Pulse9update1msEv) for Pulse::update1ms()
    pulse.o(.ARM.exidx.text._ZThn16_N5Pulse9update1msEv) refers to pulse.o(.text._ZThn16_N5Pulse9update1msEv) for [Anonymous Symbol]
    pulse.o(.text._ZN5PulseaSEb) refers to pulse.o(.text._ZN11PulseCommon3setEb) for PulseCommon::set(bool)
    pulse.o(.ARM.exidx.text._ZN5PulseaSEb) refers to pulse.o(.text._ZN5PulseaSEb) for [Anonymous Symbol]
    pulse.o(.text._ZN14PulseInterraptC2Ej) refers to pulse.o(.text._ZN11PulseCommonC2Ej) for PulseCommon::PulseCommon__sub_object(unsigned int)
    pulse.o(.text._ZN14PulseInterraptC2Ej) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    pulse.o(.ARM.exidx.text._ZN14PulseInterraptC2Ej) refers to pulse.o(.text._ZN14PulseInterraptC2Ej) for [Anonymous Symbol]
    pulse.o(.text._ZN14PulseInterrapt3setEb) refers to pulse.o(.text._ZN11PulseCommon3setEb) for PulseCommon::set(bool)
    pulse.o(.text._ZN14PulseInterrapt3setEb) refers to pulse.o(.text._ZN11PulseCommon5resetEv) for PulseCommon::reset()
    pulse.o(.ARM.exidx.text._ZN14PulseInterrapt3setEb) refers to pulse.o(.text._ZN14PulseInterrapt3setEb) for [Anonymous Symbol]
    pulse.o(.text._ZN14PulseInterraptaSEb) refers to pulse.o(.text._ZN14PulseInterrapt3setEb) for PulseInterrapt::set(bool)
    pulse.o(.ARM.exidx.text._ZN14PulseInterraptaSEb) refers to pulse.o(.text._ZN14PulseInterraptaSEb) for [Anonymous Symbol]
    pulse.o(.rodata._ZTV5Pulse) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    pulse.o(.rodata._ZTV5Pulse) refers to pulse.o(.text._ZN5Pulse9update1msEv) for Pulse::update1ms()
    pulse.o(.rodata._ZTV5Pulse) refers to pulse.o(.text._ZThn16_N5Pulse9update1msEv) for non-virtual thunk to Pulse::update1ms()
    pid.o(.text._ZN6PIDregC2Etfffffffb) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for IUpdatedSomewhere::IUpdatedSomewhere__sub_object()
    pid.o(.text._ZN6PIDregC2Etfffffffb) refers to pid.o(.rodata._ZTV6PIDreg) for vtable for PIDreg
    pid.o(.text._ZN6PIDregC2Etfffffffb) refers to fflt_clz.o(x$fpl$ffltu) for __aeabi_ui2f
    pid.o(.text._ZN6PIDregC2Etfffffffb) refers to pid.o(.text._ZN6PIDreg10updateKoefEv) for PIDreg::updateKoef()
    pid.o(.text._ZN6PIDregC2Etfffffffb) refers to pid.o(.text._ZN6PIDreg5resetEv) for PIDreg::reset()
    pid.o(.ARM.exidx.text._ZN6PIDregC2Etfffffffb) refers to pid.o(.text._ZN6PIDregC2Etfffffffb) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg10updateKoefEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpeq
    pid.o(.text._ZN6PIDreg10updateKoefEv) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    pid.o(.text._ZN6PIDreg10updateKoefEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    pid.o(.text._ZN6PIDreg10updateKoefEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    pid.o(.text._ZN6PIDreg10updateKoefEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    pid.o(.ARM.exidx.text._ZN6PIDreg10updateKoefEv) refers to pid.o(.text._ZN6PIDreg10updateKoefEv) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5resetEv) refers to pid.o(.text._ZN6PIDreg5resetEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg4getTEv) refers to ffix.o(x$fpl$ffix) for __aeabi_f2iz
    pid.o(.ARM.exidx.text._ZN6PIDreg4getTEv) refers to pid.o(.text._ZN6PIDreg4getTEv) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5setPvEf) refers to pid.o(.text._ZN6PIDreg5setPvEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5getPvEv) refers to pid.o(.text._ZN6PIDreg5getPvEv) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5setSpEf) refers to pid.o(.text._ZN6PIDreg5setSpEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5getSpEv) refers to pid.o(.text._ZN6PIDreg5getSpEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg5setKpEf) refers to pid.o(.text._ZN6PIDreg10updateKoefEv) for PIDreg::updateKoef()
    pid.o(.ARM.exidx.text._ZN6PIDreg5setKpEf) refers to pid.o(.text._ZN6PIDreg5setKpEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5getKpEv) refers to pid.o(.text._ZN6PIDreg5getKpEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg5setTiEf) refers to pid.o(.text._ZN6PIDreg10updateKoefEv) for PIDreg::updateKoef()
    pid.o(.ARM.exidx.text._ZN6PIDreg5setTiEf) refers to pid.o(.text._ZN6PIDreg5setTiEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5getTiEv) refers to pid.o(.text._ZN6PIDreg5getTiEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg5setTdEf) refers to pid.o(.text._ZN6PIDreg10updateKoefEv) for PIDreg::updateKoef()
    pid.o(.ARM.exidx.text._ZN6PIDreg5setTdEf) refers to pid.o(.text._ZN6PIDreg5setTdEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5getTdEv) refers to pid.o(.text._ZN6PIDreg5getTdEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg5setDbEf) refers to pid.o(.text._Z3absIfET_S0_) for float abs<float>(float)
    pid.o(.ARM.exidx.text._ZN6PIDreg5setDbEf) refers to pid.o(.text._ZN6PIDreg5setDbEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg5getDbEv) refers to pid.o(.text._ZN6PIDreg5getDbEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg11setUpOutLimEf) refers to pid.o(.text._Z3maxIfET_S0_S0_) for float max<float>(float, float)
    pid.o(.ARM.exidx.text._ZN6PIDreg11setUpOutLimEf) refers to pid.o(.text._ZN6PIDreg11setUpOutLimEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg11getUpOutLimEv) refers to pid.o(.text._ZN6PIDreg11getUpOutLimEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg13setDownOutLimEf) refers to pid.o(.text._Z3minIfET_S0_S0_) for float min<float>(float, float)
    pid.o(.ARM.exidx.text._ZN6PIDreg13setDownOutLimEf) refers to pid.o(.text._ZN6PIDreg13setDownOutLimEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg13getDownOutLimEv) refers to pid.o(.text._ZN6PIDreg13getDownOutLimEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg6setOutEf) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    pid.o(.ARM.exidx.text._ZN6PIDreg6setOutEf) refers to pid.o(.text._ZN6PIDreg6setOutEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg6getOutEv) refers to pid.o(.text._ZN6PIDreg6getOutEv) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg7setAutoEb) refers to pid.o(.text._ZN6PIDreg7setAutoEb) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg6isAUTOEv) refers to pid.o(.text._ZN6PIDreg6isAUTOEv) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg10setInverseEb) refers to pid.o(.text._ZN6PIDreg10setInverseEb) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg9isInverseEv) refers to pid.o(.text._ZN6PIDreg9isInverseEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDreg15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    pid.o(.text._ZN6PIDreg15updateSomewhereEv) refers to pid.o(.text._Z3absIfET_S0_) for float abs<float>(float)
    pid.o(.text._ZN6PIDreg15updateSomewhereEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpge
    pid.o(.text._ZN6PIDreg15updateSomewhereEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    pid.o(.text._ZN6PIDreg15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    pid.o(.text._ZN6PIDreg15updateSomewhereEv) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    pid.o(.ARM.exidx.text._ZN6PIDreg15updateSomewhereEv) refers to pid.o(.text._ZN6PIDreg15updateSomewhereEv) for [Anonymous Symbol]
    pid.o(.text._ZN6PIDregaSEf) refers to pid.o(.text._ZN6PIDreg5setPvEf) for PIDreg::setPv(float)
    pid.o(.ARM.exidx.text._ZN6PIDregaSEf) refers to pid.o(.text._ZN6PIDregaSEf) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg8getPvRefEv) refers to pid.o(.text._ZN6PIDreg8getPvRefEv) for [Anonymous Symbol]
    pid.o(.ARM.exidx.text._ZN6PIDreg9getOutRefEv) refers to pid.o(.text._ZN6PIDreg9getOutRefEv) for [Anonymous Symbol]
    pid.o(.rodata._ZTV6PIDreg) refers to pid.o(.text._ZN6PIDreg15updateSomewhereEv) for PIDreg::updateSomewhere()
    ramp.o(.text._ZN4RampC2Ejffff) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    ramp.o(.text._ZN4RampC2Ejffff) refers to ramp.o(.rodata._ZTV4Ramp) for vtable for Ramp
    ramp.o(.text._ZN4RampC2Ejffff) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmple
    ramp.o(.text._ZN4RampC2Ejffff) refers to test_task.o(.text._Z6toggleIfEvPT_S1_) for void toggle<float>(float*, float*)
    ramp.o(.text._ZN4RampC2Ejffff) refers to ramp.o(.text._ZN4Ramp9setLimMaxEf) for Ramp::setLimMax(float)
    ramp.o(.text._ZN4RampC2Ejffff) refers to ramp.o(.text._ZN4Ramp16setFullRangeTimeEj) for Ramp::setFullRangeTime(unsigned int)
    ramp.o(.ARM.exidx.text._ZN4RampC2Ejffff) refers to ramp.o(.text._ZN4RampC2Ejffff) for [Anonymous Symbol]
    ramp.o(.text._ZN4Ramp9setLimMaxEf) refers to pid.o(.text._Z3maxIfET_S0_S0_) for float max<float>(float, float)
    ramp.o(.ARM.exidx.text._ZN4Ramp9setLimMaxEf) refers to ramp.o(.text._ZN4Ramp9setLimMaxEf) for [Anonymous Symbol]
    ramp.o(.text._ZN4Ramp16setFullRangeTimeEj) refers to ramp.o(.text._ZN4Ramp11getOutRangeEv) for Ramp::getOutRange()
    ramp.o(.text._ZN4Ramp16setFullRangeTimeEj) refers to fflt_clz.o(x$fpl$ffltu) for __aeabi_ui2f
    ramp.o(.text._ZN4Ramp16setFullRangeTimeEj) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    ramp.o(.ARM.exidx.text._ZN4Ramp16setFullRangeTimeEj) refers to ramp.o(.text._ZN4Ramp16setFullRangeTimeEj) for [Anonymous Symbol]
    ramp.o(.text._ZN4RampC2Ejff) refers to ramp.o(.text._ZN4RampC2Ejffff) for Ramp::Ramp__sub_object(unsigned int, float, float, float, float)
    ramp.o(.ARM.exidx.text._ZN4RampC2Ejff) refers to ramp.o(.text._ZN4RampC2Ejff) for [Anonymous Symbol]
    ramp.o(.text._ZN4RampC2Ej) refers to ramp.o(.text._ZN4RampC2Ejffff) for Ramp::Ramp__sub_object(unsigned int, float, float, float, float)
    ramp.o(.ARM.exidx.text._ZN4RampC2Ej) refers to ramp.o(.text._ZN4RampC2Ej) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text._ZN4Ramp9getOutMinEv) refers to ramp.o(.text._ZN4Ramp9getOutMinEv) for [Anonymous Symbol]
    ramp.o(.text._ZN4Ramp11getOutRangeEv) refers to ramp.o(.text._Z8getRangeIfET_PKS0_) for float getRange<float>(float const*)
    ramp.o(.ARM.exidx.text._ZN4Ramp11getOutRangeEv) refers to ramp.o(.text._ZN4Ramp11getOutRangeEv) for [Anonymous Symbol]
    ramp.o(.text._ZN4Ramp9update1msEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpeq
    ramp.o(.text._ZN4Ramp9update1msEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    ramp.o(.text._ZN4Ramp9update1msEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    ramp.o(.text._ZN4Ramp9update1msEv) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    ramp.o(.ARM.exidx.text._ZN4Ramp9update1msEv) refers to ramp.o(.text._ZN4Ramp9update1msEv) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text._ZN4Ramp3getEv) refers to ramp.o(.text._ZN4Ramp3getEv) for [Anonymous Symbol]
    ramp.o(.text._ZN4Ramp3setEf) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    ramp.o(.ARM.exidx.text._ZN4Ramp3setEf) refers to ramp.o(.text._ZN4Ramp3setEf) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text._ZN4Ramp16getFullRangeTimeEv) refers to ramp.o(.text._ZN4Ramp16getFullRangeTimeEv) for [Anonymous Symbol]
    ramp.o(.text._ZN4Ramp9setLimMinEf) refers to pid.o(.text._Z3minIfET_S0_S0_) for float min<float>(float, float)
    ramp.o(.ARM.exidx.text._ZN4Ramp9setLimMinEf) refers to ramp.o(.text._ZN4Ramp9setLimMinEf) for [Anonymous Symbol]
    ramp.o(.text._ZN4RampaSEf) refers to ramp.o(.text._ZN4Ramp3setEf) for Ramp::set(float)
    ramp.o(.ARM.exidx.text._ZN4RampaSEf) refers to ramp.o(.text._ZN4RampaSEf) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text._ZN4Ramp8getSpRefEv) refers to ramp.o(.text._ZN4Ramp8getSpRefEv) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text._ZN4Ramp9getOutRefEv) refers to ramp.o(.text._ZN4Ramp9getOutRefEv) for [Anonymous Symbol]
    ramp.o(.rodata._ZTV4Ramp) refers to ramp.o(.text._ZN4Ramp9update1msEv) for Ramp::update1ms()
    three_pos.o(.text._ZN11ThreePosRegC2Efffttb) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    three_pos.o(.text._ZN11ThreePosRegC2Efffttb) refers to three_pos.o(.rodata._ZTV11ThreePosReg) for vtable for ThreePosReg
    three_pos.o(.text._ZN11ThreePosRegC2Efffttb) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    three_pos.o(.text._ZN11ThreePosRegC2Efffttb) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer(unsigned int)
    three_pos.o(.text._ZN11ThreePosRegC2Efffttb) refers to three_pos.o(.text._ZN11ThreePosReg12setPulseGistEf) for ThreePosReg::setPulseGist(float)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosRegC2Efffttb) refers to three_pos.o(.text._ZN11ThreePosRegC2Efffttb) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg12setPulseGistEf) refers to pid.o(.text._Z3absIfET_S0_) for float abs<float>(float)
    three_pos.o(.text._ZN11ThreePosReg12setPulseGistEf) refers to pid.o(.text._Z3maxIfET_S0_S0_) for float max<float>(float, float)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12setPulseGistEf) refers to three_pos.o(.text._ZN11ThreePosReg12setPulseGistEf) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosRegD2Ev) refers to three_pos.o(.rodata._ZTV11ThreePosReg) for vtable for ThreePosReg
    three_pos.o(.text._ZN11ThreePosRegD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosRegD2Ev) refers to three_pos.o(.text._ZN11ThreePosRegD2Ev) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg3setEf) refers to three_pos.o(.text._ZN11ThreePosReg3setEf) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosRegaSEf) refers to three_pos.o(.text._ZN11ThreePosReg3setEf) for ThreePosReg::set(float)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosRegaSEf) refers to three_pos.o(.text._ZN11ThreePosRegaSEf) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg5setSpEf) refers to three_pos.o(.text._ZN11ThreePosReg5setSpEf) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg5getSpEv) refers to three_pos.o(.text._ZN11ThreePosReg5getSpEv) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg11setZeroGistEf) refers to pid.o(.text._Z3absIfET_S0_) for float abs<float>(float)
    three_pos.o(.text._ZN11ThreePosReg11setZeroGistEf) refers to pid.o(.text._Z3minIfET_S0_S0_) for float min<float>(float, float)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg11setZeroGistEf) refers to three_pos.o(.text._ZN11ThreePosReg11setZeroGistEf) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg11getZeroGistEv) refers to three_pos.o(.text._ZN11ThreePosReg11getZeroGistEv) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12getPulseGistEv) refers to three_pos.o(.text._ZN11ThreePosReg12getPulseGistEv) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg12setPauseTimeEt) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for CommonTimer::setPeriod(unsigned int)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12setPauseTimeEt) refers to three_pos.o(.text._ZN11ThreePosReg12setPauseTimeEt) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg12getPauseTimeEv) refers to common_timer.o(.text._ZN11CommonTimer9getPeriodEv) for CommonTimer::getPeriod()
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12getPauseTimeEv) refers to three_pos.o(.text._ZN11ThreePosReg12getPauseTimeEv) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg12setPulseTimeEt) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for CommonTimer::setPeriod(unsigned int)
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12setPulseTimeEt) refers to three_pos.o(.text._ZN11ThreePosReg12setPulseTimeEt) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg12getPulseTimeEv) refers to common_timer.o(.text._ZN11CommonTimer9getPeriodEv) for CommonTimer::getPeriod()
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12getPulseTimeEv) refers to three_pos.o(.text._ZN11ThreePosReg12getPulseTimeEv) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10setReverseEb) refers to three_pos.o(.text._ZN11ThreePosReg10setReverseEb) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10getReverseEv) refers to three_pos.o(.text._ZN11ThreePosReg10getReverseEv) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg7getOut1Ev) refers to three_pos.o(.text._ZN11ThreePosReg7getOut1Ev) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg7getOut2Ev) refers to three_pos.o(.text._ZN11ThreePosReg7getOut2Ev) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg17impulseCycleEndedEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg17impulseCycleEndedEv) refers to three_pos.o(.text._ZN11ThreePosReg17impulseCycleEndedEv) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg21halfImpulseCycleEndedEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    three_pos.o(.text._ZN11ThreePosReg21halfImpulseCycleEndedEv) refers to common_timer.o(.text._ZN11CommonTimer10notStartedEv) for CommonTimer::notStarted()
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg21halfImpulseCycleEndedEv) refers to three_pos.o(.text._ZN11ThreePosReg21halfImpulseCycleEndedEv) for [Anonymous Symbol]
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer11notFinishedEv) for CommonTimer::notFinished()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimeraSEb) for CommonTimer::operator=(bool)
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to three_pos.o(.text._ZN11ThreePosReg17impulseCycleEndedEv) for ThreePosReg::impulseCycleEnded()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to three_pos.o(.text._ZN11ThreePosReg21halfImpulseCycleEndedEv) for ThreePosReg::halfImpulseCycleEnded()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmplt
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to pid.o(.text._Z3absIfET_S0_) for float abs<float>(float)
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for CommonTimer::inWork()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6finishEv) for CommonTimer::finish()
    three_pos.o(.text._ZN11ThreePosReg9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6isFreeEv) for CommonTimer::isFree()
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg9update1msEv) refers to three_pos.o(.text._ZN11ThreePosReg9update1msEv) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg8getInRefEv) refers to three_pos.o(.text._ZN11ThreePosReg8getInRefEv) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10getOut1RefEv) refers to three_pos.o(.text._ZN11ThreePosReg10getOut1RefEv) for [Anonymous Symbol]
    three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10getOut2RefEv) refers to three_pos.o(.text._ZN11ThreePosReg10getOut2RefEv) for [Anonymous Symbol]
    three_pos.o(.rodata._ZTV11ThreePosReg) refers to three_pos.o(.text._ZN11ThreePosReg9update1msEv) for ThreePosReg::update1ms()
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommonC2Efb) refers to two_pos.o(.text._ZN12TwoPosCommonC2Efb) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon3setEf) refers to two_pos.o(.text._ZN12TwoPosCommon3setEf) for [Anonymous Symbol]
    two_pos.o(.text._ZN12TwoPosCommon3getEv) refers to fflt_clz.o(x$fpl$ffltu) for __aeabi_ui2f
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon3getEv) refers to two_pos.o(.text._ZN12TwoPosCommon3getEv) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon5setSpEf) refers to two_pos.o(.text._ZN12TwoPosCommon5setSpEf) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon5getSpEv) refers to two_pos.o(.text._ZN12TwoPosCommon5getSpEv) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon10setReverseEb) refers to two_pos.o(.text._ZN12TwoPosCommon10setReverseEb) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon10getReverseEv) refers to two_pos.o(.text._ZN12TwoPosCommon10getReverseEv) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon8getInRefEv) refers to two_pos.o(.text._ZN12TwoPosCommon8getInRefEv) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon9getOutRefEv) refers to two_pos.o(.text._ZN12TwoPosCommon9getOutRefEv) for [Anonymous Symbol]
    two_pos.o(.text._ZN10TwoPosGistC2Efffb) refers to two_pos.o(.text._ZN12TwoPosCommonC2Efb) for TwoPosCommon::TwoPosCommon__sub_object(float, bool)
    two_pos.o(.text._ZN10TwoPosGistC2Efffb) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for IUpdatedSomewhere::IUpdatedSomewhere__sub_object()
    two_pos.o(.text._ZN10TwoPosGistC2Efffb) refers to two_pos.o(.rodata._ZTV10TwoPosGist) for vtable for TwoPosGist
    two_pos.o(.text._ZN10TwoPosGistC2Efffb) refers to two_pos.o(.text._ZN10TwoPosGist10setLowGistEf) for TwoPosGist::setLowGist(float)
    two_pos.o(.text._ZN10TwoPosGistC2Efffb) refers to two_pos.o(.text._ZN10TwoPosGist11setHighGistEf) for TwoPosGist::setHighGist(float)
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGistC2Efffb) refers to two_pos.o(.text._ZN10TwoPosGistC2Efffb) for [Anonymous Symbol]
    two_pos.o(.text._ZN10TwoPosGist10setLowGistEf) refers to pid.o(.text._Z3maxIfET_S0_S0_) for float max<float>(float, float)
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGist10setLowGistEf) refers to two_pos.o(.text._ZN10TwoPosGist10setLowGistEf) for [Anonymous Symbol]
    two_pos.o(.text._ZN10TwoPosGist11setHighGistEf) refers to pid.o(.text._Z3maxIfET_S0_S0_) for float max<float>(float, float)
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGist11setHighGistEf) refers to two_pos.o(.text._ZN10TwoPosGist11setHighGistEf) for [Anonymous Symbol]
    two_pos.o(.text._ZN10TwoPosGist3setEf) refers to two_pos.o(.text._ZN12TwoPosCommon3setEf) for TwoPosCommon::set(float)
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGist3setEf) refers to two_pos.o(.text._ZN10TwoPosGist3setEf) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGist10getLowGistEv) refers to two_pos.o(.text._ZN10TwoPosGist10getLowGistEv) for [Anonymous Symbol]
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGist11getHighGistEv) refers to two_pos.o(.text._ZN10TwoPosGist11getHighGistEv) for [Anonymous Symbol]
    two_pos.o(.text._ZN10TwoPosGist15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    two_pos.o(.text._ZN10TwoPosGist15updateSomewhereEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpge
    two_pos.o(.text._ZN10TwoPosGist15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGist15updateSomewhereEv) refers to two_pos.o(.text._ZN10TwoPosGist15updateSomewhereEv) for [Anonymous Symbol]
    two_pos.o(.text._ZN10TwoPosGistaSEf) refers to two_pos.o(.text._ZN10TwoPosGist3setEf) for TwoPosGist::set(float)
    two_pos.o(.ARM.exidx.text._ZN10TwoPosGistaSEf) refers to two_pos.o(.text._ZN10TwoPosGistaSEf) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTimC2Efttb) refers to two_pos.o(.text._ZN12TwoPosCommonC2Efb) for TwoPosCommon::TwoPosCommon__sub_object(float, bool)
    two_pos.o(.text._ZN9TwoPosTimC2Efttb) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    two_pos.o(.text._ZN9TwoPosTimC2Efttb) refers to two_pos.o(.rodata._ZTV9TwoPosTim) for vtable for TwoPosTim
    two_pos.o(.text._ZN9TwoPosTimC2Efttb) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    two_pos.o(.text._ZN9TwoPosTimC2Efttb) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer(unsigned int)
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTimC2Efttb) refers to two_pos.o(.text._ZN9TwoPosTimC2Efttb) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTimD2Ev) refers to two_pos.o(.rodata._ZTV9TwoPosTim) for vtable for TwoPosTim
    two_pos.o(.text._ZN9TwoPosTimD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTimD2Ev) refers to two_pos.o(.text._ZN9TwoPosTimD2Ev) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTim10setLowTimeEt) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for CommonTimer::setPeriod(unsigned int)
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTim10setLowTimeEt) refers to two_pos.o(.text._ZN9TwoPosTim10setLowTimeEt) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTim10getLowTimeEv) refers to common_timer.o(.text._ZN11CommonTimer9getPeriodEv) for CommonTimer::getPeriod()
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTim10getLowTimeEv) refers to two_pos.o(.text._ZN9TwoPosTim10getLowTimeEv) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTim11setHighTimeEt) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for CommonTimer::setPeriod(unsigned int)
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTim11setHighTimeEt) refers to two_pos.o(.text._ZN9TwoPosTim11setHighTimeEt) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTim11getHighTimeEv) refers to common_timer.o(.text._ZN11CommonTimer9getPeriodEv) for CommonTimer::getPeriod()
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTim11getHighTimeEv) refers to two_pos.o(.text._ZN9TwoPosTim11getHighTimeEv) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTim9update1msEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmplt
    two_pos.o(.text._ZN9TwoPosTim9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    two_pos.o(.text._ZN9TwoPosTim9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    two_pos.o(.text._ZN9TwoPosTim9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTim9update1msEv) refers to two_pos.o(.text._ZN9TwoPosTim9update1msEv) for [Anonymous Symbol]
    two_pos.o(.text._ZN9TwoPosTimaSEf) refers to two_pos.o(.text._ZN12TwoPosCommon3setEf) for TwoPosCommon::set(float)
    two_pos.o(.ARM.exidx.text._ZN9TwoPosTimaSEf) refers to two_pos.o(.text._ZN9TwoPosTimaSEf) for [Anonymous Symbol]
    two_pos.o(.rodata._ZTV10TwoPosGist) refers to two_pos.o(.text._ZN10TwoPosGist15updateSomewhereEv) for TwoPosGist::updateSomewhere()
    two_pos.o(.rodata._ZTV9TwoPosTim) refers to two_pos.o(.text._ZN9TwoPosTim9update1msEv) for TwoPosTim::update1ms()
    sequence.o(.text._ZN8SequenceC2EPhh) refers to rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE) for RFimpulse::RFimpulse__sub_object(IMPULSE)
    sequence.o(.ARM.exidx.text._ZN8SequenceC2EPhh) refers to sequence.o(.text._ZN8SequenceC2EPhh) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence8isMyStepEv) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence5resetEv) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    sequence.o(.ARM.exidx.text._ZN8Sequence5resetEv) refers to sequence.o(.text._ZN8Sequence5resetEv) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence5startEb) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for Sequence::isMyStep()
    sequence.o(.ARM.exidx.text._ZN8Sequence5startEb) refers to sequence.o(.text._ZN8Sequence5startEb) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence4lockEb) refers to sequence.o(.text._ZN8Sequence4lockEb) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence6finishEb) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for Sequence::isMyStep()
    sequence.o(.text._ZN8Sequence6finishEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    sequence.o(.ARM.exidx.text._ZN8Sequence6finishEb) refers to sequence.o(.text._ZN8Sequence6finishEb) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for Sequence::isMyStep()
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence5startEb) for Sequence::start(bool)
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence4lockEb) for Sequence::lock(bool)
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence6finishEb) for Sequence::finish(bool)
    sequence.o(.ARM.exidx.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence6slfSetEbbb) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence7startedEv) refers to sequence.o(.text._ZN8Sequence7startedEv) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence6lockedEv) refers to sequence.o(.text._ZN8Sequence6lockedEv) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence8finishedEv) refers to sequence.o(.text._ZN8Sequence8finishedEv) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence15finishedImpulseEv) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for RFimpulse::get()
    sequence.o(.ARM.exidx.text._ZN8Sequence15finishedImpulseEv) refers to sequence.o(.text._ZN8Sequence15finishedImpulseEv) for [Anonymous Symbol]
    sequence.o(.text._ZN15SequenceDelayedC2EPhhj) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    sequence.o(.text._ZN15SequenceDelayedC2EPhhj) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence__sub_object(unsigned char*, unsigned char)
    sequence.o(.text._ZN15SequenceDelayedC2EPhhj) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    sequence.o(.text._ZN15SequenceDelayedC2EPhhj) refers to sequence.o(.rodata._ZTV15SequenceDelayed) for vtable for SequenceDelayed
    sequence.o(.ARM.exidx.text._ZN15SequenceDelayedC2EPhhj) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for [Anonymous Symbol]
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN8Sequence6lockedEv) for Sequence::locked()
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN8Sequence7startedEv) for Sequence::started()
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN8Sequence6finishEb) for Sequence::finish(bool)
    sequence.o(.ARM.exidx.text._ZN15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN15SequenceDelayed9update1msEv) for [Anonymous Symbol]
    sequence.o(.text._ZThn28_N15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN15SequenceDelayed9update1msEv) for SequenceDelayed::update1ms()
    sequence.o(.ARM.exidx.text._ZThn28_N15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZThn28_N15SequenceDelayed9update1msEv) for [Anonymous Symbol]
    sequence.o(.rodata._ZTV15SequenceDelayed) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    sequence.o(.rodata._ZTV15SequenceDelayed) refers to sequence.o(.text._ZN15SequenceDelayed9update1msEv) for SequenceDelayed::update1ms()
    sequence.o(.rodata._ZTV15SequenceDelayed) refers to sequence.o(.text._ZThn28_N15SequenceDelayed9update1msEv) for non-virtual thunk to SequenceDelayed::update1ms()
    monitor.o(.text._ZN7MonitorC2Eff) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    monitor.o(.text._ZN7MonitorC2Eff) refers to monitor.o(.rodata._ZTV7Monitor) for vtable for Monitor
    monitor.o(.text._ZN7MonitorC2Eff) refers to monitor.o(.text._ZN7Monitor11setValueMaxEf) for Monitor::setValueMax(float)
    monitor.o(.text._ZN7MonitorC2Eff) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    monitor.o(.text._ZN7MonitorC2Eff) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer(unsigned int)
    monitor.o(.ARM.exidx.text._ZN7MonitorC2Eff) refers to monitor.o(.text._ZN7MonitorC2Eff) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor11setValueMaxEf) refers to pid.o(.text._Z3maxIfET_S0_S0_) for float max<float>(float, float)
    monitor.o(.ARM.exidx.text._ZN7Monitor11setValueMaxEf) refers to monitor.o(.text._ZN7Monitor11setValueMaxEf) for [Anonymous Symbol]
    monitor.o(.text._ZN7MonitorD2Ev) refers to monitor.o(.rodata._ZTV7Monitor) for vtable for Monitor
    monitor.o(.text._ZN7MonitorD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    monitor.o(.ARM.exidx.text._ZN7MonitorD2Ev) refers to monitor.o(.text._ZN7MonitorD2Ev) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor11setValueMinEf) refers to pid.o(.text._Z3minIfET_S0_S0_) for float min<float>(float, float)
    monitor.o(.ARM.exidx.text._ZN7Monitor11setValueMinEf) refers to monitor.o(.text._ZN7Monitor11setValueMinEf) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor9update1msEv) refers to ramp.o(.text._Z8getRangeIfET_PKS0_) for float getRange<float>(float const*)
    monitor.o(.text._ZN7Monitor9update1msEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    monitor.o(.text._ZN7Monitor9update1msEv) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    monitor.o(.text._ZN7Monitor9update1msEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmple
    monitor.o(.text._ZN7Monitor9update1msEv) refers to common_timer.o(.text._ZN11CommonTimeraSEb) for CommonTimer::operator=(bool)
    monitor.o(.text._ZN7Monitor9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    monitor.o(.ARM.exidx.text._ZN7Monitor9update1msEv) refers to monitor.o(.text._ZN7Monitor9update1msEv) for [Anonymous Symbol]
    monitor.o(.ARM.exidx.text._ZN7Monitor3getEv) refers to monitor.o(.text._ZN7Monitor3getEv) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor3setEf) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    monitor.o(.ARM.exidx.text._ZN7Monitor3setEf) refers to monitor.o(.text._ZN7Monitor3setEf) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor11setTresholdE9TRES_TYPEt) refers to fflt_clz.o(x$fpl$ffltu) for __aeabi_ui2f
    monitor.o(.ARM.exidx.text._ZN7Monitor11setTresholdE9TRES_TYPEt) refers to monitor.o(.text._ZN7Monitor11setTresholdE9TRES_TYPEt) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor12setTresDelayE9TRES_TYPEt) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for CommonTimer::setPeriod(unsigned int)
    monitor.o(.ARM.exidx.text._ZN7Monitor12setTresDelayE9TRES_TYPEt) refers to monitor.o(.text._ZN7Monitor12setTresDelayE9TRES_TYPEt) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor11isHighAlarmEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    monitor.o(.ARM.exidx.text._ZN7Monitor11isHighAlarmEv) refers to monitor.o(.text._ZN7Monitor11isHighAlarmEv) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor10isHighWarnEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    monitor.o(.ARM.exidx.text._ZN7Monitor10isHighWarnEv) refers to monitor.o(.text._ZN7Monitor10isHighWarnEv) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor9isLowWarnEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    monitor.o(.ARM.exidx.text._ZN7Monitor9isLowWarnEv) refers to monitor.o(.text._ZN7Monitor9isLowWarnEv) for [Anonymous Symbol]
    monitor.o(.text._ZN7Monitor10isLowAlarmEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    monitor.o(.ARM.exidx.text._ZN7Monitor10isLowAlarmEv) refers to monitor.o(.text._ZN7Monitor10isLowAlarmEv) for [Anonymous Symbol]
    monitor.o(.text._ZN7MonitoraSEf) refers to monitor.o(.text._ZN7Monitor3setEf) for Monitor::set(float)
    monitor.o(.ARM.exidx.text._ZN7MonitoraSEf) refers to monitor.o(.text._ZN7MonitoraSEf) for [Anonymous Symbol]
    monitor.o(.ARM.exidx.text._ZN7Monitor8getInRefEv) refers to monitor.o(.text._ZN7Monitor8getInRefEv) for [Anonymous Symbol]
    monitor.o(.rodata._ZTV7Monitor) refers to monitor.o(.text._ZN7Monitor9update1msEv) for Monitor::update1ms()
    moving_avg.o(.text._ZN6MovAvgC2Eh) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for IUpdatedSomewhere::IUpdatedSomewhere__sub_object()
    moving_avg.o(.text._ZN6MovAvgC2Eh) refers to moving_avg.o(.rodata._ZTV6MovAvg) for vtable for MovAvg
    moving_avg.o(.text._ZN6MovAvgC2Eh) refers to moving_avg.o(.text._Z3maxIhET_S0_S0_) for unsigned char max<unsigned char>(unsigned char, unsigned char)
    moving_avg.o(.text._ZN6MovAvgC2Eh) refers to cxa_aux_runtime.cpp.o(.text.__cxa_throw_bad_array_new_length) for __cxa_throw_bad_array_new_length
    moving_avg.o(.text._ZN6MovAvgC2Eh) refers to new.cpp.o(.text._Znaj) for operator new[](unsigned int)
    moving_avg.o(.text._ZN6MovAvgC2Eh) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    moving_avg.o(.ARM.exidx.text._ZN6MovAvgC2Eh) refers to moving_avg.o(.text._ZN6MovAvgC2Eh) for [Anonymous Symbol]
    moving_avg.o(.text._ZN6MovAvgD2Ev) refers to moving_avg.o(.rodata._ZTV6MovAvg) for vtable for MovAvg
    moving_avg.o(.text._ZN6MovAvgD2Ev) refers to new.cpp.o(.text._ZdaPv) for operator delete[](void*)
    moving_avg.o(.ARM.exidx.text._ZN6MovAvgD2Ev) refers to moving_avg.o(.text._ZN6MovAvgD2Ev) for [Anonymous Symbol]
    moving_avg.o(.ARM.exidx.text._ZN6MovAvg3setEf) refers to moving_avg.o(.text._ZN6MovAvg3setEf) for [Anonymous Symbol]
    moving_avg.o(.ARM.exidx.text._ZN6MovAvg3getEv) refers to moving_avg.o(.text._ZN6MovAvg3getEv) for [Anonymous Symbol]
    moving_avg.o(.text._ZN6MovAvg15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    moving_avg.o(.text._ZN6MovAvg15updateSomewhereEv) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    moving_avg.o(.text._ZN6MovAvg15updateSomewhereEv) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    moving_avg.o(.ARM.exidx.text._ZN6MovAvg15updateSomewhereEv) refers to moving_avg.o(.text._ZN6MovAvg15updateSomewhereEv) for [Anonymous Symbol]
    moving_avg.o(.text._ZN6MovAvgaSEf) refers to moving_avg.o(.text._ZN6MovAvg3setEf) for MovAvg::set(float)
    moving_avg.o(.ARM.exidx.text._ZN6MovAvgaSEf) refers to moving_avg.o(.text._ZN6MovAvgaSEf) for [Anonymous Symbol]
    moving_avg.o(.ARM.exidx.text._ZN6MovAvg8getInRefEv) refers to moving_avg.o(.text._ZN6MovAvg8getInRefEv) for [Anonymous Symbol]
    moving_avg.o(.ARM.exidx.text._ZN6MovAvg9getOutRefEv) refers to moving_avg.o(.text._ZN6MovAvg9getOutRefEv) for [Anonymous Symbol]
    moving_avg.o(.rodata._ZTV6MovAvg) refers to moving_avg.o(.text._ZN6MovAvg15updateSomewhereEv) for MovAvg::updateSomewhere()
    counter.o(.text._ZN7CounterC2E7IMPULSEj) refers to rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE) for RFimpulse::RFimpulse__sub_object(IMPULSE)
    counter.o(.ARM.exidx.text._ZN7CounterC2E7IMPULSEj) refers to counter.o(.text._ZN7CounterC2E7IMPULSEj) for [Anonymous Symbol]
    counter.o(.text._ZN7Counter3addEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    counter.o(.text._ZN7Counter3addEb) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for RFimpulse::get()
    counter.o(.ARM.exidx.text._ZN7Counter3addEb) refers to counter.o(.text._ZN7Counter3addEb) for [Anonymous Symbol]
    counter.o(.text._ZN7Counter3subEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    counter.o(.text._ZN7Counter3subEb) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for RFimpulse::get()
    counter.o(.ARM.exidx.text._ZN7Counter3subEb) refers to counter.o(.text._ZN7Counter3subEb) for [Anonymous Symbol]
    counter.o(.ARM.exidx.text._ZN7Counter3getEv) refers to counter.o(.text._ZN7Counter3getEv) for [Anonymous Symbol]
    counter.o(.text._ZN7CounterpLEb) refers to counter.o(.text._ZN7Counter3addEb) for Counter::add(bool)
    counter.o(.ARM.exidx.text._ZN7CounterpLEb) refers to counter.o(.text._ZN7CounterpLEb) for [Anonymous Symbol]
    counter.o(.text._ZN7CountermIEb) refers to counter.o(.text._ZN7Counter3subEb) for Counter::sub(bool)
    counter.o(.ARM.exidx.text._ZN7CountermIEb) refers to counter.o(.text._ZN7CountermIEb) for [Anonymous Symbol]
    counter.o(.ARM.exidx.text._ZN7Counter9getOutRefEv) refers to counter.o(.text._ZN7Counter9getOutRefEv) for [Anonymous Symbol]
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_md.o(RESET) refers to main.o(.text.TIM2_IRQHandler) for TIM2_IRQHandler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    system_stm32f10x.o(.text.SystemInit) refers to system_stm32f10x.o(.text.SetSysClock) for SetSysClock
    system_stm32f10x.o(.ARM.exidx.text.SystemInit) refers to system_stm32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(.ARM.exidx.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClock) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72) refers to system_stm32f10x.o(.text.SetSysClockTo72) for [Anonymous Symbol]
    atexit_cxa.o(.text) refers to cxa_atexit.o(.text) for __cxa_atexit
    atexit_cxa.o(.ARM.exidx) refers to atexit_cxa.o(.text) for .text
    cxa_atexit.o(.text) refers to aeabi_atexit.o(.text) for __aeabi_atexit
    cxa_atexit.o(.ARM.exidx) refers to cxa_atexit.o(.text) for .text
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    init_aeabi.o(.emb_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.init_array) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.dummy_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers to init_aeabi.o(.text) for .text
    faddsub_clz.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$fadd) refers to faddsub_clz.o(x$fpl$fsub) for _fsub1
    faddsub_clz.o(x$fpl$fadd) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    faddsub_clz.o(x$fpl$fadd) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    faddsub_clz.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$frsb) refers to faddsub_clz.o(x$fpl$fadd) for _fadd1
    faddsub_clz.o(x$fpl$frsb) refers to faddsub_clz.o(x$fpl$fsub) for _fsub1
    faddsub_clz.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$fsub) refers to faddsub_clz.o(x$fpl$fadd) for _fadd1
    faddsub_clz.o(x$fpl$fsub) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fcmp.o(x$fpl$fcmp) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(x$fpl$fcmp) refers to feqf.o(x$fpl$feqf) for _fcmpeq
    fcmp.o(x$fpl$fcmp) refers to fgeqf.o(x$fpl$fgeqf) for _fcmpge
    fcmp.o(x$fpl$fcmp) refers to fleqf.o(x$fpl$fleqf) for _fcmple
    fdiv.o(x$fpl$frdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(x$fpl$frdiv) refers to fdiv.o(x$fpl$fdiv) for _fdiv1
    fdiv.o(x$fpl$fdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(x$fpl$fdiv) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fdiv.o(x$fpl$fdiv) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    ffix.o(x$fpl$ffix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffix) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    ffix.o(x$fpl$ffixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffixr) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fflt_clz.o(x$fpl$ffltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$fflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$ffltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fmul.o(x$fpl$fmul) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    new.cpp.o(.text._ZSt17__throw_bad_allocv) refers to abort.o(.text) for abort
    new.cpp.o(.ARM.exidx.text._ZSt17__throw_bad_allocv) refers to new.cpp.o(.text._ZSt17__throw_bad_allocv) for [Anonymous Symbol]
    new.cpp.o(.text._Znwj) refers to h1_alloc.o(.text) for malloc
    new.cpp.o(.text._Znwj) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for std::get_new_handler()
    new.cpp.o(.ARM.exidx.text._Znwj) refers to new.cpp.o(.text._Znwj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjRKSt9nothrow_t) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    new.cpp.o(.ARM.exidx.text._ZnwjRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._Znaj) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    new.cpp.o(.ARM.exidx.text._Znaj) refers to new.cpp.o(.text._Znaj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajRKSt9nothrow_t) refers to new.cpp.o(.text._Znaj) for operator new[](unsigned int)
    new.cpp.o(.ARM.exidx.text._ZnajRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPv) refers to h1_free.o(.text) for free
    new.cpp.o(.ARM.exidx.text._ZdlPv) refers to new.cpp.o(.text._ZdlPv) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdlPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvj) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdlPvj) refers to new.cpp.o(.text._ZdlPvj) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPv) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdaPv) refers to new.cpp.o(.text._ZdaPv) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPv) for operator delete[](void*)
    new.cpp.o(.ARM.exidx.text._ZdaPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvj) refers to new.cpp.o(.text._ZdaPv) for operator delete[](void*)
    new.cpp.o(.ARM.exidx.text._ZdaPvj) refers to new.cpp.o(.text._ZdaPvj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjSt11align_val_t) refers to h1_memalign.o(.text) for posix_memalign
    new.cpp.o(.text._ZnwjSt11align_val_t) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for std::get_new_handler()
    new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for operator new(unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajSt11align_val_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for operator new(unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_t) refers to new.cpp.o(.text._ZnajSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajSt11align_val_t) for operator new[](unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvSt11align_val_t) refers to h1_free.o(.text) for free
    new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvjSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdlPvjSt11align_val_t) refers to new.cpp.o(.text._ZdlPvjSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for operator delete[](void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvjSt11align_val_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for operator delete[](void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvjSt11align_val_t) refers to new.cpp.o(.text._ZdaPvjSt11align_val_t) for [Anonymous Symbol]
    cxa_aux_runtime.cpp.o(.text.__cxa_bad_cast) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    cxa_aux_runtime.cpp.o(.ARM.exidx.text.__cxa_bad_cast) refers to cxa_aux_runtime.cpp.o(.text.__cxa_bad_cast) for [Anonymous Symbol]
    cxa_aux_runtime.cpp.o(.text.__cxa_bad_typeid) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    cxa_aux_runtime.cpp.o(.ARM.exidx.text.__cxa_bad_typeid) refers to cxa_aux_runtime.cpp.o(.text.__cxa_bad_typeid) for [Anonymous Symbol]
    cxa_aux_runtime.cpp.o(.text.__cxa_throw_bad_array_new_length) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    cxa_aux_runtime.cpp.o(.ARM.exidx.text.__cxa_throw_bad_array_new_length) refers to cxa_aux_runtime.cpp.o(.text.__cxa_throw_bad_array_new_length) for [Anonymous Symbol]
    cxa_virtual.cpp.o(.text.__cxa_pure_virtual) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_pure_virtual) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for [Anonymous Symbol]
    cxa_virtual.cpp.o(.text.__cxa_deleted_virtual) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_deleted_virtual) refers to cxa_virtual.cpp.o(.text.__cxa_deleted_virtual) for [Anonymous Symbol]
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_alloc.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_memalign.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_free_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign_threads.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_memalign_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.__Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.free$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.malloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.posix_memalign$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to h1_free.o(.text) for free
    heap2.o(i.realloc$realtime) refers to h1_alloc.o(.text) for malloc
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i._FDIterate) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.__Heap_Initialize$realtime$concurrent) refers to mutex_dummy.o(.text) for _mutex_initialize
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers to heap2_threads.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(i._FDIterate) for _FDIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.free$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.malloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_free.o(.text) for free
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_alloc.o(.text) for malloc
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    abort.o(.text) refers to defsig_abrt_outer.o(.text) for __rt_SIGABRT
    abort.o(.text) refers (Weak) to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    abort.o(.text) refers to sys_exit.o(.text) for _sys_exit
    atexit_aeabi.o(.text) refers to aeabi_atexit.o(.text) for __aeabi_atexit
    atexit_aeabi.o(.ARM.exidx) refers to atexit_aeabi.o(.text) for .text
    aeabi_atexit.o(.text) refers (Special) to cxa_finalize.o(.text) for __cxa_finalize
    aeabi_atexit.o(.text) refers to h1_alloc.o(.text) for malloc
    aeabi_atexit.o(.text) refers to rt_ddtor_pointer_addr_intlibspace.o(.text) for __rt_ddtor_pointer_addr
    aeabi_atexit.o(.ARM.exidx) refers (Special) to cxa_finalize.o(.text) for __cxa_finalize
    aeabi_atexit.o(.ARM.exidx) refers to aeabi_atexit.o(.text) for .text
    libinit2.o(.ARM.Collect$$libinit$$00000007) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000033) refers (Weak) to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    feqf.o(x$fpl$feqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    feqf.o(x$fpl$feqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    feqf.o(x$fpl$feqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    fgeqf.o(x$fpl$fgeqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fgeqf.o(x$fpl$fgeqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fgeqf.o(x$fpl$fgeqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    fleqf.o(x$fpl$fleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fleqf.o(x$fpl$fleqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fleqf.o(x$fpl$fleqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fretinf.o(x$fpl$fretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt14get_unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt12__unexpectedPFvvE) refers to cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt10unexpectedv) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_handlers.cpp.o(.text._ZSt10unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) for std::__unexpected(void (*)())
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt10unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt10unexpectedv) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt13get_terminatev) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt13get_terminatev) refers to cxa_handlers.cpp.o(.text._ZSt13get_terminatev) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt11__terminatePFvvE) refers to cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt9terminatev) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_handlers.cpp.o(.text._ZSt9terminatev) refers to cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) for std::__terminate(void (*)())
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt9terminatev) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) refers to cxa_default_handlers.cpp.o(.bss.__cxa_new_handler) for __cxa_new_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt15get_new_handlerv) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for [Anonymous Symbol]
    abort_message.cpp.o(.text.abort_message) refers to abort.o(.text) for abort
    abort_message.cpp.o(.ARM.exidx.text.abort_message) refers to abort_message.cpp.o(.text.abort_message) for [Anonymous Symbol]
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_ddtor_pointer_addr.o(.text) refers to rt_ddtor_pointer_addr.o(.bss) for __rt_ddtor_pointer_addr_data
    rt_ddtor_pointer_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000007) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc1.o(.text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init.o(.text) for __Heap_Initialize
    h1_init_threads.o(.text) refers to mutex_dummy.o(.text) for _mutex_initialize
    cxa_finalize.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000001) for __rt_lib_shutdown_cpp_2
    cxa_finalize.o(.text) refers to rt_ddtor_pointer_addr_intlibspace.o(.text) for __rt_ddtor_pointer_addr
    cxa_finalize.o(.text) refers to h1_free.o(.text) for free
    cxa_finalize.o(.ARM.exidx) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000001) for __rt_lib_shutdown_cpp_2
    cxa_finalize.o(.ARM.exidx) refers to cxa_finalize.o(.text) for .text
    defsig_abrt_outer.o(.text) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig_abrt_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_abrt_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    fcmpi.o(x$fpl$fcmpinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt14set_unexpectedPFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) refers to abort.o(.text) for abort
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt13set_terminatePFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE) refers to cxa_default_handlers.cpp.o(.bss.__cxa_new_handler) for __cxa_new_handler
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt15set_new_handlerPFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) refers to abort.o(.text) for abort
    cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    maybetermalloc2.o(.text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free.o(.text) for free
    h1_extend_threads.o(.text) refers to h1_free_threads.o(.text) for free_internal$concurrent
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libshutdown2.o(.ARM.Collect$$libshutdown$$00000001) refers (Weak) to cxa_finalize.o(.text) for __cxa_finalize
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final.o(.text) for __Heap_Finalize
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    defsig.o(CL$$defsig) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    main.o(.text._ZN5ScaleIfsEC2Effss) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for IUpdatedSomewhere::IUpdatedSomewhere__sub_object()
    main.o(.text._ZN5ScaleIfsEC2Effss) refers to main.o(.rodata._ZTV5ScaleIfsE) for vtable for Scale<float, short>
    main.o(.ARM.exidx.text._ZN5ScaleIfsEC2Effss) refers to main.o(.text._ZN5ScaleIfsEC2Effss) for [Anonymous Symbol]
    main.o(.text._ZN17IUpdatedSomewhereC2Ev) refers to main.o(.rodata._ZTV17IUpdatedSomewhere) for vtable for IUpdatedSomewhere
    main.o(.ARM.exidx.text._ZN17IUpdatedSomewhereC2Ev) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for [Anonymous Symbol]
    main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) refers to ffix.o(x$fpl$ffix) for __aeabi_f2iz
    main.o(.ARM.exidx.text._ZN5ScaleIfsE15updateSomewhereEv) refers to main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) for [Anonymous Symbol]
    main.o(.rodata._ZTV5ScaleIfsE) refers to main.o(.text._ZN5ScaleIfsE15updateSomewhereEv) for Scale<float, short>::updateSomewhere()
    main.o(.rodata._ZTV17IUpdatedSomewhere) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    test_task.o(.text._ZN5ScaleIfsEaSEf) refers to test_task.o(.text._ZN5ScaleIfsE3setEf) for Scale<float, short>::set(float)
    test_task.o(.ARM.exidx.text._ZN5ScaleIfsEaSEf) refers to test_task.o(.text._ZN5ScaleIfsEaSEf) for [Anonymous Symbol]
    test_task.o(.ARM.exidx.text._ZN5ScaleIfsE3getEv) refers to test_task.o(.text._ZN5ScaleIfsE3getEv) for [Anonymous Symbol]
    test_task.o(.text._ZN5ScaleIfsE3setEf) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    test_task.o(.ARM.exidx.text._ZN5ScaleIfsE3setEf) refers to test_task.o(.text._ZN5ScaleIfsE3setEf) for [Anonymous Symbol]
    test_task.o(.text._Z5limitIfET_S0_S0_S0_) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmple
    test_task.o(.text._Z5limitIfET_S0_S0_S0_) refers to test_task.o(.text._Z6toggleIfEvPT_S1_) for void toggle<float>(float*, float*)
    test_task.o(.ARM.exidx.text._Z5limitIfET_S0_S0_S0_) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for [Anonymous Symbol]
    test_task.o(.ARM.exidx.text._Z6toggleIfEvPT_S1_) refers to test_task.o(.text._Z6toggleIfEvPT_S1_) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._Z11setRegisterIVjEvPT_jj) refers to init.o(.text._Z11setRegisterIVjEvPT_jj) for [Anonymous Symbol]
    init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) refers to common.o(.text._Z11getPositionj) for getPosition(unsigned int)
    init.o(.ARM.exidx.text._Z17setBitsInRegisterIVjEvPT_jj) refers to init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for [Anonymous Symbol]
    init.o(.text._Z17setBitsInRegisterIVtEvPT_jj) refers to common.o(.text._Z11getPositionj) for getPosition(unsigned int)
    init.o(.ARM.exidx.text._Z17setBitsInRegisterIVtEvPT_jj) refers to init.o(.text._Z17setBitsInRegisterIVtEvPT_jj) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN5ScaleItfEC2Ettff) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for IUpdatedSomewhere::IUpdatedSomewhere__sub_object()
    analog_monitor.o(.text._ZN5ScaleItfEC2Ettff) refers to analog_monitor.o(.rodata._ZTV5ScaleItfE) for vtable for Scale<unsigned short, float>
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfEC2Ettff) refers to analog_monitor.o(.text._ZN5ScaleItfEC2Ettff) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN5ScaleItfEaSEt) refers to analog_monitor.o(.text._ZN5ScaleItfE3setEt) for Scale<unsigned short, float>::set(unsigned short)
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfEaSEt) refers to analog_monitor.o(.text._ZN5ScaleItfEaSEt) for [Anonymous Symbol]
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE3getEv) refers to analog_monitor.o(.text._ZN5ScaleItfE3getEv) for [Anonymous Symbol]
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE8getInRefEv) refers to analog_monitor.o(.text._ZN5ScaleItfE8getInRefEv) for [Anonymous Symbol]
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE9getOutRefEv) refers to analog_monitor.o(.text._ZN5ScaleItfE9getOutRefEv) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE15updateSomewhereEv) refers to analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN5ScaleItfE3setEt) refers to analog_monitor.o(.text._Z5limitItET_S0_S0_S0_) for unsigned short limit<unsigned short>(unsigned short, unsigned short, unsigned short)
    analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE3setEt) refers to analog_monitor.o(.text._ZN5ScaleItfE3setEt) for [Anonymous Symbol]
    analog_monitor.o(.text._Z5limitItET_S0_S0_S0_) refers to analog_monitor.o(.text._Z6toggleItEvPT_S1_) for void toggle<unsigned short>(unsigned short*, unsigned short*)
    analog_monitor.o(.ARM.exidx.text._Z5limitItET_S0_S0_S0_) refers to analog_monitor.o(.text._Z5limitItET_S0_S0_S0_) for [Anonymous Symbol]
    analog_monitor.o(.ARM.exidx.text._Z6toggleItEvPT_S1_) refers to analog_monitor.o(.text._Z6toggleItEvPT_S1_) for [Anonymous Symbol]
    analog_monitor.o(.rodata._ZTV13AnalogMonitor) refers to monitor.o(.text._ZN7Monitor9update1msEv) for Monitor::update1ms()
    analog_monitor.o(.rodata._ZTV5ScaleItfE) refers to analog_monitor.o(.text._ZN5ScaleItfE15updateSomewhereEv) for Scale<unsigned short, float>::updateSomewhere()
    analog_out.o(.text._ZN5ScaleIftEC2Efftt) refers to main.o(.text._ZN17IUpdatedSomewhereC2Ev) for IUpdatedSomewhere::IUpdatedSomewhere__sub_object()
    analog_out.o(.text._ZN5ScaleIftEC2Efftt) refers to analog_out.o(.rodata._ZTV5ScaleIftE) for vtable for Scale<float, unsigned short>
    analog_out.o(.ARM.exidx.text._ZN5ScaleIftEC2Efftt) refers to analog_out.o(.text._ZN5ScaleIftEC2Efftt) for [Anonymous Symbol]
    analog_out.o(.text._ZN5ScaleIftE3setEf) refers to test_task.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    analog_out.o(.ARM.exidx.text._ZN5ScaleIftE3setEf) refers to analog_out.o(.text._ZN5ScaleIftE3setEf) for [Anonymous Symbol]
    analog_out.o(.ARM.exidx.text._ZN5ScaleIftE9getOutRefEv) refers to analog_out.o(.text._ZN5ScaleIftE9getOutRefEv) for [Anonymous Symbol]
    analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) refers to ffix.o(x$fpl$ffix) for __aeabi_f2iz
    analog_out.o(.ARM.exidx.text._ZN5ScaleIftE15updateSomewhereEv) refers to analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) for [Anonymous Symbol]
    analog_out.o(.rodata._ZTV5ScaleIftE) refers to analog_out.o(.text._ZN5ScaleIftE15updateSomewhereEv) for Scale<float, unsigned short>::updateSomewhere()
    coil.o(.text._ZN12ProgrammCoilC2Ev) refers to coil.o(.text._ZN7ISwitchC2Ev) for ISwitch::ISwitch__sub_object()
    coil.o(.text._ZN12ProgrammCoilC2Ev) refers to coil.o(.rodata._ZTV12ProgrammCoil) for vtable for ProgrammCoil
    coil.o(.ARM.exidx.text._ZN12ProgrammCoilC2Ev) refers to coil.o(.text._ZN12ProgrammCoilC2Ev) for [Anonymous Symbol]
    coil.o(.text._ZN11IUpdated1msC2Ev) refers to coil.o(.rodata._ZTV11IUpdated1ms) for vtable for IUpdated1ms
    coil.o(.ARM.exidx.text._ZN11IUpdated1msC2Ev) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for [Anonymous Symbol]
    coil.o(.text._ZN7ISwitchC2Ev) refers to coil.o(.rodata._ZTV7ISwitch) for vtable for ISwitch
    coil.o(.ARM.exidx.text._ZN7ISwitchC2Ev) refers to coil.o(.text._ZN7ISwitchC2Ev) for [Anonymous Symbol]
    coil.o(.rodata._ZTV7ISwitch) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    coil.o(.rodata._ZTV11IUpdated1ms) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    on_delay.o(.rodata._ZTV13OnDelayCommon) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    off_delay.o(.rodata._ZTV14OffDelayCommon) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    pulse.o(.rodata._ZTV11PulseCommon) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    pid.o(.text._Z3absIfET_S0_) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpge
    pid.o(.ARM.exidx.text._Z3absIfET_S0_) refers to pid.o(.text._Z3absIfET_S0_) for [Anonymous Symbol]
    pid.o(.text._Z3maxIfET_S0_S0_) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmple
    pid.o(.ARM.exidx.text._Z3maxIfET_S0_S0_) refers to pid.o(.text._Z3maxIfET_S0_S0_) for [Anonymous Symbol]
    pid.o(.text._Z3minIfET_S0_S0_) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpge
    pid.o(.ARM.exidx.text._Z3minIfET_S0_S0_) refers to pid.o(.text._Z3minIfET_S0_S0_) for [Anonymous Symbol]
    ramp.o(.text._Z8getRangeIfET_PKS0_) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    ramp.o(.ARM.exidx.text._Z8getRangeIfET_PKS0_) refers to ramp.o(.text._Z8getRangeIfET_PKS0_) for [Anonymous Symbol]
    moving_avg.o(.ARM.exidx.text._Z3maxIhET_S0_S0_) refers to moving_avg.o(.text._Z3maxIhET_S0_S0_) for [Anonymous Symbol]


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.1), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.2), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.3), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.4), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.5), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.6), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.7), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.8), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.9), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.10), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.11), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.12), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.13), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.14), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.15), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.16), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationTickHook), (8 bytes).
    Removing main.o(.text.vApplicationMallocFailedHook), (4 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationMallocFailedHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.TIM2_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text._GLOBAL__sub_I_main.cpp), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing croutine.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (246 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (224 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (300 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (66 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (16 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (92 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (80 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (362 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (82 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (414 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.text.prvCopyDataToQueue), (204 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (46 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (210 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (194 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (38 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (342 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (198 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (96 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (20 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (140 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.prvInitialiseNewStreamBuffer), (64 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (44 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (100 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (58 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (88 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (24 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.prvBytesInBuffer), (56 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (322 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (128 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (186 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (242 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (134 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (74 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.prvReadBytesFromBuffer), (136 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (172 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (44 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (64 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (106 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (106 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (12 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteBytesToBuffer), (138 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (186 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (244 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (454 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (342 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (236 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (78 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (292 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetSchedulerState), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (348 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityDisinherit), (240 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (312 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (430 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (540 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (406 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (82 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (148 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (16 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (62 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (50 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (20 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (16 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing led_task.o(.text), (0 bytes).
    Removing led_task.o(.ARM.exidx.text._Z7ledTaskPv), (8 bytes).
    Removing test_task.o(.text), (0 bytes).
    Removing test_task.o(.ARM.exidx.text.__cxx_global_var_init), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._Z8testTaskPv), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._GLOBAL__sub_I_test_task.cpp), (8 bytes).
    Removing pidtask.o(.text), (0 bytes).
    Removing pidtask.o(.ARM.exidx.text._Z7pidTaskPv), (8 bytes).
    Removing common.o(.text), (0 bytes).
    Removing common.o(.text._Z10badTimeOutj), (34 bytes).
    Removing common.o(.ARM.exidx.text._Z10badTimeOutj), (8 bytes).
    Removing common.o(.ARM.exidx.text._Z11getPositionj), (8 bytes).
    Removing init.o(.text), (0 bytes).
    Removing init.o(.ARM.exidx.text._Z10commonInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL26__NVIC_SetPriorityGroupingj), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z7rccInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z8tickInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL16__NVIC_EnableIRQ4IRQn), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL18__NVIC_SetPriority4IRQnj), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z7adcInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z7pwmInitv), (8 bytes).
    Removing analog_monitor.o(.text), (0 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorC2Ehff), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorD2Ev), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor3setEt), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitoraSEt), (8 bytes).
    Removing analog_monitor.o(.text._ZN13AnalogMonitor8getInRefEv), (18 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor8getInRefEv), (8 bytes).
    Removing analog_monitor.o(.text._ZN13AnalogMonitor9getOutRefEv), (18 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor9getOutRefEv), (8 bytes).
    Removing analog_out.o(.text), (0 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOutC2Etjffff), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut9update1msEv), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOutD2Ev), (8 bytes).
    Removing analog_out.o(.text._ZN9AnalogOut3setEf), (20 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut3setEf), (8 bytes).
    Removing analog_out.o(.text._ZN9AnalogOut3getEv), (20 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut3getEv), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOutaSEf), (8 bytes).
    Removing analog_out.o(.text._ZN9AnalogOut8getInRefEv), (16 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut8getInRefEv), (8 bytes).
    Removing analog_out.o(.text._ZN9AnalogOut9getOutRefEv), (18 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut9getOutRefEv), (8 bytes).
    Removing coil.o(.text), (0 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil8isActiveEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil8setValueEb), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil3setEv), (20 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil3setEv), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil5resetEv), (20 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil5resetEv), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil6toggleEv), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil6toggleEv), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoilaSEb), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoilaSEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4CoilC2EP12GPIO_TypeDefh), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4Coil8isActiveEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4Coil8setValueEb), (8 bytes).
    Removing coil.o(.text._ZN4CoilaSEb), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4CoilaSEb), (8 bytes).
    Removing coil.o(.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht), (80 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilOnDelayC2EP12GPIO_TypeDefht), (8 bytes).
    Removing coil.o(.text._ZN11CoilOnDelay9update1msEv), (38 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilOnDelay9update1msEv), (8 bytes).
    Removing coil.o(.text._ZThn32_N11CoilOnDelay9update1msEv), (14 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn32_N11CoilOnDelay9update1msEv), (8 bytes).
    Removing coil.o(.text._ZN11CoilOnDelay8setValueEb), (28 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilOnDelay8setValueEb), (8 bytes).
    Removing coil.o(.text._ZThn16_N11CoilOnDelay8setValueEb), (26 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn16_N11CoilOnDelay8setValueEb), (8 bytes).
    Removing coil.o(.text._ZN11CoilOnDelayaSEb), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilOnDelayaSEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12CoilOffDelayC2EP12GPIO_TypeDefht), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12CoilOffDelay9update1msEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn32_N12CoilOffDelay9update1msEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12CoilOffDelay8setValueEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn16_N12CoilOffDelay8setValueEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12CoilOffDelayaSEb), (8 bytes).
    Removing coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht), (80 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulseC2EP12GPIO_TypeDefht), (8 bytes).
    Removing coil.o(.text._ZN9CoilPulse9update1msEv), (38 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulse9update1msEv), (8 bytes).
    Removing coil.o(.text._ZThn32_N9CoilPulse9update1msEv), (14 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn32_N9CoilPulse9update1msEv), (8 bytes).
    Removing coil.o(.text._ZN9CoilPulse8setValueEb), (28 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulse8setValueEb), (8 bytes).
    Removing coil.o(.text._ZThn16_N9CoilPulse8setValueEb), (26 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn16_N9CoilPulse8setValueEb), (8 bytes).
    Removing coil.o(.text._ZN9CoilPulseaSEb), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulseaSEb), (8 bytes).
    Removing coil.o(.rodata._ZTV11CoilOnDelay), (48 bytes).
    Removing coil.o(.rodata._ZTV9CoilPulse), (48 bytes).
    Removing gpio_common.o(.text), (0 bytes).
    Removing gpio_common.o(.ARM.exidx.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh), (8 bytes).
    Removing simple_input.o(.text), (0 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInputC2EP12GPIO_TypeDefh), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInput8isActiveEv), (8 bytes).
    Removing simple_input.o(.text._ZN11SimpleInput11isNotActiveEv), (22 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInput11isNotActiveEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed9update1msEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZThn32_N18SimpleInputDelayed9update1msEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed8isActiveEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZThn16_N18SimpleInputDelayed8isActiveEv), (8 bytes).
    Removing switch_delay.o(.text), (0 bytes).
    Removing switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht), (60 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZN11SwitchDelayC2EP7ISwitcht), (8 bytes).
    Removing switch_delay.o(.text._ZN11SwitchDelay9update1msEv), (16 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay9update1msEv), (8 bytes).
    Removing switch_delay.o(.text._ZThn16_N11SwitchDelay9update1msEv), (14 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZThn16_N11SwitchDelay9update1msEv), (8 bytes).
    Removing switch_delay.o(.text._ZN11SwitchDelay7startedEv), (20 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay7startedEv), (8 bytes).
    Removing switch_delay.o(.rodata._ZTV11SwitchDelay), (28 bytes).
    Removing rf_impulse.o(.text), (0 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseC2E7IMPULSE), (8 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3setEb), (8 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3getEv), (8 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseaSEb), (8 bytes).
    Removing common_timer.o(.text), (0 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimerC2Ej), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6updateEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer8finishedEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer9getPeriodEv), (12 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer9getPeriodEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer9setPeriodEj), (16 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer9setPeriodEj), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer14getCurrentTimeEv), (12 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer14getCurrentTimeEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer14setCurrentTimeEj), (16 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer14setCurrentTimeEj), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer5startEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer5pauseEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer4stopEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer5resetEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer15prepareAndStartEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6finishEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer8setStartEb), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimeraSEb), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer7startedEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer10notStartedEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer11notFinishedEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer15finishedImpulseEv), (76 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer15finishedImpulseEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6inWorkEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6isFreeEv), (8 bytes).
    Removing on_delay.o(.text), (0 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN13OnDelayCommonC2Ej), (8 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon6updateEv), (8 bytes).
    Removing on_delay.o(.text._ZN13OnDelayCommon3setEb), (28 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon3setEb), (8 bytes).
    Removing on_delay.o(.text._ZN13OnDelayCommon3getEv), (16 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon3getEv), (8 bytes).
    Removing on_delay.o(.text._ZN13OnDelayCommon5resetEv), (16 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN13OnDelayCommon5resetEv), (8 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelayC2Ej), (8 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelay9update1msEv), (8 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZThn16_N7OnDelay9update1msEv), (8 bytes).
    Removing on_delay.o(.text._ZN7OnDelayaSEb), (32 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelayaSEb), (8 bytes).
    Removing off_delay.o(.text), (0 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN14OffDelayCommonC2Ej), (8 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon6updateEv), (8 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon3setEb), (8 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon3getEv), (8 bytes).
    Removing off_delay.o(.text._ZN14OffDelayCommon5resetEv), (16 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN14OffDelayCommon5resetEv), (8 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelayC2Ej), (8 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelay9update1msEv), (8 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZThn16_N8OffDelay9update1msEv), (8 bytes).
    Removing off_delay.o(.text._ZN8OffDelayaSEb), (32 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelayaSEb), (8 bytes).
    Removing pulse.o(.text), (0 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN11PulseCommonC2Ej), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN11PulseCommon6updateEv), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN11PulseCommon3setEb), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN11PulseCommon3getEv), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN11PulseCommon5resetEv), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5PulseC2Ej), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5Pulse9update1msEv), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZThn16_N5Pulse9update1msEv), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5PulseaSEb), (8 bytes).
    Removing pulse.o(.text._ZN14PulseInterraptC2Ej), (50 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN14PulseInterraptC2Ej), (8 bytes).
    Removing pulse.o(.text._ZN14PulseInterrapt3setEb), (48 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN14PulseInterrapt3setEb), (8 bytes).
    Removing pulse.o(.text._ZN14PulseInterraptaSEb), (32 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN14PulseInterraptaSEb), (8 bytes).
    Removing pid.o(.text), (0 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDregC2Etfffffffb), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg10updateKoefEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5resetEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg4getTEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5setPvEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5getPvEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5getPvEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5setSpEf), (16 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5setSpEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5getSpEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5getSpEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5setKpEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5getKpEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5getKpEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5setTiEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5getTiEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5getTiEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5setTdEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5getTdEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5getTdEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5setDbEf), (26 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5setDbEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg5getDbEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg5getDbEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg11setUpOutLimEf), (28 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg11setUpOutLimEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg11getUpOutLimEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg11getUpOutLimEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg13setDownOutLimEf), (28 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg13setDownOutLimEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg13getDownOutLimEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg13getDownOutLimEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg6setOutEf), (46 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg6setOutEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg6getOutEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg6getOutEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg7setAutoEb), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg6isAUTOEv), (18 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg6isAUTOEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg10setInverseEb), (26 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg10setInverseEb), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg9isInverseEv), (18 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg9isInverseEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg15updateSomewhereEv), (8 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDregaSEf), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg8getPvRefEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg8getPvRefEv), (8 bytes).
    Removing pid.o(.text._ZN6PIDreg9getOutRefEv), (12 bytes).
    Removing pid.o(.ARM.exidx.text._ZN6PIDreg9getOutRefEv), (8 bytes).
    Removing ramp.o(.text), (0 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4RampC2Ejffff), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp9setLimMaxEf), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp16setFullRangeTimeEj), (8 bytes).
    Removing ramp.o(.text._ZN4RampC2Ejff), (42 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4RampC2Ejff), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4RampC2Ej), (8 bytes).
    Removing ramp.o(.text._ZN4Ramp9getOutMinEv), (12 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp9getOutMinEv), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp11getOutRangeEv), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp9update1msEv), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp3getEv), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp3setEf), (8 bytes).
    Removing ramp.o(.text._ZN4Ramp16getFullRangeTimeEv), (12 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp16getFullRangeTimeEv), (8 bytes).
    Removing ramp.o(.text._ZN4Ramp9setLimMinEf), (28 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp9setLimMinEf), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4RampaSEf), (8 bytes).
    Removing ramp.o(.text._ZN4Ramp8getSpRefEv), (12 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp8getSpRefEv), (8 bytes).
    Removing ramp.o(.text._ZN4Ramp9getOutRefEv), (12 bytes).
    Removing ramp.o(.ARM.exidx.text._ZN4Ramp9getOutRefEv), (8 bytes).
    Removing three_pos.o(.text), (0 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosRegC2Efffttb), (8 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12setPulseGistEf), (8 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosRegD2Ev), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg3setEf), (16 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg3setEf), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosRegaSEf), (24 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosRegaSEf), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg5setSpEf), (16 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg5setSpEf), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg5getSpEv), (12 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg5getSpEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg11setZeroGistEf), (34 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg11setZeroGistEf), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg11getZeroGistEv), (12 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg11getZeroGistEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg12getPulseGistEv), (12 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12getPulseGistEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg12setPauseTimeEt), (26 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12setPauseTimeEt), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg12getPauseTimeEv), (20 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12getPauseTimeEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg12setPulseTimeEt), (26 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12setPulseTimeEt), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg12getPulseTimeEv), (20 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg12getPulseTimeEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg10setReverseEb), (24 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10setReverseEb), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg10getReverseEv), (16 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10getReverseEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg7getOut1Ev), (54 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg7getOut1Ev), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg7getOut2Ev), (54 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg7getOut2Ev), (8 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg17impulseCycleEndedEv), (8 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg21halfImpulseCycleEndedEv), (8 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg9update1msEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg8getInRefEv), (12 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg8getInRefEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg10getOut1RefEv), (38 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10getOut1RefEv), (8 bytes).
    Removing three_pos.o(.text._ZN11ThreePosReg10getOut2RefEv), (38 bytes).
    Removing three_pos.o(.ARM.exidx.text._ZN11ThreePosReg10getOut2RefEv), (8 bytes).
    Removing two_pos.o(.text), (0 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommonC2Efb), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon3setEf), (16 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon3setEf), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon3getEv), (22 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon3getEv), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon5setSpEf), (16 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon5setSpEf), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon5getSpEv), (12 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon5getSpEv), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon10setReverseEb), (24 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon10setReverseEb), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon10getReverseEv), (16 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon10getReverseEv), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon8getInRefEv), (10 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon8getInRefEv), (8 bytes).
    Removing two_pos.o(.text._ZN12TwoPosCommon9getOutRefEv), (12 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN12TwoPosCommon9getOutRefEv), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGistC2Efffb), (82 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGistC2Efffb), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGist10setLowGistEf), (28 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGist10setLowGistEf), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGist11setHighGistEf), (28 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGist11setHighGistEf), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGist3setEf), (32 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGist3setEf), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGist10getLowGistEv), (12 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGist10getLowGistEv), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGist11getHighGistEv), (12 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGist11getHighGistEv), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGist15updateSomewhereEv), (90 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGist15updateSomewhereEv), (8 bytes).
    Removing two_pos.o(.text._ZN10TwoPosGistaSEf), (24 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN10TwoPosGistaSEf), (8 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTimC2Efttb), (8 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTimD2Ev), (8 bytes).
    Removing two_pos.o(.text._ZN9TwoPosTim10setLowTimeEt), (26 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTim10setLowTimeEt), (8 bytes).
    Removing two_pos.o(.text._ZN9TwoPosTim10getLowTimeEv), (20 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTim10getLowTimeEv), (8 bytes).
    Removing two_pos.o(.text._ZN9TwoPosTim11setHighTimeEt), (26 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTim11setHighTimeEt), (8 bytes).
    Removing two_pos.o(.text._ZN9TwoPosTim11getHighTimeEv), (20 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTim11getHighTimeEv), (8 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTim9update1msEv), (8 bytes).
    Removing two_pos.o(.text._ZN9TwoPosTimaSEf), (26 bytes).
    Removing two_pos.o(.ARM.exidx.text._ZN9TwoPosTimaSEf), (8 bytes).
    Removing two_pos.o(.rodata._ZTV10TwoPosGist), (12 bytes).
    Removing sequence.o(.text), (0 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8SequenceC2EPhh), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence8isMyStepEv), (8 bytes).
    Removing sequence.o(.text._ZN8Sequence5resetEv), (24 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence5resetEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence5startEb), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence4lockEb), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence6finishEb), (8 bytes).
    Removing sequence.o(.text._ZN8Sequence6slfSetEbbb), (80 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence6slfSetEbbb), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence7startedEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence6lockedEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence8finishedEv), (8 bytes).
    Removing sequence.o(.text._ZN8Sequence15finishedImpulseEv), (16 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence15finishedImpulseEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN15SequenceDelayedC2EPhhj), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN15SequenceDelayed9update1msEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZThn28_N15SequenceDelayed9update1msEv), (8 bytes).
    Removing monitor.o(.text), (0 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7MonitorC2Eff), (8 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor11setValueMaxEf), (8 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7MonitorD2Ev), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor11setValueMinEf), (28 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor11setValueMinEf), (8 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor9update1msEv), (8 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor3getEv), (8 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor3setEf), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor11setTresholdE9TRES_TYPEt), (42 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor11setTresholdE9TRES_TYPEt), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor12setTresDelayE9TRES_TYPEt), (38 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor12setTresDelayE9TRES_TYPEt), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor11isHighAlarmEv), (18 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor11isHighAlarmEv), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor10isHighWarnEv), (18 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor10isHighWarnEv), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor9isLowWarnEv), (18 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor9isLowWarnEv), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor10isLowAlarmEv), (18 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor10isLowAlarmEv), (8 bytes).
    Removing monitor.o(.text._ZN7MonitoraSEf), (24 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7MonitoraSEf), (8 bytes).
    Removing monitor.o(.text._ZN7Monitor8getInRefEv), (12 bytes).
    Removing monitor.o(.ARM.exidx.text._ZN7Monitor8getInRefEv), (8 bytes).
    Removing moving_avg.o(.text), (0 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvgC2Eh), (8 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvgD2Ev), (8 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvg3setEf), (8 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvg3getEv), (8 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvg15updateSomewhereEv), (8 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvgaSEf), (8 bytes).
    Removing moving_avg.o(.text._ZN6MovAvg8getInRefEv), (12 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvg8getInRefEv), (8 bytes).
    Removing moving_avg.o(.text._ZN6MovAvg9getOutRefEv), (12 bytes).
    Removing moving_avg.o(.ARM.exidx.text._ZN6MovAvg9getOutRefEv), (8 bytes).
    Removing counter.o(.text), (0 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7CounterC2E7IMPULSEj), (8 bytes).
    Removing counter.o(.text._ZN7Counter3addEb), (50 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7Counter3addEb), (8 bytes).
    Removing counter.o(.text._ZN7Counter3subEb), (50 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7Counter3subEb), (8 bytes).
    Removing counter.o(.text._ZN7Counter3getEv), (12 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7Counter3getEv), (8 bytes).
    Removing counter.o(.text._ZN7CounterpLEb), (32 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7CounterpLEb), (8 bytes).
    Removing counter.o(.text._ZN7CountermIEb), (32 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7CountermIEb), (8 bytes).
    Removing counter.o(.text._ZN7Counter9getOutRefEv), (12 bytes).
    Removing counter.o(.ARM.exidx.text._ZN7Counter9getOutRefEv), (8 bytes).
    Removing system_stm32f10x.o(.text), (0 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72), (8 bytes).
    Removing new.cpp.o(.text), (0 bytes).
    Removing new.cpp.o(.text._ZSt17__throw_bad_allocv), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZSt17__throw_bad_allocv), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._Znwj), (8 bytes).
    Removing new.cpp.o(.text._ZnwjRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._Znaj), (8 bytes).
    Removing new.cpp.o(.text._ZnajRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPv), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvj), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPv), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvj), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvj), (8 bytes).
    Removing new.cpp.o(.text._ZnwjSt11align_val_t), (74 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZnajSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvjSt11align_val_t), (6 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvjSt11align_val_t), (6 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.rodata._ZSt7nothrow), (1 bytes).
    Removing cxa_aux_runtime.cpp.o(.text), (0 bytes).
    Removing cxa_aux_runtime.cpp.o(.text.__cxa_bad_cast), (4 bytes).
    Removing cxa_aux_runtime.cpp.o(.ARM.exidx.text.__cxa_bad_cast), (8 bytes).
    Removing cxa_aux_runtime.cpp.o(.text.__cxa_bad_typeid), (4 bytes).
    Removing cxa_aux_runtime.cpp.o(.ARM.exidx.text.__cxa_bad_typeid), (8 bytes).
    Removing cxa_aux_runtime.cpp.o(.ARM.exidx.text.__cxa_throw_bad_array_new_length), (8 bytes).
    Removing cxa_virtual.cpp.o(.text), (0 bytes).
    Removing cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_pure_virtual), (8 bytes).
    Removing cxa_virtual.cpp.o(.text.__cxa_deleted_virtual), (44 bytes).
    Removing cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_deleted_virtual), (8 bytes).
    Removing cxa_handlers.cpp.o(.text), (0 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv), (12 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt14get_unexpectedv), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE), (52 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt12__unexpectedPFvvE), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt10unexpectedv), (14 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt10unexpectedv), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt13get_terminatev), (12 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt13get_terminatev), (8 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt11__terminatePFvvE), (8 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt9terminatev), (8 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt15get_new_handlerv), (8 bytes).
    Removing abort_message.cpp.o(.text), (0 bytes).
    Removing abort_message.cpp.o(.ARM.exidx.text.abort_message), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text), (0 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE), (30 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt14set_unexpectedPFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE), (30 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt13set_terminatePFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE), (18 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt15set_new_handlerPFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler), (4 bytes).
    Removing main.o(.ARM.exidx.text._ZN5ScaleIfsEC2Effss), (8 bytes).
    Removing main.o(.ARM.exidx.text._ZN17IUpdatedSomewhereC2Ev), (8 bytes).
    Removing main.o(.ARM.exidx.text._ZN5ScaleIfsE15updateSomewhereEv), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._ZN5ScaleIfsEaSEf), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._ZN5ScaleIfsE3getEv), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._ZN5ScaleIfsE3setEf), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._Z5limitIfET_S0_S0_S0_), (8 bytes).
    Removing test_task.o(.ARM.exidx.text._Z6toggleIfEvPT_S1_), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z11setRegisterIVjEvPT_jj), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z17setBitsInRegisterIVjEvPT_jj), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z17setBitsInRegisterIVtEvPT_jj), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfEC2Ettff), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfEaSEt), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE3getEv), (8 bytes).
    Removing analog_monitor.o(.text._ZN5ScaleItfE8getInRefEv), (12 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE8getInRefEv), (8 bytes).
    Removing analog_monitor.o(.text._ZN5ScaleItfE9getOutRefEv), (12 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE9getOutRefEv), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE15updateSomewhereEv), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN5ScaleItfE3setEt), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._Z5limitItET_S0_S0_S0_), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._Z6toggleItEvPT_S1_), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN5ScaleIftEC2Efftt), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN5ScaleIftE3setEf), (8 bytes).
    Removing analog_out.o(.text._ZN5ScaleIftE9getOutRefEv), (12 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN5ScaleIftE9getOutRefEv), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN5ScaleIftE15updateSomewhereEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoilC2Ev), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11IUpdated1msC2Ev), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN7ISwitchC2Ev), (8 bytes).
    Removing pid.o(.ARM.exidx.text._Z3absIfET_S0_), (8 bytes).
    Removing pid.o(.ARM.exidx.text._Z3maxIfET_S0_S0_), (8 bytes).
    Removing pid.o(.text._Z3minIfET_S0_S0_), (38 bytes).
    Removing pid.o(.ARM.exidx.text._Z3minIfET_S0_S0_), (8 bytes).
    Removing ramp.o(.ARM.exidx.text._Z8getRangeIfET_PKS0_), (8 bytes).
    Removing moving_avg.o(.ARM.exidx.text._Z3maxIhET_S0_S0_), (8 bytes).

865 unused section(s) (total 22105 bytes) removed from the image.
